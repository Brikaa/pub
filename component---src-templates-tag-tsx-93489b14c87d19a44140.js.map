{"version":3,"sources":["webpack:///./src/templates/tag.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","tagQuery","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","_components__WEBPACK_IMPORTED_MODULE_2__","_hooks__WEBPACK_IMPORTED_MODULE_3__","TagTemplate","_ref","data","pageContext","siteMetadata","useSiteMetadata","nodes","allMarkdownRemark","title","tag","slug","totalPosts","currentPage","numberOfPosts","length","isFirstPage","a","property","content","name","data-react-helmet","url","size","map","_ref2","fields","frontmatter","excerpt","key","fluid","image","childImageSharp","file","publishDate","date","prefix","context"],"mappings":"2FAEAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,6BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAoDaI,EAAQ,aAoHNO,UA9EiC,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YACjDC,EAAeC,cACbC,EAAUJ,EAAKK,kBAAfD,MACKE,EAAyCL,EAA9CM,IAAYC,EAAkCP,EAAlCO,KAAMC,EAA4BR,EAA5BQ,WAAYC,EAAgBT,EAAhBS,YAChCC,EAAgBP,EAAMQ,OACtBC,EAA8B,IAAhBH,EAEpB,OACElB,EAAA,cAACI,EAAA,EAAD,KACGiB,EACCrB,EAAA,cAACE,EAAAoB,EAAD,KACEtB,EAAA,oCAAiBc,EAAjB,OAA6BJ,EAAaI,OAE1Cd,EAAA,sBACEuB,SAAS,WACTC,QAAO,SAAWV,EAAX,OAAuBJ,EAAaI,MAC3CW,KAAK,QACLC,oBAAkB,SAGpB1B,EAAA,sBACEuB,SAAS,SACTC,QAAYd,EAAaiB,IAAlB,aAAkCX,EAAlC,IACPU,oBAAkB,UAItB1B,EAAA,cAACE,EAAAoB,EAAD,KACEtB,EAAA,oCAAiBc,EAAjB,YAAkCI,EAAlC,MACER,EAAaI,OAGfd,EAAA,sBACEuB,SAAS,WACTC,QAAO,SAAWV,EAAX,YAA4BI,EAA5B,MACLR,EAAaI,MAEfW,KAAK,QACLC,oBAAkB,SAGpB1B,EAAA,sBACEuB,SAAS,SACTC,QAAYd,EAAaiB,IAAlB,aAAkCX,EAAlC,IACPU,oBAAkB,UAKxB1B,EAAA,cAACI,EAAA,EAAD,KACEJ,EAAA,cAACI,EAAA,EAAD,CAAWwB,KAAK,SACbX,EADH,QACoBE,EAAgB,EAAI,IAAM,GAD9C,aACkEL,EADlE,KAKAd,EAAA,cAACI,EAAA,EAAD,KACGQ,EAAMiB,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,YAAaC,EAAxBH,EAAwBG,QAAxB,OACTjC,EAAA,cAACI,EAAA,EAAD,CACE8B,IAAKH,EAAOf,KACZA,KAAMe,EAAOf,KACbiB,QAASA,EACTE,MACEH,EAAYI,MACRJ,EAAYI,MAAMC,gBAAgBF,MAClC3B,EAAK8B,KAAKD,gBAAgBF,MAEhCI,YAAaP,EAAYQ,KACzB1B,MAAOkB,EAAYlB,OAASiB,EAAOf,WAM3ChB,EAAA,cAACI,EAAA,EAAD,CAAYqC,OAAO,MAAMC,QAASjC","file":"component---src-templates-tag-tsx-93489b14c87d19a44140.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport {\n  Card,\n  CardList,\n  Container,\n  Layout,\n  PageTitle,\n  Pagination,\n} from '@components';\nimport { useSiteMetadata } from '@hooks';\n\ninterface PostNode {\n  excerpt: string;\n  frontmatter: {\n    date: string;\n    title: string;\n    image: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n  };\n  fields: {\n    slug: string;\n  };\n}\n\ninterface TagTemplateProps {\n  data: {\n    file: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    totalCount: number;\n    allMarkdownRemark: {\n      nodes: PostNode[];\n    };\n  };\n  pageContext: {\n    tag: string;\n    slug: string;\n    totalPosts: number;\n    limit?: number;\n    skip?: number;\n    numPages?: number;\n    currentPage?: number;\n  };\n}\n\nexport const tagQuery = graphql`\n  query($tag: String, $skip: Int!, $limit: Int!) {\n    file(relativePath: { eq: \"default-post-image.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1800) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      nodes {\n        excerpt(pruneLength: 80)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n/** Used by Gatsby to display the list of tags used in blog posts. */\nconst TagTemplate: React.FC<TagTemplateProps> = ({ data, pageContext }) => {\n  const siteMetadata = useSiteMetadata();\n  const { nodes } = data.allMarkdownRemark;\n  const { tag: title, slug, totalPosts, currentPage } = pageContext;\n  const numberOfPosts = nodes.length;\n  const isFirstPage = currentPage === 1;\n\n  return (\n    <Layout>\n      {isFirstPage ? (\n        <Helmet>\n          <title>{`Tag: \"${title}\" - ${siteMetadata.title}`}</title>\n\n          <meta\n            property=\"og:title\"\n            content={`Tag: \"${title}\" - ${siteMetadata.title}`}\n            name=\"title\"\n            data-react-helmet=\"true\"\n          />\n\n          <meta\n            property=\"og:url\"\n            content={`${siteMetadata.url}/blog/tag/${slug}/`}\n            data-react-helmet=\"true\"\n          />\n        </Helmet>\n      ) : (\n        <Helmet>\n          <title>{`Tag: \"${title}\" - Page ${currentPage} - ${\n            siteMetadata.title\n          }`}</title>\n\n          <meta\n            property=\"og:title\"\n            content={`Tag: \"${title}\" - Page ${currentPage} - ${\n              siteMetadata.title\n            }`}\n            name=\"title\"\n            data-react-helmet=\"true\"\n          />\n\n          <meta\n            property=\"og:url\"\n            content={`${siteMetadata.url}/blog/tag/${slug}/`}\n            data-react-helmet=\"true\"\n          />\n        </Helmet>\n      )}\n\n      <Container>\n        <PageTitle size=\"small\">\n          {totalPosts} Post{numberOfPosts > 1 ? 's' : ''} Tagged: &ldquo;{title}\n          &rdquo;\n        </PageTitle>\n\n        <CardList>\n          {nodes.map(({ fields, frontmatter, excerpt }) => (\n            <Card\n              key={fields.slug}\n              slug={fields.slug}\n              excerpt={excerpt}\n              fluid={\n                frontmatter.image\n                  ? frontmatter.image.childImageSharp.fluid\n                  : data.file.childImageSharp.fluid\n              }\n              publishDate={frontmatter.date}\n              title={frontmatter.title || fields.slug}\n            />\n          ))}\n        </CardList>\n      </Container>\n\n      <Pagination prefix=\"tag\" context={pageContext} />\n    </Layout>\n  );\n};\n\nexport default TagTemplate;\n"],"sourceRoot":""}