{"version":3,"sources":["webpack:///./src/components/projects/projects-gallery/card-button.tsx","webpack:///./src/components/projects/projects-gallery/card-tags.tsx","webpack:///./src/components/projects/projects-gallery/card-title.tsx","webpack:///./src/components/projects/projects-gallery/card.tsx","webpack:///./src/components/projects/projects-gallery/panel.tsx","webpack:///./src/components/projects/projects-gallery/projects-gallery.tsx","webpack:///./src/components/projects/project-workspace/project-workspace.tsx","webpack:///./src/pages/projects.tsx"],"names":["Button","styled","button","joined","theme","colors","text","highlight","props","disabled","greyDark","base","baseinvert","secondary","highlightLight","CardButton","children","statusText","onClick","useState","isRequestMade","setIsRequestMade","handleClick","e","a","preventDefault","Wrapper","div","hasMargin","Pill","attrs","shadow","CardTags","items","length","slice","map","key","h3","Icon","img","alt","clickable","CardTitle","name","communicationPlatformUrl","workspaceLogo","IconWrapper","href","title","target","rel","src","section","Description","p","Spacer","Footer","UserIcon","d","viewBox","fontSize","fill","Card","content","setError","hasMemberJoinedProject","setHasMemberJoinedProject","userId","UserAuthHelper","isUserAuthenticated","getUserId","useEffect","undefined","projectUsers","find","u","redirectToSignIn","navigate","state","message","leaveProject","project","api","ServiceResolver","apiResolver","projectUser","id","response","ok","projectUserIndex","indexOf","splice","data","joinProject","joinProjectResponseBody","projectId","isOwner","username","push","memberCount","data-testid","description","projectTechnologies","sizes","width","small","medium","Panel","workspaceLogos","v","communicationPlatform","ProjectsGallery","projects","setProjects","error","isLoading","setIsLoading","setWorkspaceLogos","success","setSuccess","getProjects","getWorkspaceTypes","workspaceTypes","workspaceDict","forEach","workspace","logoUrl","fetchWorkspaces","fetchProjects","page","type","Title","h1","ContentWrapper","LeftSide","RightSide","ProjectWorkspace","siteMetadata","useSiteMetadata","setProject","projectOwner","setProjectOwner","getProject","fetchProject","style","color","t","index","array","timezone","repositoryUrl","Projects","path"],"mappings":"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","file":"component---src-pages-projects-tsx-8564889ccf87e357b2bf.js","sourcesContent":["import React, { FC, useState } from 'react';\nimport styled from 'styled-components';\n\ntype CardButtonProps = {\n  statusText: string;\n  joined?: boolean;\n  disabled?: boolean;\n  onClick?: () => void;\n};\n\ntype ButtonProps = {\n  joined: boolean;\n};\n\nconst Button = styled.button<ButtonProps>`\n  color: ${({ joined, theme }) =>\n    joined ? theme.colors.text : theme.colors.highlight};\n  border-radius: 0.2em;\n  padding: 7px 25px;\n  transition: 0.15s;\n  opacity: ${(props) => (props.disabled ? '0.75' : '1')};\n  align-self: flex-end;\n\n  background: transparent;\n  border: 1px solid\n    ${({ joined, theme }) =>\n      joined ? theme.colors.greyDark : theme.colors.highlight};\n\n  @media (hover: hover) {\n    &:hover {\n      background: ${({ joined, theme }) =>\n        joined ? 'transparent' : theme.colors.highlight};\n      color: ${({ joined, theme }) =>\n        joined ? theme.colors.base : theme.colors.baseinvert};\n      border: 1px solid\n        ${({ joined, theme }) =>\n          joined ? theme.colors.base : theme.colors.highlight};\n      cursor: ${(props) => (props.disabled ? 'default' : 'pointer')};\n    }\n  }\n\n  :focus {\n    outline: none;\n    box-shadow: 0 0 0 4px\n      ${({ joined, theme }) =>\n        joined ? theme.colors.secondary : theme.colors.highlightLight};\n  }\n`;\n\nconst CardButton: FC<CardButtonProps> = ({\n  children,\n  joined = false,\n  disabled = false,\n  statusText,\n  onClick,\n}) => {\n  const [isRequestMade, setIsRequestMade] = useState(false);\n\n  const handleClick = async (e: React.MouseEvent) => {\n    e.preventDefault();\n\n    if (onClick && !isRequestMade) {\n      setIsRequestMade(true);\n      await onClick();\n      setIsRequestMade(false);\n    }\n  };\n\n  return (\n    <Button joined={joined} disabled={disabled} onClick={handleClick}>\n      {isRequestMade ? statusText : children}\n    </Button>\n  );\n};\n\nexport default CardButton;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\ntype Item = {\n  key: string;\n  text: string;\n};\n\ntype CardTagsProps = {\n  items: Item[];\n};\n\ntype WrapperProps = {\n  hasMargin?: boolean;\n};\n\nconst Wrapper = styled.div<WrapperProps>`\n  margin-bottom: ${({ hasMargin = false }) => (hasMargin ? '1em' : 0)};\n`;\n\nconst Pill = styled.div.attrs({ 'data-testid': 'project-card-pill' })`\n  background: ${({ theme }) => theme.colors.baseinvert};\n  border-radius: 0.3125em;\n  box-shadow: 1px 1px 2px ${({ theme }) => theme.colors.shadow};\n  color: ${({ theme }) => theme.colors.text};\n  display: inline-block;\n  font-size: 0.7em;\n  font-weight: 400;\n  margin-right: 0.5em;\n  padding: 0 0.625em;\n  transition: 0.2s;\n\n  &:last-child {\n    margin: 0;\n  }\n`;\n\nconst CardTags: FC<CardTagsProps> = ({ items }) => {\n  return (\n    <Wrapper hasMargin={items.length > 0}>\n      {items.slice(0, 5).map(({ key, text }) => (\n        <Pill key={key}>{text}</Pill>\n      ))}\n      {items.length > 5 ? <Pill>+{items.length - 5}</Pill> : null}\n    </Wrapper>\n  );\n};\n\nexport default CardTags;\n","import React, { FC, Fragment } from 'react';\nimport styled from 'styled-components';\n\ntype CardTitleProps = {\n  name: string;\n  communicationPlatformUrl?: string;\n  workspaceLogo: string;\n  clickable?: boolean;\n};\n\ntype IconProps = {\n  clickable?: boolean;\n};\n\nconst Wrapper = styled.h3`\n  color: ${({ theme }) => theme.colors.base};\n  margin: 0.2em 0 0.8em;\n`;\n\nconst Icon = styled.img.attrs(() => ({\n  alt: '',\n}))<IconProps>`\n  filter: ${({ clickable = false }) =>\n    clickable ? 'grayscale(0%)' : 'grayscale(100%)'};\n  margin: 0 0 -0.06em;\n  position: relative;\n  left: 0.35em;\n  height: 0.9em;\n  user-select: none;\n  transition: filter 0.2s ease-out;\n\n  @media (hover: hover) {\n    &:hover {\n      cursor: ${({ clickable = false }) => (clickable ? 'pointer' : 'default')};\n    }\n  }\n`;\n\nconst CardTitle: FC<CardTitleProps> = ({\n  name,\n  communicationPlatformUrl,\n  workspaceLogo,\n  clickable = false,\n}) => {\n  const IconWrapper: FC = ({ children }) =>\n    clickable ? (\n      <a\n        href={communicationPlatformUrl}\n        title={`Communication platform link for ${name}`}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        {children}\n      </a>\n    ) : (\n      <Fragment>{children}</Fragment>\n    );\n\n  return (\n    <Wrapper>\n      {name}\n      <IconWrapper>\n        <Icon src={workspaceLogo} clickable={clickable} />\n      </IconWrapper>\n    </Wrapper>\n  );\n};\n\nexport default CardTitle;\n","import { navigate } from 'gatsby';\nimport React, { FC, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport CardButton from './card-button';\nimport CardTags from './card-tags';\nimport CardTitle from './card-title';\nimport {\n  ApiResponse,\n  ErrorResponse,\n  ProjectUser,\n  Project,\n  ServiceResolver,\n} from '@api';\nimport { SvgIcon } from '@components/shared';\nimport { UserAuthHelper } from '@helpers';\n\ntype CardProps = {\n  content: Project;\n  workspaceLogo: string;\n  setError: Function;\n};\n\nconst Wrapper = styled.div`\n  display: flex;\n  background-color: ${({ theme }) => theme.colors.section};\n  border-radius: 0.3125em;\n  padding: 1.5em;\n  flex-direction: column;\n  height: 100%;\n  box-shadow: 1px 1px 2px ${({ theme }) => theme.colors.shadow};\n`;\n\nconst Description = styled.p`\n  margin: 0 0 1em;\n  font-size: 1em;\n`;\n\nconst Spacer = styled.div`\n  flex: 1;\n`;\n\nconst Footer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n\n  span {\n    line-height: 2.47;\n  }\n\n  span svg {\n    vertical-align: middle;\n    margin-right: 0.3em;\n\n    path {\n      fill: ${({ theme }) => theme.colors.text};\n    }\n  }\n`;\n\ntype UserIconProps = {\n  d?: string;\n};\n\nconst UserIcon: FC<UserIconProps> = ({ d }) => (\n  <SvgIcon viewBox=\"0 0 640 512\" fontSize=\"1em\">\n    <path fill=\"currentColor\" d={d} />\n  </SvgIcon>\n);\n\nconst Card: FC<CardProps> = ({ content, setError, workspaceLogo }) => {\n  const [hasMemberJoinedProject, setHasMemberJoinedProject] = useState(false);\n\n  const userId = UserAuthHelper.isUserAuthenticated()\n    ? UserAuthHelper.getUserId()\n    : null;\n\n  useEffect(() => {\n    setHasMemberJoinedProject(\n      content.projectUsers.find((u) => u.userId === userId) !== undefined,\n    );\n  }, [content.projectUsers, userId]);\n\n  const redirectToSignIn = () => {\n    navigate('/signin', {\n      state: { message: 'You need to be signed in to join a project' },\n    });\n  };\n\n  const leaveProject = async (project: Project) => {\n    if (!UserAuthHelper.isUserAuthenticated()) {\n      redirectToSignIn();\n      return;\n    }\n\n    const api = ServiceResolver.apiResolver();\n\n    const projectUser = project.projectUsers.find(\n      (u) => u.userId === userId,\n    ) as ProjectUser;\n\n    const response = (await api.leaveProject(\n      projectUser.id as string,\n    )) as ApiResponse<ProjectUser | ErrorResponse>;\n\n    if (response.ok) {\n      const projectUserIndex = content.projectUsers.indexOf(projectUser);\n      content.projectUsers.splice(projectUserIndex, 1);\n    }\n\n    if (response.ok) {\n      setHasMemberJoinedProject(!hasMemberJoinedProject);\n    } else {\n      // TODO: move to try catch, currently this will never execute.\n      setError((response.data as ErrorResponse).message);\n    }\n  };\n\n  const joinProject = async (project: Project) => {\n    if (!UserAuthHelper.isUserAuthenticated()) {\n      redirectToSignIn();\n      return;\n    }\n\n    const api = ServiceResolver.apiResolver();\n    const joinProjectResponseBody: ProjectUser = {\n      projectId: project.id as string,\n      isOwner: false,\n      userId,\n    };\n\n    const response = (await api.joinProject(\n      joinProjectResponseBody,\n    )) as ApiResponse<ProjectUser | ErrorResponse>;\n\n    if (response.ok) {\n      joinProjectResponseBody.username = (response.data as ProjectUser).username;\n      joinProjectResponseBody.id = (response.data as ProjectUser).id;\n      content.projectUsers.push(joinProjectResponseBody);\n    }\n\n    // TODO: simplify, will always be true\n    if (response.ok) {\n      setHasMemberJoinedProject(!hasMemberJoinedProject);\n    } else {\n      // TODO: move to try catch, currently this will never execute.\n      setError((response.data as ErrorResponse).message);\n    }\n  };\n\n  const memberCount = content.projectUsers.length;\n\n  return (\n    <Wrapper data-testid=\"project\">\n      <CardTitle\n        name={content.name}\n        workspaceLogo={workspaceLogo}\n        clickable={hasMemberJoinedProject}\n        communicationPlatformUrl={content.communicationPlatformUrl}\n      />\n\n      <Description>{content.description}</Description>\n\n      <CardTags\n        items={content.projectTechnologies.map(({ projectId, name }) => ({\n          key: `${projectId}-${name}-tag`,\n          text: name,\n        }))}\n      />\n\n      <Spacer />\n\n      <Footer>\n        {memberCount > 0 ? (\n          <span>\n            {memberCount >= 3 && (\n              <UserIcon d=\"M96 224c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm448 0c35.3 0 64-28.7 64-64s-28.7-64-64-64-64 28.7-64 64 28.7 64 64 64zm32 32h-64c-17.6 0-33.5 7.1-45.1 18.6 40.3 22.1 68.9 62 75.1 109.4h66c17.7 0 32-14.3 32-32v-32c0-35.3-28.7-64-64-64zm-256 0c61.9 0 112-50.1 112-112S381.9 32 320 32 208 82.1 208 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C179.6 288 128 339.6 128 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zm-223.7-13.4C161.5 263.1 145.6 256 128 256H64c-35.3 0-64 28.7-64 64v32c0 17.7 14.3 32 32 32h65.9c6.3-47.4 34.9-87.3 75.2-109.4z\" />\n            )}\n            {memberCount === 2 && (\n              <UserIcon d=\"M192 256c61.9 0 112-50.1 112-112S253.9 32 192 32 80 82.1 80 144s50.1 112 112 112zm76.8 32h-8.3c-20.8 10-43.9 16-68.5 16s-47.6-6-68.5-16h-8.3C51.6 288 0 339.6 0 403.2V432c0 26.5 21.5 48 48 48h288c26.5 0 48-21.5 48-48v-28.8c0-63.6-51.6-115.2-115.2-115.2zM480 256c53 0 96-43 96-96s-43-96-96-96-96 43-96 96 43 96 96 96zm48 32h-3.8c-13.9 4.8-28.6 8-44.2 8s-30.3-3.2-44.2-8H432c-20.4 0-39.2 5.9-55.7 15.4 24.4 26.3 39.7 61.2 39.7 99.8v38.4c0 2.2-.5 4.3-.6 6.4H592c26.5 0 48-21.5 48-48 0-61.9-50.1-112-112-112z\" />\n            )}\n            {memberCount === 1 && (\n              <UserIcon d=\"M224 256c70.7 0 128-57.3 128-128S294.7 0 224 0 96 57.3 96 128s57.3 128 128 128zm89.6 32h-16.7c-22.2 10.2-46.9 16-72.9 16s-50.6-5.8-72.9-16h-16.7C60.2 288 0 348.2 0 422.4V464c0 26.5 21.5 48 48 48h352c26.5 0 48-21.5 48-48v-41.6c0-74.2-60.2-134.4-134.4-134.4z\" />\n            )}\n            {memberCount} Member{memberCount === 1 ? '' : 's'}\n          </span>\n        ) : (\n          <Spacer />\n        )}\n\n        <CardButton\n          onClick={() =>\n            hasMemberJoinedProject\n              ? leaveProject(content)\n              : joinProject(content)\n          }\n          statusText={hasMemberJoinedProject ? 'Leaving...' : 'Joining...'}\n          joined={hasMemberJoinedProject}\n        >\n          {hasMemberJoinedProject ? 'Leave' : 'Join'}\n        </CardButton>\n      </Footer>\n    </Wrapper>\n  );\n};\n\nexport default Card;\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport Card from './card';\nimport { Project } from '@api';\n\ninterface PanelProps {\n  content?: Project[];\n  workspaceLogos: { [name: string]: string };\n  setError: Function;\n}\n\nconst Wrapper = styled.div`\n  display: grid;\n  align-items: flex-start;\n  grid-template-columns: repeat(1fr);\n  grid-template-rows: 8fr;\n  gap: 1.5em 1.5em;\n  margin-bottom: 2em;\n\n  @media screen and (min-width: ${({ theme }) => theme.sizes.width.small}) {\n    grid-template-columns: repeat(2, 1fr);\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.sizes.width.medium}) {\n    grid-template-columns: repeat(3, 1fr);\n  }\n`;\n\nconst Panel: FC<PanelProps> = ({\n  content = [],\n  setError,\n  workspaceLogos = {},\n}) => (\n  <Wrapper>\n    {content.map((v) => (\n      <Card\n        key={v.name}\n        content={v}\n        workspaceLogo={workspaceLogos[v.communicationPlatform]}\n        setError={setError}\n      />\n    ))}\n  </Wrapper>\n);\n\nexport default Panel;\n","import { RouteComponentProps } from '@reach/router';\nimport React, { FC, Fragment, useState, useEffect } from 'react';\n\nimport Panel from './panel';\nimport { ApiResponse, ErrorResponse, Project, ServiceResolver } from '@api';\nimport { FeedbackForm } from '@components/shared/form';\nimport { CloseButton, Ribbon } from '@components/shared/ribbons';\nimport { Loader, Seo, Wrapper } from '@components/shared';\nimport { WorkspaceType } from '@api/types/workspace-type';\n\ntype OwnProps = {};\ntype ProjectsGalleryProps = OwnProps & RouteComponentProps;\n\nexport const ProjectsGallery: FC<ProjectsGalleryProps> = () => {\n  const [projects, setProjects] = useState<Project[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const [workspaceLogos, setWorkspaceLogos] = useState<{\n    [name: string]: string;\n  }>({});\n\n  const [success, setSuccess] = useState<string | null>('');\n\n  useEffect(() => {\n    const api = ServiceResolver.apiResolver();\n    async function fetchProjects() {\n      try {\n        const response = (await api.getProjects()) as ApiResponse<\n          Project[] | ErrorResponse\n        >;\n        // TODO: simplify, reponse.ok will always be true inside try\n        if (response.ok) {\n          const projects = response.data as Project[];\n          setProjects(projects);\n        } else {\n          // TODO: remove, currently this will never execute.\n          setError((response.data as ErrorResponse).message);\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(false);\n    }\n\n    async function fetchWorkspaces() {\n      try {\n        const response = (await api.getWorkspaceTypes()) as ApiResponse<\n          WorkspaceType[] | ErrorResponse\n        >;\n        const workspaceTypes = response.data as WorkspaceType[];\n        const workspaceDict: { [name: string]: string } = {};\n        workspaceTypes.forEach((workspace) => {\n          workspaceDict[workspace.name] = workspace.logoUrl;\n        });\n        setWorkspaceLogos(workspaceDict);\n      } catch (error) {\n        // Log to centralized log server\n      }\n      return;\n    }\n\n    fetchWorkspaces();\n    fetchProjects();\n  }, []);\n\n  return (\n    <Fragment>\n      <Seo title=\"Projects\" />\n\n      <FeedbackForm page=\"projects gallery\" />\n\n      <Wrapper>\n        {success && (\n          <Ribbon type=\"success\">\n            {success}{' '}\n            <CloseButton onClick={() => setSuccess(null)}>&#10006;</CloseButton>\n          </Ribbon>\n        )}\n\n        {error && (\n          <Ribbon type=\"danger\">\n            {error}{' '}\n            <CloseButton onClick={() => setError(null)}>&#10006;</CloseButton>\n          </Ribbon>\n        )}\n\n        {isLoading ? (\n          <Loader />\n        ) : (\n          <Panel\n            content={projects}\n            workspaceLogos={workspaceLogos}\n            setError={setError}\n          />\n        )}\n      </Wrapper>\n    </Fragment>\n  );\n};\n","import { RouteComponentProps } from '@reach/router';\nimport React, { FC, Fragment, useEffect, useState } from 'react';\n\nimport { Wrapper, Seo, Loader } from '@components/shared';\nimport { CloseButton, Ribbon } from '@components/shared/ribbons';\nimport { FeedbackForm } from '@components/shared/form';\nimport {\n  ServiceResolver,\n  ApiResponse,\n  ErrorResponse,\n  ProjectDetailed,\n  ProjectUserDetailed,\n} from '@api';\nimport { useSiteMetadata } from '@hooks';\nimport styled from 'styled-components';\n\ninterface ProjectWorkspaceParams {\n  projectId?: string;\n}\n\ntype ProjectWorkspaceProps = ProjectWorkspaceParams & RouteComponentProps;\n\nconst Title = styled.h1`\n  color: ${({ theme }) => theme.colors.base};\n  margin: 0.2em 0 0.2em;\n`;\n\nconst ContentWrapper = styled.div`\n  display: flex;\n`;\n\nconst LeftSide = styled.div`\n  flex-basis: 30%;\n`;\nconst RightSide = styled.div`\n  flex-basis: 70%;\n`;\n\nconst Description = styled.p`\n  margin: 0 0 1em;\n  font-size: 1em;\n`;\n\nexport const ProjectWorkspace: FC<ProjectWorkspaceProps> = (props) => {\n  const siteMetadata = useSiteMetadata();\n  const [project, setProject] = useState<ProjectDetailed | undefined>(\n    undefined,\n  );\n  const [error, setError] = useState<string | null>('');\n  const [projectOwner, setProjectOwner] = useState<\n    ProjectUserDetailed | undefined\n  >(undefined);\n\n  useEffect(() => {\n    const api = ServiceResolver.apiResolver();\n    async function fetchProject() {\n      try {\n        if (props.projectId == undefined) {\n          return;\n        }\n        const response = (await api.getProject(props.projectId)) as ApiResponse<\n          ProjectDetailed | ErrorResponse\n        >;\n        const project = response.data as ProjectDetailed;\n        const projectOwner = project.projectUsers.find((p) => p.isOwner);\n\n        setProject(project);\n        setProjectOwner(projectOwner);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n\n    fetchProject();\n  });\n\n  return (\n    <Fragment>\n      <Seo\n        title={`${project == undefined ? 'Project' : project.name} Workspace`}\n        description={`Project Workspace for ${siteMetadata.title} website`}\n      />\n\n      <FeedbackForm page=\"project page\" />\n\n      <Wrapper>\n        <div style={{ color: '#E0311D' }}>\n          Project workspace pages are a work in progress. Share feedback on{' '}\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://xd.adobe.com/spec/403111eb-671b-48f1-4aa1-a43996cf2370-3600/\"\n          >\n            current design\n          </a>\n          .\n        </div>\n\n        {error && (\n          <Ribbon type=\"danger\">\n            {error}{' '}\n            <CloseButton onClick={() => setError(null)}>&#10006;</CloseButton>\n          </Ribbon>\n        )}\n\n        {project == undefined ? (\n          // waiting for project api response\n          <Loader />\n        ) : (\n          <Fragment>\n            <Title>{project.name}</Title>\n            <hr></hr>\n            <ContentWrapper>\n              <LeftSide>\n                <Description>{project.description}</Description>\n                <div>\n                  {project.projectTechnologies.map((t, index, array) => {\n                    return (\n                      <span key={index}>\n                        {t.name}\n                        {array.length - 1 == index ? '' : ', '}\n                      </span>\n                    );\n                  })}\n                </div>\n                <div>{projectOwner?.timezone}</div>\n                <div>\n                  <a href={project.repositoryUrl}>repo</a>,{' '}\n                  <a href={project.communicationPlatformUrl}>workspace</a>\n                </div>\n                <div>Join Team, Become Fan</div>\n                <div>Team, Milestones, Fans, Workspace</div>\n                <div>Collaborator Suggestions Section</div>\n              </LeftSide>\n              <RightSide>\n                <div>Project Extended Details</div>\n              </RightSide>\n            </ContentWrapper>\n          </Fragment>\n        )}\n      </Wrapper>\n    </Fragment>\n  );\n};\n","import { Router } from '@reach/router';\nimport React, { FC } from 'react';\n\nimport { Layout } from '@components/shared';\nimport { ProjectsGallery, ProjectWorkspace } from '@components/projects';\nimport { CreateProjectForm } from '@components/shared/form';\n\nconst Projects: FC = () => {\n  return (\n    <Layout>\n      <Router>\n        <ProjectWorkspace path=\"projects/:projectId\" />\n        <CreateProjectForm path=\"projects/create\" />\n        <ProjectsGallery path=\"projects\" />\n      </Router>\n    </Layout>\n  );\n};\n\nexport default Projects;\n"],"sourceRoot":""}