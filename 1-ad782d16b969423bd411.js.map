{"version":3,"sources":["webpack:///./src/styled-components.ts","webpack:///./src/hooks/use-site-metadata.ts","webpack:///./src/hooks/index.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/anchor.tsx","webpack:///./src/components/author-meta.tsx","webpack:///./src/components/avatar.tsx","webpack:///./src/components/card-list.tsx","webpack:///./src/components/card.tsx","webpack:///./src/components/container.tsx","webpack:///./src/components/footer.tsx","webpack:///./src/components/hero.tsx","webpack:///./src/styles/global-style.ts","webpack:///./src/styles/theme.ts","webpack:///./src/styles/constants.ts","webpack:///./src/styles/typography.ts","webpack:///./src/components/layout.tsx","webpack:///./src/components/menu.tsx","webpack:///./src/components/page-body.tsx","webpack:///./src/components/page-title.tsx","webpack:///./src/components/pagination.tsx","webpack:///./src/components/post-links.tsx","webpack:///./src/components/post-meta.tsx","webpack:///./src/components/post-tags.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/share.tsx","webpack:///./src/components/social-icon.tsx","webpack:///./src/components/svg-icon.tsx","webpack:///./src/components/index.ts","webpack:///./src/utils/string-utils.ts","webpack:///./src/utils/number-utils.ts","webpack:///./src/utils/url-utils.ts","webpack:///./src/utils/index.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./src/images/pu.svg","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./static/favicon.ico"],"names":["__webpack_require__","d","__webpack_exports__","css","createGlobalStyle","ThemeProvider","styled","default","keyframes","useSiteMetadata","_623837974","data","site","siteMetadata","use_site_metadata_useSiteMetadata","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","React","createContext","PropTypes","object","string","isRequired","func","Anchor","_ref","_ref$external","external","content","children","rel","target","anchorProps","objectWithoutPropertiesLoose_default","props","Object","assign","react","Wrapper","div","withConfig","displayName","componentId","theme","colors","text","_ref2","highlight","SocialAccounts","Name","h2","AuthorMeta","_ref3","_ref3$author","author","avatar","name","bio","github","twitter","components_avatar","fluid","childImageSharp","alt","title","alignment","social_icon","link","socialName","href","Image","Img","attrs","small","Avatar","_ref2$alignment","avatarProps","List","ul","CardList","Post","li","secondary","responsive","featured","_ref4","medium","_ref5","_ref6","tertiary","_ref7","base","_ref8","_ref9","_ref10","_ref11","StyledLink","Link","Title","Date","p","_ref12","Excerpt","_ref13","Card","_ref14","slug","publishDate","excerpt","_ref14$featured","to","gatsby_image_default","backgroundColor","card_Date","dangerouslySetInnerHTML","__html","section","sizes","maxWidth","Container","container_Wrapper","Inner","nav","Row","_ref2$flex","flex","Heading","h3","_ref3$direction","direction","anchorStyles","StyledAnchor","BottomText","Footer","footer_Wrapper","description","footer_List","footer_StyledLink","social","facebook","instagram","linkedin","reddit","BgImg","height","fit","position","h1","maxWidthCentered","Hero","hero_Wrapper","hero_Title","GlobalStyle","_templateObject","freeze","large","blockquoteBorder","borderStyle","width","style","color","oceanBeachTheme","headerFontFamily","overrideThemeStyles","textShadow","backgroundImage","a:visited","blockquote","borderLeft","code","fontSize","pre","@media only screen and (max-width:480px)","Typography","Root","Content","Layout","Helmet_default","lang","favicon","styled_components","menu","footer","header","Nav","ListItem","activeLinkStyle","Menu","menu_Wrapper","menu_List","menu_StyledLink","activeStyle","src","puLogo","Body","PageBody","body","styles","tiny","margin","size","PageTitle","_ref5$size","page_title_Title","PreviousLink","NextLink","PageIndicator","span","Pagination","context","prefix","numPages","_context$currentPage","currentPage","isFirst","isLast","isNotPaginated","prevPageNum","nextPageNum","pathPrefix","prevPageLink","nextPageLink","pagination_Wrapper","Box","PostLinks","previous","next","linkPrefix","post_links_Wrapper","post_links_PreviousLink","fields","frontmatter","post_links_NextLink","Header","AuthorLink","Bio","PostMeta","date","_ref8$author","id","post_meta_Wrapper","post_meta_Body","Tag","PostTags","tags","post_tags_List","map","tag","key","gatsby_browser_entry","slugify","Seo","_ref$urlSlug","urlSlug","_ref$keywords","keywords","_ref$lang","_ref$meta","meta","image","_ref$pageType","pageType","metaDescription","htmlAttributes","titleTemplate","url","property","concat","length","join","Label","Share","post","_useSiteMetadata","siteUrl","twitterHandle","replace","postUrl","share_Wrapper","share_List","makeShareUrl","u","via","socialIconPaths","SrOnly","SocialIcon","_ref$link","_ref$fontSize","_ref$viewBox","viewBox","_ref$fill","fill","svgProps","Icon","svg_icon","social_icon_StyledAnchor","SvgIcon","xmlns","styleLengths","components_anchor","author_meta","card_list","card","container","hero","layout","page_body","page_title","pagination","post_links","post_meta","post_tags","seo","share","toString","toLowerCase","unit","isNaN","test","value","Number","NaN","provider","options","baseUrl","baseOptions","encodeURIComponent","entries","m","module","exports","require","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","json","propTypes","shape"],"mappings":"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","file":"1-ad782d16b969423bd411.js","sourcesContent":["import * as styledComponents from 'styled-components';\nimport { ThemedStyledComponentsModule } from 'styled-components';\n\nimport { ThemeInterface } from '@styles';\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider,\n} = styledComponents as ThemedStyledComponentsModule<ThemeInterface>;\n\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\nexport default styled;\n","import { graphql, useStaticQuery } from 'gatsby';\n\nexport interface SiteMetadata {\n  /** The name of the website. */\n  title: string;\n  /** The description of the website. */\n  description: string;\n  /** The url of the website. */\n  url: string;\n  /** Contains the project's social handles. */\n  social: {\n    /** The website's Facebook username, */\n    facebook: string;\n    /** The website's Instagram username. */\n    instagram: string;\n    /** The website's Twitter username. */\n    twitter: string;\n    /** The website's LinkedIn username. */\n    linkedin: string;\n    /** The website's Reddit username. */\n    reddit: string;\n    /** The website's GitHub username. */\n    github: string;\n    /** Slack invite link. */\n    slackInvite: string;\n  };\n}\n\ninterface Data {\n  site: {\n    siteMetadata: SiteMetadata;\n  };\n}\n\nconst siteMetadataQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        url\n        social {\n          facebook\n          instagram\n          twitter\n          linkedin\n          reddit\n          github\n          slackInvite\n        }\n      }\n    }\n  }\n`;\n\n/** Custom hook that returns the site metadata. */\nexport const useSiteMetadata = () => {\n  const { site }: Data = useStaticQuery(siteMetadataQuery);\n\n  return site.siteMetadata;\n};\n","export * from './use-site-metadata';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react';\n\ninterface OwnProps {\n  /**\n   * If `true`, the `target` and provided `rel` attribute values will be passed\n   * to the return component.\n   */\n  external?: boolean;\n  /**\n   * If `children` is _falsey_, this value will be the child of the returned\n   * anchor element.\n   */\n  content?: string;\n}\n\ntype AnchorProps = OwnProps & React.AnchorHTMLAttributes<HTMLAnchorElement>;\n\n/**\n * Wrapper for a plain anchor element that sets the `rel` and `target`\n * attributes for external links.\n */\nconst Anchor: React.FC<AnchorProps> = ({\n  external = true,\n  content,\n  children,\n  rel,\n  target,\n  ...anchorProps\n}) => {\n  const props = {\n    rel: external ? rel || 'nofollow noopener noreferrer' : rel,\n    target: external ? target || '_blank' : target,\n    ...anchorProps,\n  };\n\n  return <a {...props}>{children || content}</a>;\n};\n\nexport default Anchor;\n","import * as React from 'react';\n\nimport { Avatar, SocialIcon } from '@components';\nimport styled from '@styled-components';\nimport { Author } from '@templates/author';\n\ninterface AuthorMetaProps {\n  /** The object containing details about an author. */\n  author: Author;\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 2em;\n\n  svg {\n    width: 1em;\n    font-size: 24px;\n\n    & path {\n      transition: 0.2s;\n      fill: ${({ theme }) => theme.colors.text};\n      opacity: 0.7;\n    }\n\n    &:hover path {\n      fill: ${({ theme }) => theme.colors.highlight};\n    }\n  }\n`;\n\nconst SocialAccounts = styled.div`\n  display: flex;\n`;\n\nconst Name = styled.h2`\n  margin: 1em 0 0.5em;\n`;\n\n/** Displays details about an author. */\nconst AuthorMeta: React.FC<AuthorMetaProps> = ({\n  author: { avatar, name, bio, github, twitter },\n}) => (\n  <Wrapper>\n    {avatar && (\n      <Avatar\n        fluid={avatar.childImageSharp.fluid}\n        alt=\"\"\n        title={name}\n        alignment=\"vertical\"\n      />\n    )}\n    <Name>{name}</Name>\n    <p>{bio}</p>\n\n    <SocialAccounts>\n      <SocialIcon\n        link\n        socialName=\"github\"\n        href={`https://github.com/${github}`}\n        title={`${name} on GitHub`}\n      />\n\n      {twitter && (\n        <SocialIcon\n          link\n          socialName=\"twitter\"\n          href={`https://twitter.com/${twitter}`}\n          title={`${name} on Twitter`}\n        />\n      )}\n    </SocialAccounts>\n  </Wrapper>\n);\n\nexport default AuthorMeta;\n","import * as React from 'react';\nimport Img, { GatsbyImageProps } from 'gatsby-image';\n\nimport styled from '@styled-components';\n\ninterface OwnProps {\n  /**\n   * @deprected If `true`, the avatar size will be smaller than the default\n   * size.\n   */\n  small?: boolean;\n  /** This value determines if margins will applied to the image. */\n  alignment?: 'horizontal' | 'vertical';\n}\n\ntype AvatarProps = OwnProps & GatsbyImageProps;\n\nconst Image = styled(Img).attrs({ small: false })<AvatarProps>`\n  min-height: 4em;\n  max-height: 4em;\n  min-width: 4em;\n  max-width: 4em;\n  border-radius: 50%;\n  margin-right: ${({ alignment }) =>\n    alignment === 'horizontal' ? '1.6em' : 0};\n`;\n\n/** Displays an avatar image. */\nconst Avatar: React.FC<AvatarProps> = ({\n  alignment = 'horizontal',\n  ...avatarProps\n}) => <Image alignment={alignment} {...avatarProps} />;\n\nexport default Avatar;\n","import * as React from 'react';\n\nimport styled from '@styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  margin: 0 auto;\n\n  &::after {\n    content: '';\n    flex: 0 0 32%;\n  }\n`;\n\n/** Displays a list of `Card`s. */\nconst CardList: React.FC = ({ children }) => <List>{children}</List>;\n\nexport default CardList;\n","import { Link } from 'gatsby';\nimport Img, { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\n\ninterface PostProps {\n  featured: boolean;\n}\n\ninterface CardProps {\n  /** The slugged title of the blog post. */\n  slug: string;\n  /** Used by `gatsby-image` to display the properly-sized hero image. */\n  fluid: FluidObject;\n  /** The title of the blog post. */\n  title: string;\n  /** The publish date of the blog post. */\n  publishDate: string;\n  /** A short preview of the blog post. */\n  excerpt: string;\n  /** If `true`, the styling for the featured blog post will be applied. */\n  featured?: boolean;\n}\n\nconst Post = styled.li<PostProps>`\n  position: relative;\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\n  border-radius: 2px;\n  width: 100%;\n  transition: 0.2s;\n\n  @media screen and (min-width: ${({ theme }) => theme.responsive.small}) {\n    flex: ${({ featured }) => (featured ? '0 0 100%' : '0 0 49%')};\n    margin: 0 0 2vw 0;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.responsive.medium}) {\n    flex: ${({ featured }) => (featured ? '0 0 100%' : '0 0 32%')};\n  }\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.tertiary};\n  }\n\n  a {\n    display: flex;\n    flex-flow: column;\n    height: 100%;\n    width: 100%;\n    color: ${({ theme }) => theme.colors.base};\n    text-decoration: none;\n\n    h2 {\n      transition: color 0.2s;\n    }\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.base};\n\n      h2 {\n        color: ${({ theme }) => theme.colors.highlight};\n      }\n    }\n\n    .gatsby-image-wrapper {\n      height: 0;\n      padding-bottom: 60%;\n\n      @media screen and (min-width: ${({ theme }) => theme.responsive.small}) {\n        padding-bottom: ${({ featured }) => (featured ? '40%' : '60%')};\n      }\n    }\n  }\n`;\n\nconst StyledLink = styled(Link)`\n  background-image: none;\n`;\n\nconst Title = styled.h2`\n  text-transform: capitalize;\n  margin: 1rem 1rem 0.5rem 1rem;\n`;\n\nconst Date = styled.p`\n  margin: 0 1rem 1.5rem 1rem;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst Excerpt = styled.p`\n  padding: 0 1rem 1rem 1rem;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\n/** Shows a blog post's condensed details. */\nconst Card: React.FC<CardProps> = ({\n  slug,\n  title,\n  publishDate,\n  excerpt,\n  featured = false,\n  fluid,\n}) => (\n  <Post featured={featured}>\n    <StyledLink to={`/blog/${slug}/`} title={title}>\n      <Img fluid={fluid} backgroundColor=\"#eeeeee\" title={title} alt=\"\" />\n      <Title>{title}</Title>\n      <Date>{publishDate}</Date>\n      <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n    </StyledLink>\n  </Post>\n);\n\nexport default Card;\n","import * as React from 'react';\n\nimport styled from '@styled-components';\n\nconst Wrapper = styled.section`\n  margin: 0 auto auto;\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidth};\n  padding: 3em 1.5em 2em;\n  flex-grow: 1;\n`;\n\n/** Display the main content of the page. */\nconst Container: React.FC = ({ children }) => <Wrapper>{children}</Wrapper>;\n\nexport default Container;\n","import * as React from 'react';\nimport { Link } from 'gatsby';\n\nimport { Anchor, SocialIcon } from '@components';\nimport { useSiteMetadata } from '@hooks';\nimport styled, { css } from '@styled-components';\n\ninterface RowProps {\n  flex?: number;\n}\n\ninterface ListProps {\n  direction?: 'column' | 'row';\n}\n\nconst Wrapper = styled.div`\n  background-color: #5f8ddc;\n  color: hsla(0, 0%, 100%, 0.5);\n  font-size: 0.8em;\n  padding-bottom: 1em;\n`;\n\nconst Inner = styled.nav`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidth};\n  margin: 0 auto;\n  padding: 0 1.5em;\n\n  @media screen and (min-width: 35em) {\n    flex-direction: row;\n  }\n`;\n\nconst Row = styled.div<RowProps>`\n  flex: ${({ flex = 1 }) => flex};\n`;\n\nconst Heading = styled.h3`\n  color: white;\n  font-size: 1.1em;\n`;\n\nconst List = styled.div<ListProps>`\n  display: flex;\n  flex-direction: ${({ direction = 'column' }) => direction};\n  align-items: flex-start;\n`;\n\nconst anchorStyles = css`\n  color: hsla(0, 0%, 100%, 0.5);\n  text-decoration: none;\n  background-image: none;\n  transition: 0.2s;\n  min-height: 3em;\n\n  &:hover {\n    color: white;\n    cursor: pointer;\n  }\n\n  &:visited {\n    color: hsla(0, 0%, 100%, 0.5);\n  }\n  @media (min-width: ${({ theme }) => theme.responsive.small}) {\n    min-height: initial;\n  }\n`;\n\nconst StyledAnchor = styled(Anchor)`\n  ${anchorStyles};\n`;\n\nconst StyledLink = styled(Link)`\n  ${anchorStyles}\n`;\n\nconst BottomText = styled.div`\n  text-align: center;\n  padding-top: 4em;\n`;\n\n/** Displays information about the website. */\nconst Footer: React.FC = () => {\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Wrapper>\n      <Inner>\n        <Row>\n          <Heading>{siteMetadata.title}</Heading>\n          <p>{siteMetadata.description}</p>\n        </Row>\n\n        <Row>\n          <Heading>About</Heading>\n\n          <List>\n            <StyledLink to=\"/sitemap\" title={`${siteMetadata.title} sitemap`}>\n              Sitemap\n            </StyledLink>\n\n            <StyledLink\n              to=\"/contact\"\n              title={`${siteMetadata.title} contact page`}\n            >\n              Contact Us\n            </StyledLink>\n\n            <StyledLink\n              to=\"/terms\"\n              title={`${siteMetadata.title} terms and conditions`}\n            >\n              Terms and Conditions\n            </StyledLink>\n\n            <StyledLink\n              to=\"/privacy\"\n              title={`${siteMetadata.title} privacy policy`}\n            >\n              Privacy Policy\n            </StyledLink>\n          </List>\n        </Row>\n\n        <Row>\n          <Heading>Projects</Heading>\n\n          <List>\n            <StyledAnchor\n              href=\"//www.mentrship.com/\"\n              content=\"Mentrship\"\n              title=\"Mentrship project website\"\n            />\n\n            <StyledAnchor\n              href={`//github.com/${siteMetadata.social.github}/pub`}\n              content=\"Pub\"\n              title={`${siteMetadata.title} blog repository`}\n            />\n          </List>\n        </Row>\n\n        <Row>\n          <Heading>Follow us</Heading>\n\n          <List direction=\"row\">\n            <SocialIcon\n              link\n              socialName=\"facebook\"\n              href={`//facebook.com/${siteMetadata.social.facebook}`}\n              title={`Follow ${siteMetadata.title} on Facebook`}\n            />\n\n            <SocialIcon\n              link\n              socialName=\"instagram\"\n              href={`//www.instagram.com/${siteMetadata.social.instagram}`}\n              title={`Follow ${siteMetadata.title} on Instagram`}\n            />\n\n            <SocialIcon\n              link\n              socialName=\"twitter\"\n              href={`//twitter.com/${siteMetadata.social.twitter}`}\n              title={`Follow ${siteMetadata.title} on Twitter`}\n            />\n\n            <SocialIcon\n              link\n              socialName=\"linkedin\"\n              href={`//www.linkedin.com/company/${\n                siteMetadata.social.linkedin\n              }/about`}\n              title={`Follow ${siteMetadata.title} on LinkedIn`}\n            />\n\n            <SocialIcon\n              link\n              socialName=\"reddit\"\n              href={`//www.reddit.com/r/${siteMetadata.social.reddit}`}\n              title={`Follow ${siteMetadata.title} on Reddit`}\n            />\n\n            <SocialIcon\n              link\n              socialName=\"github\"\n              href={`//github.com/${siteMetadata.social.github}`}\n              title={`Follow ${siteMetadata.title} on GitHub`}\n            />\n          </List>\n        </Row>\n      </Inner>\n\n      <BottomText>\n        <StyledAnchor\n          href={`//github.com/${siteMetadata.social.github}/pub`}\n          content=\"pub\"\n          title={`${siteMetadata.title} blog repository`}\n        />{' '}\n        is maintained by{' '}\n        <StyledAnchor\n          href=\"//github.com/rmjordas\"\n          content=\"@rmjordas\"\n          title=\"Rodger Jordas on GitHub\"\n        />\n      </BottomText>\n    </Wrapper>\n  );\n};\nexport default Footer;\n","import Img, { FluidObject, GatsbyImageProps } from 'gatsby-image';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\n\ninterface BgImgProps {\n  /** A CSS `height` value. */\n  height?: string;\n  /** A CSS `object-fit` value. */\n  fit?: string;\n  /** A CSS `position` value. */\n  position?: string;\n}\n\ninterface HeroProps extends Pick<BgImgProps, 'height'> {\n  /** Used by `gatsby-image` to display the properly-sized hero image. */\n  fluid: FluidObject;\n  /** Title of the blog post. */\n  title: string;\n}\n\nconst Wrapper = styled.section`\n  position: relative;\n  min-height: 300px;\n`;\n\nconst BgImg = styled(Img)<BgImgProps & GatsbyImageProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: -1;\n  min-height: 300px;\n  height: auto;\n\n  @media (min-width: ${({ theme }) => theme.responsive.small}) {\n    height: ${({ height }) => height || 'auto'};\n  }\n\n  & > img {\n    object-fit: ${({ fit }) => fit || 'cover'} !important;\n    object-position: ${({ position }) => position || '50% 50%'} !important;\n  }\n\n  &::before {\n    content: '';\n    background: rgba(0, 0, 0, 0.25);\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 1;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 3em;\n  text-transform: capitalize;\n  font-weight: 600;\n  position: absolute;\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n  padding: 0 1rem;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  color: white;\n  margin-top: 0;\n`;\n\n/**\n * Displays the hero image as a background and the blog post title as the\n * foreground.\n */\nconst Hero: React.FC<HeroProps> = ({ height, fluid, title }) => (\n  <Wrapper>\n    <BgImg\n      height={height}\n      fluid={fluid}\n      backgroundColor=\"#eeeeee\"\n      title={title}\n      alt=\"\"\n    />\n    <Title>{title}</Title>\n  </Wrapper>\n);\n\nexport default Hero;\n","import { createGlobalStyle } from '@styled-components';\n\n/** Application-wide default styling. */\nexport const GlobalStyle = createGlobalStyle`\n  @font-face {\n    font-family: 'Roboto';\n    font-display: swap;\n    font-style: normal;\n    font-weight: 400;\n    src: local('Roboto'), local('Roboto-Regular'),\n        url('/roboto-v19-latin-regular.woff2') format('woff2'),\n        url('/roboto-v19-latin-regular.woff') format('woff');\n  }\n\n  @font-face {\n    font-family: 'Roboto';\n    font-display: swap;\n    font-style: italic;\n    font-weight: 400;\n    src: local('Roboto Italic'), local('Roboto-Italic'),\n        url('/roboto-v19-latin-italic.woff2') format('woff2'),\n        url('/roboto-v19-latin-italic.woff') format('woff');\n  }\n\n  @font-face {\n    font-family: 'Roboto';\n    font-display: swap;\n    font-style: normal;\n    font-weight: 700;\n    src: local('Roboto Bold'), local('Roboto-Bold'),\n        url('/roboto-v19-latin-700.woff2') format('woff2'),\n        url('/roboto-v19-latin-700.woff') format('woff');\n  }\n\n  html, body {\n    height: 100%;\n  }\n\n  footer {\n    width: 100%;\n  }\n\n  @media screen and (min-width: 35em) {\n    html {\n      margin-right: calc(-100vw + 100%);\n      overflow-x: hidden;\n    }\n  }\n\n`;\n","import * as constants from './constants';\n\nconst colors = {\n  /** Off-black */\n  base: constants.offblack,\n  /** Light blue */\n  highlight: constants.lightblue,\n  /** Medium gray */\n  secondary: constants.mediumgray,\n  /** Light gray */\n  tertiary: constants.lightgray,\n  /** Alternate light gray */\n  text: constants.altlightgray,\n};\n\nconst responsive = {\n  large: '70em' as const,\n  medium: '50em' as const,\n  small: '35em' as const,\n};\n\nconst sizes = {\n  maxWidth: '1050px' as const,\n  maxWidthCentered: '650px' as const,\n};\n\nexport interface ThemeInterface {\n  colors: typeof colors;\n  responsive: typeof responsive;\n  sizes: typeof sizes;\n}\n\nexport const theme = Object.freeze<ThemeInterface>({\n  colors,\n  responsive,\n  sizes,\n});\n","export const roboto = 'Roboto' as const;\nexport const preFontSize = '1em' as const;\nexport const codeFontSize = '0.9em' as const;\n\nexport const black = 'rgba(0, 0, 0, 0)' as const;\nexport const offblack = '#121212' as const;\nexport const lightblue = '#5f8ddc' as const;\nexport const mediumgray = '#e9e9e9' as const;\nexport const lightgray = '#f3f3f3' as const;\nexport const altlightgray = 'rgba(0, 0, 0, 0.73)' as const;\n","import Typography from 'typography';\nimport oceanBeachTheme from 'typography-theme-ocean-beach';\n\nimport * as constants from './constants';\nimport { borderStyle } from '@utils';\n\nconst { roboto, black, preFontSize, codeFontSize } = constants;\nconst baseColor = constants.lightblue;\nconst borderWidth = '0.5925rem' as const;\nconst anchorBgImg = `linear-gradient(to top, ${black}, ${black} 1px, ${baseColor} 1px, ${baseColor} 2px, ${black} 2px)`;\nconst blockquoteBorder = borderStyle({\n  width: borderWidth,\n  style: 'solid',\n  color: baseColor,\n});\n\noceanBeachTheme.headerFontFamily = [roboto];\noceanBeachTheme.overrideThemeStyles = () => ({\n  a: {\n    color: baseColor,\n    textShadow: 'none',\n    backgroundImage: anchorBgImg,\n  },\n  'a:visited': {\n    color: baseColor,\n  },\n  blockquote: {\n    borderLeft: blockquoteBorder,\n  },\n  code: {\n    fontSize: codeFontSize,\n  },\n  pre: {\n    fontSize: preFontSize,\n  },\n  '@media only screen and (max-width:480px)': {\n    blockquote: {\n      borderLeft: blockquoteBorder,\n    },\n  },\n});\n\n/** Configuration object for `gatsby-plugin-typography`. */\nconst typography = new Typography(oceanBeachTheme);\n\nexport default typography;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Footer, Menu } from '@components';\nimport { useSiteMetadata } from '@hooks';\nimport favicon from '@static/favicon.ico';\nimport styled, { ThemeProvider } from '@styled-components';\nimport { GlobalStyle, theme } from '@styles';\n\nconst Root = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 auto;\n`;\n\n/**\n * The application shell containing common page components such as the\n * navigation bar, footer, etc.\n */\nconst Layout: React.FC = ({ children }) => {\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Root>\n      <Helmet>\n        <html lang=\"en\" />\n        <title>{siteMetadata.title}</title>\n\n        <meta\n          name=\"viewport\"\n          content=\"width=device-width,initial-scale=1,shrink-to-fit=no,viewport-fit=cover\"\n        />\n\n        <link rel=\"icon\" href={favicon} />\n      </Helmet>\n\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <Content>\n            <Menu />\n            {children}\n          </Content>\n\n          <Footer />\n        </React.Fragment>\n      </ThemeProvider>\n\n      <GlobalStyle />\n    </Root>\n  );\n};\n\nexport default Layout;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport puLogo from '@images/pu.svg';\nimport { useSiteMetadata } from '@hooks';\nimport styled from '@styled-components';\n\nconst Wrapper = styled.header`\n  background: white;\n  width: 100%;\n  padding: 1em 0;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.highlight};\n  transition: all 0.2s;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  background-image: none;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.highlight};\n  }\n`;\n\nconst Nav = styled.nav`\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidth};\n  margin: 0 auto;\n  padding: 0 1.5em;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  margin: 0;\n  align-items: center;\n`;\n\nconst ListItem = styled.li`\n  display: inline-block;\n  margin: 0 0 0 1em;\n\n  &:first-child {\n    position: relative;\n    margin: 0;\n  }\n`;\n\nconst activeLinkStyle = {};\n\n/** Displays links to different parts of the application. */\nconst Menu: React.FC = () => {\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Wrapper>\n      <Nav>\n        <List>\n          <ListItem>\n            <StyledLink\n              to=\"/\"\n              activeStyle={activeLinkStyle}\n              title={`${siteMetadata.title} logo`}\n            >\n              <img\n                src={puLogo}\n                style={{ width: '100px' }}\n                alt={`${siteMetadata.title}`}\n                title={`${siteMetadata.title}`}\n              />\n            </StyledLink>\n          </ListItem>\n\n          <ListItem>\n            <StyledLink\n              to=\"/blog/tags/\"\n              activeStyle={activeLinkStyle}\n              title={`${siteMetadata.title} tags page`}\n            >\n              Tags\n            </StyledLink>\n          </ListItem>\n        </List>\n      </Nav>\n    </Wrapper>\n  );\n};\n\nexport default Menu;\n","import * as React from 'react';\n\nimport styled from '@styled-components';\n\ninterface PageBodyProps {\n  /** Content to be shown as the page body. */\n  body: string;\n}\n\nconst Body = styled.div`\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n\n  h1,\n  h2,\n  h3 {\n    text-transform: capitalize;\n  }\n\n  a {\n    transition: 0.2s;\n    color: ${({ theme }) => theme.colors.base};\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.highlight};\n    }\n  }\n\n  pre {\n    margin: 0 0 1.5em 0;\n    border-radius: 2px;\n\n    span {\n      background: inherit !important;\n    }\n  }\n`;\n\n/** Wrapper for a blog post's main content. */\nconst PageBody: React.FC<PageBodyProps> = ({ body }) => (\n  <Body dangerouslySetInnerHTML={{ __html: body }} />\n);\n\nexport default PageBody;\n","import * as React from 'react';\n\nimport styled from '@styled-components';\n\ntype Size = 'tiny' | 'small' | 'default';\n\ninterface PageTitleProps {\n  /** Determines the styles to be applied to the title text. */\n  size?: Size;\n}\n\ninterface Style {\n  fontSize: string;\n  margin: string;\n}\n\ninterface TitleProps {\n  size: Size;\n}\n\nconst styles: { [key in Size]: Style } = {\n  tiny: { fontSize: '1.2em', margin: '0.5rem 0 2rem' },\n  small: { fontSize: '2em', margin: '1rem 0 4rem 0' },\n  default: { fontSize: '3em', margin: '0 0 3rem 0' },\n};\n\nconst Title = styled.h1<TitleProps>`\n  font-size: ${({ size }) => styles[size].fontSize};\n  text-transform: capitalize;\n  font-weight: 600;\n  text-align: center;\n  margin: 0 0 3rem 0;\n  margin: ${({ size }) => styles[size].margin};\n  line-height: 1.2;\n\n  span {\n    margin: 0 0 0 0.25em;\n  }\n\n  a {\n    transition: all 0.2s;\n    color: ${({ theme }) => theme.colors.base};\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.highlight};\n    }\n  }\n`;\n\n/** Wrapper for a page title. */\nconst PageTitle: React.FC<PageTitleProps> = ({\n  children,\n  size = 'default',\n}) => <Title size={size}>{children}</Title>;\n\nexport default PageTitle;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport { useSiteMetadata } from '@hooks';\nimport styled from '@styled-components';\n\ninterface PaginationProps {\n  /** Contains information about the page. */\n  context: {\n    tag?: string;\n    slug?: string;\n    limit?: number;\n    skip?: number;\n    /** The total number of pages based on the `POST_PER_PAGE` constant. */\n    numPages?: number;\n    /** The current page. */\n    currentPage?: number;\n  };\n  /** The prefix for the paths to be used in the next and previous links. */\n  prefix?: string;\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  margin: -2em auto 0;\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidth};\n  padding: 0 1.5em 2em;\n\n  a {\n    background: transparent;\n    color: ${({ theme }) => theme.colors.base};\n    padding: 1em 0.8em;\n    border-color: ${({ theme }) => theme.colors.highlight};\n    border-radius: 2px;\n    text-decoration: none;\n    transition: 0.2s;\n\n    &:hover {\n      background: ${({ theme }) => theme.colors.highlight};\n      color: white;\n    }\n  }\n`;\n\nconst PreviousLink = styled(Link)`\n  margin-right: auto;\n  order: 1;\n`;\n\nconst NextLink = styled(Link)`\n  margin-left: auto;\n  order: 3;\n`;\n\nconst PageIndicator = styled.span`\n  color: ${({ theme }) => theme.colors.text};\n  position: absolute;\n  left: 0;\n  right: 0;\n  width: 100%;\n  text-align: center;\n  padding: 1em 1.5em;\n  z-index: -1;\n  opacity: 0.7;\n`;\n\n/**\n * Displays a page indicator to show the current page compared to the total page\n * and links to the next and previous page.\n */\nconst Pagination: React.FC<PaginationProps> = ({ context, prefix }) => {\n  const siteMetadata = useSiteMetadata();\n  const { numPages, currentPage = 1 } = context;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const isNotPaginated = isFirst && isLast;\n\n  const prevPageNum = currentPage - 1 === 1 ? `` : currentPage - 1;\n  const nextPageNum = currentPage + 1;\n\n  const pathPrefix = prefix ? `/${prefix}/` : '/';\n  const prevPageLink = isFirst ? null : `${pathPrefix}${prevPageNum}/`;\n  const nextPageLink = isLast ? null : `${pathPrefix}${nextPageNum}/`;\n\n  return (\n    <Wrapper>\n      {!isFirst && prevPageLink && (\n        <PreviousLink\n          to={prevPageLink}\n          title={`${siteMetadata.title} blog page ${prevPageNum}`}\n        >\n          &#8592; Prev Page\n        </PreviousLink>\n      )}\n\n      {!isNotPaginated && (\n        <PageIndicator>\n          {currentPage}/{numPages}\n        </PageIndicator>\n      )}\n\n      {!isLast && nextPageLink && (\n        <NextLink\n          to={nextPageLink}\n          title={`${siteMetadata.title} blog page ${nextPageNum}`}\n        >\n          Next Page &#8594;\n        </NextLink>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Pagination;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport { PostNode } from '@templates/post';\nimport styled from '@styled-components';\n\ninterface PostLinksProps {\n  /** The prefix for the paths to be used in the next and previous links. */\n  prefix: string;\n  /** Contains information about the previous blog post. */\n  previous: PostNode;\n  /** Contains information about the next blog post. */\n  next: PostNode;\n}\n\nconst Wrapper = styled.div`\n  margin: -2em 0 0 0;\n  padding: 0 1.5em 2em;\n`;\n\nconst Box = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n\n  a {\n    background: transparent;\n    color: ${({ theme }) => theme.colors.base};\n    padding: 1em;\n    border-radius: 2px;\n    text-decoration: none;\n    transition: 0.2s;\n\n    &:hover {\n      background: ${({ theme }) => theme.colors.highlight};\n      color: white;\n    }\n  }\n`;\n\nconst PreviousLink = styled(Link)`\n  margin-right: auto;\n  order: 1;\n`;\n\nconst NextLink = styled(Link)`\n  margin-left: auto;\n  order: 2;\n`;\n\n/** Displays links to the next and previous blog post. */\nconst PostLinks: React.FC<PostLinksProps> = ({ prefix, previous, next }) => {\n  const linkPrefix = prefix ? `${prefix}/` : '';\n\n  return (\n    <Wrapper>\n      <Box>\n        {previous && (\n          <PreviousLink\n            to={`/${linkPrefix}${previous.fields.slug}/`}\n            title={previous.frontmatter.title}\n          >\n            &#8592; Prev Post\n          </PreviousLink>\n        )}\n\n        {next && (\n          <NextLink\n            to={`/${linkPrefix}${next.fields.slug}/`}\n            title={next.frontmatter.title}\n          >\n            Next Post &#8594;\n          </NextLink>\n        )}\n      </Box>\n    </Wrapper>\n  );\n};\n\nexport default PostLinks;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\nimport { Author } from '@templates/post';\nimport { Avatar, SocialIcon } from '@components';\n\ninterface PostMetaProps {\n  /** The published date for a blog post. */\n  date: string;\n  /** Contains details for the author of the current blog post. */\n  author: Author;\n}\n\nconst Wrapper = styled.div`\n  margin: 0 auto 2.4em;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Body = styled.div`\n  flex: 1;\n  color: ${({ theme }) => theme.colors.text};\n`;\n\nconst Header = styled.header`\n  display: inline-flex;\n\n  a {\n    color: ${({ theme }) => theme.colors.base};\n    display: inline-flex;\n    align-items: center;\n  }\n\n  svg {\n    width: 1em;\n    font-size: 24px;\n\n    & path {\n      transition: 0.2s;\n      fill: ${({ theme }) => theme.colors.text};\n      opacity: 0.7;\n    }\n\n    &:hover path {\n      fill: ${({ theme }) => theme.colors.highlight};\n    }\n  }\n`;\n\nconst AuthorLink = styled(Link)`\n  font-weight: 600;\n  font-size: 1.2em;\n  margin: 0 0.8em 0 0;\n  text-decoration: none;\n  display: inline-block;\n  transition: 0.2s;\n  background-image: none;\n\n  && {\n    color: ${({ theme }) => theme.colors.base};\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.highlight};\n    }\n  }\n`;\n\nconst Bio = styled.p`\n  margin: 0;\n`;\n\n/** Displays details about a blog post. */\nconst PostMeta: React.FC<PostMetaProps> = ({\n  date,\n  author: { avatar, bio, id, name, github, twitter },\n}) => (\n  <Wrapper>\n    {avatar && (\n      <Avatar fluid={avatar.childImageSharp.fluid} alt=\"\" title={name} />\n    )}\n\n    <Body>\n      <Header>\n        <AuthorLink to={`/blog/author/${id}`} title={`Posts by ${name}`}>\n          {name}\n        </AuthorLink>\n\n        <SocialIcon\n          link\n          socialName=\"github\"\n          href={`https://github.com/${github}`}\n          title={`${name} on GitHub`}\n        />\n\n        {twitter && (\n          <SocialIcon\n            link\n            socialName=\"twitter\"\n            href={`https://twitter.com/${twitter}`}\n            title={`${name} on Twitter`}\n          />\n        )}\n      </Header>\n      <Bio>{bio}</Bio>\n      Published on {date}\n    </Body>\n  </Wrapper>\n);\n\nexport default PostMeta;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\nimport { slugify } from '@utils';\n\ninterface PostTagsProps {\n  /** A list of tags. */\n  tags: string[];\n}\n\nconst List = styled.ul`\n  width: 100%;\n  margin: 0 auto 1em auto;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n`;\n\nconst Tag = styled.li`\n  display: inline-block;\n  margin: 0 0.25em 0.25em 0;\n\n  a {\n    float: left;\n    font-size: 0.8em;\n    transition: 0.2s;\n    background: ${({ theme }) => theme.colors.tertiary};\n    padding: 0.5em;\n    border-radius: 2px;\n    text-transform: capitalize;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.base};\n    border: 1px solid ${({ theme }) => theme.colors.secondary};\n\n    &:hover {\n      background: ${({ theme }) => theme.colors.secondary};\n      color: ${({ theme }) => theme.colors.base};\n    }\n  }\n`;\n\n/** Displays a row of tags for the current blog post. */\nconst PostTags: React.FC<PostTagsProps> = ({ tags }) => (\n  <List>\n    {tags.map((tag) => (\n      <Tag key={tag}>\n        <Link\n          to={`/blog/tag/${slugify(tag)}/`}\n          title={`Posts tagged with ${tag}`}\n        >\n          {tag}\n        </Link>\n      </Tag>\n    ))}\n  </List>\n);\n\nexport default PostTags;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { useSiteMetadata } from '@hooks';\n\ninterface Meta {\n  content: string;\n  name: string;\n}\n\ninterface SeoProps {\n  /** The document title. */\n  title: string;\n  /** The URL path. */\n  urlSlug?: string;\n  /** Description of the document. */\n  description?: string;\n  /** Keywords for the document.  */\n  keywords?: string[];\n  /** Language of the document. */\n  lang?: string;\n  /** Additional information for crawlers. */\n  meta?: Meta[];\n  /** Twitter handle related to the content. */\n  twitter?: string;\n  /** The author of the contents. */\n  author?: string;\n  /** A URL for an image to be used when sharing. */\n  image?: string;\n  /** Another additional information used when sharing. */\n  pageType?: 'website' | 'article';\n}\n\n/**\n * Updates the contents of the `head` element for the page that this component\n * was inserted.\n */\nconst Seo: React.FC<SeoProps> = ({\n  title,\n  urlSlug = '',\n  description,\n  keywords = [],\n  lang = 'en',\n  meta = [],\n  twitter,\n  author,\n  image,\n  pageType = 'website',\n}) => {\n  const siteMetadata = useSiteMetadata();\n  const metaDescription = description || siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s - ${siteMetadata.title}`}\n      meta={[\n        {\n          content: author || siteMetadata.title,\n          name: 'author',\n        },\n        {\n          content: metaDescription,\n          name: 'description',\n        },\n        {\n          content: image || `${siteMetadata.url}/apple-touch-icon.png`,\n          property: 'og:image',\n        },\n        {\n          content: metaDescription,\n          property: 'og:description',\n        },\n        {\n          content: `${siteMetadata.url}/${urlSlug}`,\n          property: 'og:url',\n        },\n        {\n          content: 'en',\n          property: 'og:locale',\n        },\n        {\n          content: siteMetadata.title,\n          property: 'og:site_name',\n        },\n        {\n          content: title,\n          property: 'og:title',\n        },\n        {\n          content: pageType,\n          property: 'og:type',\n        },\n        {\n          content: 'summary',\n          name: 'twitter:card',\n        },\n        {\n          content: siteMetadata.social.twitter,\n          name: 'twitter:site',\n        },\n        {\n          content: twitter || siteMetadata.social.twitter,\n          name: 'twitter:creator',\n        },\n        {\n          content: title,\n          name: 'twitter:title',\n        },\n        {\n          content: metaDescription,\n          name: 'twitter:description',\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                content: keywords.join(', '),\n                name: 'keywords',\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n};\n\nexport default Seo;\n","import * as React from 'react';\n\nimport { SocialIcon } from '@components';\nimport { useSiteMetadata } from '@hooks';\nimport { makeShareUrl } from '@utils';\nimport styled from '@styled-components';\n\ninterface ShareProps {\n  /** Contains information about a blog post. */\n  post: {\n    /** The title of the blog post. */\n    title: string;\n    /** The URL path. */\n    slug: string;\n    /** A short preview of the blog post. */\n    excerpt: string;\n  };\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nconst List = styled.div`\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n  display: flex;\n  flex-direction: row;\n  margin: 0 auto 1em auto;\n\n  svg {\n    path {\n      fill: ${({ theme }) => theme.colors.text};\n      opacity: 0.7;\n    }\n  }\n\n  & a:hover {\n    cursor: pointer;\n\n    svg {\n      path {\n        fill: ${({ theme }) => theme.colors.highlight};\n        opacity: 1;\n      }\n    }\n  }\n`;\n\nconst Label = styled.p`\n  font-weight: 700;\n`;\n\n/** Displays icons that link to social sites' share endpoints. */\nconst Share: React.FC<ShareProps> = ({ post }) => {\n  const { social, url: siteUrl } = useSiteMetadata();\n  const twitterHandle = social.twitter.replace('@', '');\n  const postUrl = `${siteUrl}/blog/${post.slug}`;\n\n  return (\n    <Wrapper>\n      <Label>Share this post</Label>\n\n      <List>\n        <SocialIcon\n          link\n          socialName=\"facebook\"\n          title={`Share \"${post.title}\" on Facebook`}\n          href={makeShareUrl('facebook', { u: postUrl })}\n        />\n        <SocialIcon\n          link\n          socialName=\"twitter\"\n          title={`Share \"${post.title}\" on Twitter`}\n          href={makeShareUrl('twitter', {\n            text: post.title,\n            url: postUrl,\n            via: twitterHandle,\n          })}\n        />\n        <SocialIcon\n          link\n          socialName=\"linkedin\"\n          title={`Share \"${post.title}\" on LinkedIn`}\n          href={makeShareUrl('linkedin', { url: postUrl })}\n        />\n        <SocialIcon\n          link\n          socialName=\"reddit\"\n          title={`Share \"${post.title}\" on Reddit`}\n          href={makeShareUrl('reddit', { url: postUrl })}\n        />\n      </List>\n    </Wrapper>\n  );\n};\n\nexport default Share;\n","import * as React from 'react';\n\nimport { Anchor, SvgIcon } from '@components';\nimport styled from '@styled-components';\n\nexport type SocialName =\n  | 'facebook'\n  | 'github'\n  | 'instagram'\n  | 'linkedin'\n  | 'reddit'\n  | 'twitter';\n\ntype SocialIconPaths = { [K in SocialName]: string };\n\nexport const socialIconPaths: SocialIconPaths = {\n  facebook:\n    'M22.676 0H1.324C.593 0 0 .593 0 1.324v21.352C0 23.408.593 24 1.324 24h11.494v-9.294H9.689v-3.621h3.129V8.41c0-3.099 1.894-4.785 4.659-4.785 1.325 0 2.464.097 2.796.141v3.24h-1.921c-1.5 0-1.792.721-1.792 1.771v2.311h3.584l-.465 3.63H16.56V24h6.115c.733 0 1.325-.592 1.325-1.324V1.324C24 .593 23.408 0 22.676 0',\n  github:\n    'M12 .297c-6.63 0-12 5.373-12 12 0 5.303 3.438 9.8 8.205 11.385.6.113.82-.258.82-.577 0-.285-.01-1.04-.015-2.04-3.338.724-4.042-1.61-4.042-1.61C4.422 18.07 3.633 17.7 3.633 17.7c-1.087-.744.084-.729.084-.729 1.205.084 1.838 1.236 1.838 1.236 1.07 1.835 2.809 1.305 3.495.998.108-.776.417-1.305.76-1.605-2.665-.3-5.466-1.332-5.466-5.93 0-1.31.465-2.38 1.235-3.22-.135-.303-.54-1.523.105-3.176 0 0 1.005-.322 3.3 1.23.96-.267 1.98-.399 3-.405 1.02.006 2.04.138 3 .405 2.28-1.552 3.285-1.23 3.285-1.23.645 1.653.24 2.873.12 3.176.765.84 1.23 1.91 1.23 3.22 0 4.61-2.805 5.625-5.475 5.92.42.36.81 1.096.81 2.22 0 1.606-.015 2.896-.015 3.286 0 .315.21.69.825.57C20.565 22.092 24 17.592 24 12.297c0-6.627-5.373-12-12-12',\n  instagram:\n    'M12 0C8.74 0 8.333.015 7.053.072 5.775.132 4.905.333 4.14.63c-.789.306-1.459.717-2.126 1.384S.935 3.35.63 4.14C.333 4.905.131 5.775.072 7.053.012 8.333 0 8.74 0 12s.015 3.667.072 4.947c.06 1.277.261 2.148.558 2.913.306.788.717 1.459 1.384 2.126.667.666 1.336 1.079 2.126 1.384.766.296 1.636.499 2.913.558C8.333 23.988 8.74 24 12 24s3.667-.015 4.947-.072c1.277-.06 2.148-.262 2.913-.558.788-.306 1.459-.718 2.126-1.384.666-.667 1.079-1.335 1.384-2.126.296-.765.499-1.636.558-2.913.06-1.28.072-1.687.072-4.947s-.015-3.667-.072-4.947c-.06-1.277-.262-2.149-.558-2.913-.306-.789-.718-1.459-1.384-2.126C21.319 1.347 20.651.935 19.86.63c-.765-.297-1.636-.499-2.913-.558C15.667.012 15.26 0 12 0zm0 2.16c3.203 0 3.585.016 4.85.071 1.17.055 1.805.249 2.227.415.562.217.96.477 1.382.896.419.42.679.819.896 1.381.164.422.36 1.057.413 2.227.057 1.266.07 1.646.07 4.85s-.015 3.585-.074 4.85c-.061 1.17-.256 1.805-.421 2.227-.224.562-.479.96-.899 1.382-.419.419-.824.679-1.38.896-.42.164-1.065.36-2.235.413-1.274.057-1.649.07-4.859.07-3.211 0-3.586-.015-4.859-.074-1.171-.061-1.816-.256-2.236-.421-.569-.224-.96-.479-1.379-.899-.421-.419-.69-.824-.9-1.38-.165-.42-.359-1.065-.42-2.235-.045-1.26-.061-1.649-.061-4.844 0-3.196.016-3.586.061-4.861.061-1.17.255-1.814.42-2.234.21-.57.479-.96.9-1.381.419-.419.81-.689 1.379-.898.42-.166 1.051-.361 2.221-.421 1.275-.045 1.65-.06 4.859-.06l.045.03zm0 3.678c-3.405 0-6.162 2.76-6.162 6.162 0 3.405 2.76 6.162 6.162 6.162 3.405 0 6.162-2.76 6.162-6.162 0-3.405-2.76-6.162-6.162-6.162zM12 16c-2.21 0-4-1.79-4-4s1.79-4 4-4 4 1.79 4 4-1.79 4-4 4zm7.846-10.405c0 .795-.646 1.44-1.44 1.44-.795 0-1.44-.646-1.44-1.44 0-.794.646-1.439 1.44-1.439.793-.001 1.44.645 1.44 1.439z',\n  linkedin:\n    'M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z',\n  reddit:\n    'M2.204 14.049c-.06.276-.091.56-.091.847 0 3.443 4.402 6.249 9.814 6.249 5.41 0 9.812-2.804 9.812-6.249 0-.274-.029-.546-.082-.809l-.015-.032c-.021-.055-.029-.11-.029-.165-.302-1.175-1.117-2.241-2.296-3.103-.045-.016-.088-.039-.126-.07-.026-.02-.045-.042-.067-.064-1.792-1.234-4.356-2.008-7.196-2.008-2.815 0-5.354.759-7.146 1.971-.014.018-.029.033-.049.049-.039.033-.084.06-.13.075-1.206.862-2.042 1.937-2.354 3.123 0 .058-.014.114-.037.171l-.008.015zm9.773 5.441c-1.794 0-3.057-.389-3.863-1.197-.173-.174-.173-.457 0-.632.176-.165.46-.165.635 0 .63.629 1.685.943 3.228.943 1.542 0 2.591-.3 3.219-.929.165-.164.45-.164.629 0 .165.18.165.465 0 .645-.809.808-2.065 1.198-3.862 1.198l.014-.028zm-3.606-7.573c-.914 0-1.677.765-1.677 1.677 0 .91.763 1.65 1.677 1.65s1.651-.74 1.651-1.65c0-.912-.739-1.677-1.651-1.677zm7.233 0c-.914 0-1.678.765-1.678 1.677 0 .91.764 1.65 1.678 1.65s1.651-.74 1.651-1.65c0-.912-.739-1.677-1.651-1.677zm4.548-1.595c1.037.833 1.8 1.821 2.189 2.904.45-.336.719-.864.719-1.449 0-1.002-.815-1.816-1.818-1.816-.399 0-.778.129-1.09.363v-.002zM2.711 9.963c-1.003 0-1.817.816-1.817 1.818 0 .543.239 1.048.644 1.389.401-1.079 1.172-2.053 2.213-2.876-.302-.21-.663-.329-1.039-.329v-.002zm9.217 12.079c-5.906 0-10.709-3.205-10.709-7.142 0-.275.023-.544.068-.809C.494 13.598 0 12.729 0 11.777c0-1.496 1.227-2.713 2.725-2.713.674 0 1.303.246 1.797.682 1.856-1.191 4.357-1.941 7.112-1.992l1.812-5.524.404.095s.016 0 .016.002l4.223.993c.344-.798 1.138-1.36 2.065-1.36 1.229 0 2.231 1.004 2.231 2.234 0 1.232-1.003 2.234-2.231 2.234s-2.23-1.004-2.23-2.23l-3.851-.912-1.467 4.477c2.65.105 5.047.854 6.844 2.021.494-.464 1.144-.719 1.833-.719 1.498 0 2.718 1.213 2.718 2.711 0 .987-.54 1.886-1.378 2.365.029.255.059.494.059.749-.015 3.938-4.806 7.143-10.72 7.143l-.034.009zm8.179-19.187c-.74 0-1.34.599-1.34 1.338 0 .738.6 1.34 1.34 1.34.732 0 1.33-.6 1.33-1.334 0-.733-.598-1.332-1.347-1.332l.017-.012z',\n  twitter:\n    'M23.954 4.569c-.885.389-1.83.654-2.825.775 1.014-.611 1.794-1.574 2.163-2.723-.951.555-2.005.959-3.127 1.184-.896-.959-2.173-1.559-3.591-1.559-2.717 0-4.92 2.203-4.92 4.917 0 .39.045.765.127 1.124C7.691 8.094 4.066 6.13 1.64 3.161c-.427.722-.666 1.561-.666 2.475 0 1.71.87 3.213 2.188 4.096-.807-.026-1.566-.248-2.228-.616v.061c0 2.385 1.693 4.374 3.946 4.827-.413.111-.849.171-1.296.171-.314 0-.615-.03-.916-.086.631 1.953 2.445 3.377 4.604 3.417-1.68 1.319-3.809 2.105-6.102 2.105-.39 0-.779-.023-1.17-.067 2.189 1.394 4.768 2.209 7.557 2.209 9.054 0 13.999-7.496 13.999-13.986 0-.209 0-.42-.015-.63.961-.689 1.8-1.56 2.46-2.548l-.047-.02z',\n};\n\ninterface OwnProps {\n  /** Name of the website to share to. */\n  socialName: SocialName;\n  /** The website's URL for sharing. */\n  href: string;\n  /**\n   * If `true` will return an icon but wrapped with an anchor element.\n   * Otherwise, it only returns the icon.\n   */\n  link?: boolean;\n  title?: string;\n}\n\ntype SocialIconProps = OwnProps & React.SVGProps<SVGSVGElement>;\n\nconst StyledAnchor = styled(Anchor)`\n  color: hsla(0, 0%, 100%, 0.5);\n  text-decoration: none;\n  background-image: none;\n  margin-right: 0.6em;\n  transition: 0.2s;\n  padding: 0.2em;\n\n  &:hover {\n    color: white;\n    cursor: pointer;\n  }\n\n  &:visited {\n    color: hsla(0, 0%, 100%, 0.5);\n  }\n\n  &:last-child {\n    margin-right: 0;\n  }\n`;\n\nconst SrOnly = styled.span`\n  position: absolute;\n  width: 1px;\n  height: 1px;\n  padding: 0;\n  overflow: hidden;\n  clip: rect(0, 0, 0, 0);\n  white-space: nowrap;\n  border: 0;\n`;\n\n/** Displays an icon for a website that can be shared to. */\nconst SocialIcon: React.FC<SocialIconProps> = ({\n  socialName,\n  href,\n  title,\n  link = false,\n  fontSize = 28,\n  viewBox = '0 0 24 24',\n  fill = 'white',\n  ...svgProps\n}) => {\n  const Icon = () => (\n    <SvgIcon fontSize={fontSize} viewBox={viewBox} fill={fill} {...svgProps}>\n      {title && <title>{title}</title>}\n      <path fill=\"currentColor\" d={socialIconPaths[socialName]} />\n    </SvgIcon>\n  );\n\n  return link ? (\n    <StyledAnchor href={href} title={title}>\n      <Icon /> <SrOnly>{title}</SrOnly>\n    </StyledAnchor>\n  ) : (\n    <Icon />\n  );\n};\n\nexport default SocialIcon;\n","import * as React from 'react';\n\nimport { styleLengths } from '@utils';\n\ninterface OwnProps {\n  [index: string]: unknown;\n}\n\ntype SvgIconProps = OwnProps & React.SVGProps<SVGSVGElement>;\n\n/** Displays an SVG element where its size can be configured via `fontSize`. */\nconst SvgIcon: React.FC<SvgIconProps> = ({\n  fontSize,\n  children,\n  ...svgProps\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      color=\"inherit\"\n      width={styleLengths(fontSize)}\n      height={styleLengths(fontSize)}\n      {...svgProps}\n    >\n      {children}\n    </svg>\n  );\n};\n\nexport default SvgIcon;\n","export { default as Anchor } from './anchor';\nexport { default as AuthorMeta } from './author-meta';\nexport { default as Avatar } from './avatar';\nexport { default as CardList } from './card-list';\nexport { default as Card } from './card';\nexport { default as Container } from './container';\nexport { default as Footer } from './footer';\nexport { default as Hero } from './hero';\nexport { default as PlaceholderImage } from './placeholder-image';\nexport { default as Layout } from './layout';\nexport { default as Menu } from './menu';\nexport { default as PageBody } from './page-body';\nexport { default as PageTitle } from './page-title';\nexport { default as Pagination } from './pagination';\nexport { default as PostLinks } from './post-links';\nexport { default as PostMeta } from './post-meta';\nexport { default as PostTags } from './post-tags';\nexport { default as Seo } from './seo';\nexport { default as Share } from './share';\nexport { default as SocialIcon } from './social-icon';\nexport { default as SvgIcon } from './svg-icon';\n","import { filterInt } from './number-utils';\n\ninterface TruncateOptions {\n  /**\n   * Text to display at the end of the truncated string. Its length is included\n   * in the total length of the returned string. Default is `...`.\n   */\n  ellipsis?: string;\n  /** Total length of the returned string. Default is `25`. */\n  maxLength?: number;\n}\n\ninterface BorderStyleOptions {\n  /** Width of the border. */\n  width: string | number;\n  /** A CSS `border-style` value.  */\n  style: string;\n  /** A CSS `color` value */\n  color: string;\n}\n\n/** Cuts of a string to a specific length. */\nexport function truncate(\n  /** String to truncate. */\n  text: string,\n  /** Truncate options. */\n  { ellipsis = '...', maxLength = 25 }: TruncateOptions = {\n    ellipsis: '...',\n    maxLength: 25,\n  },\n) {\n  if (text.length > maxLength && text.length > ellipsis.length) {\n    return `${text\n      .substr(0, maxLength - ellipsis.length)\n      .trimRight()}${ellipsis}`;\n  }\n\n  return text;\n}\n\n/** Creates a URL-friendly version of a string. */\nexport function slugify(/** String to slugify. */ text: string) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(/[^\\w-]+/g, '') // Remove all non-word chars\n    .replace(/--+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n}\n\n/** Returns a valid style length value. */\nexport function styleLengths(\n  /** The length to be formatted. */\n  length: string | number = 0,\n  /**Unit to append to the length. */\n  unit = 'px',\n) {\n  if (typeof length === 'string') {\n    if (isNaN(filterInt(length))) {\n      return length;\n    }\n  }\n\n  return `${length}${unit}`;\n}\n\n/** Returns a border style value. */\nexport function borderStyle({ width, style, color }: BorderStyleOptions) {\n  return `${styleLengths(width)} ${style} ${color}`;\n}\n","/** Tests a value if it is a number; otherwise return `NaN`. */\nexport function filterInt(/** The value to be filtered. */ value: string) {\n  if (/^(-|\\+)?([0-9]+|Infinity)$/.test(value)) {\n    return Number(value);\n  }\n\n  return NaN;\n}\n","type Provider = 'facebook' | 'twitter' | 'reddit' | 'linkedin';\n\ninterface BaseOption {\n  /** URL to be shared. */\n  url: string;\n}\n\ninterface FacebookOption {\n  /** URL to be shared. */\n  u: string;\n}\n\ninterface TwitterOption extends BaseOption {\n  /** Tweet contents. */\n  text: string;\n  /** Twitter handle to tag in the post. */\n  via: string;\n}\n\ntype LinkedinOption = BaseOption;\ntype RedditOption = BaseOption;\n\ntype Option<T> = T extends 'facebook'\n  ? FacebookOption\n  : T extends 'twitter'\n  ? TwitterOption\n  : T extends 'linkedin'\n  ? LinkedinOption\n  : T extends 'reddit'\n  ? RedditOption\n  : unknown;\n\n/** Generates a URL for sharing to social sites, e.g. Facebook, Twitter, etc. */\nexport function makeShareUrl<T extends Provider>(\n  /** The name of the social site */\n  provider: T,\n  /** Options for a particular social site */\n  options: Option<T>,\n) {\n  let baseUrl: string;\n  let baseOptions = { ...options };\n\n  switch (provider) {\n    case 'facebook':\n      baseUrl = 'https://www.facebook.com/sharer/sharer.php';\n      break;\n    case 'linkedin':\n      baseUrl = 'https://www.linkedin.com/sharing/share-offsite/';\n      baseOptions = {\n        ...baseOptions,\n        url: encodeURIComponent((options as LinkedinOption).url),\n      };\n      break;\n    case 'reddit':\n      baseUrl = 'https://www.reddit.com/submit';\n      break;\n    case 'twitter':\n      baseUrl = 'https://twitter.com/intent/tweet';\n      baseOptions = {\n        ...baseOptions,\n        text: encodeURIComponent((options as TwitterOption).text),\n      };\n      break;\n    default:\n      return '';\n  }\n\n  const query = Object.entries(baseOptions)\n    .map(([k, v]) => `${k}=${v}`)\n    .join('&');\n\n  return `${baseUrl}?${query}`;\n}\n","export * from './number-utils';\nexport * from './string-utils';\nexport * from './url-utils';\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","module.exports = __webpack_public_path__ + \"static/pu-2223980feeb82acbd75b6488fa21df43.svg\";","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-38146cfa7f94149cfeed1ec0420c44fa.ico\";"],"sourceRoot":""}