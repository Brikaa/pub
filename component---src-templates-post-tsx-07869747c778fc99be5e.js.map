{"version":3,"sources":["webpack:///./src/templates/post.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","_components__WEBPACK_IMPORTED_MODULE_1__","BlogPostTemplate","_ref","data","pageContext","post","markdownRemark","_post$frontmatter","frontmatter","title","tags","date","author","previous","next","image","description","excerpt","twitter","fluid","childImageSharp","file","height","body","html","prefix"],"mappings":"0FAEAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KA4DaI,EAAS,aA0EPG,UAhC0D,SAAAC,GAGnE,IAFJC,EAEID,EAFJC,KACAC,EACIF,EADJE,YAEMC,EAAOF,EAAKG,eADdC,EAEkCF,EAAKG,YAAnCC,EAFJF,EAEIE,MAAOC,EAFXH,EAEWG,KAAMC,EAFjBJ,EAEiBI,KAAMC,EAFvBL,EAEuBK,OACnBC,EAAmBT,EAAnBS,SAAUC,EAASV,EAATU,KACVC,EAAUV,EAAKG,YAAfO,MAER,OACEhB,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAKS,MAAOA,EAAOO,YAAaX,EAAKY,QAASC,QAASN,EAAOM,UAE9DnB,EAAA,cAACC,EAAA,EAAD,CACES,MAAOA,EACPU,MACEJ,EAAQA,EAAMK,gBAAgBD,MAAQhB,EAAKkB,KAAKD,gBAAgBD,MAElEG,OAAO,SAGTvB,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAUW,KAAMA,EAAMC,OAAQA,IAC9Bb,EAAA,cAACC,EAAA,EAAD,CAAUuB,KAAMlB,EAAKmB,OACpBd,GAAQX,EAAA,cAACC,EAAA,EAAD,CAAUU,KAAMA,KAG3BX,EAAA,cAACC,EAAA,EAAD,CAAWyB,OAAO,OAAOZ,SAAUA,EAAUC,KAAMA","file":"component---src-templates-post-tsx-07869747c778fc99be5e.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\n\nimport {\n  Container,\n  Hero,\n  Layout,\n  PageBody,\n  PostLinks,\n  PostMeta,\n  PostTags,\n  Seo,\n} from '@components';\n\ninterface PostNode {\n  fields: { slug: string };\n}\n\nexport interface Author {\n  id: string;\n  name: string;\n  github: string;\n  twitter?: string;\n  bio?: string;\n  avatar?: {\n    childImageSharp: {\n      fluid: FluidObject;\n    };\n  };\n}\n\ninterface BlogPostTemplateProps {\n  data: {\n    file: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    markdownRemark: {\n      id: string;\n      excerpt: string;\n      html: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        tags?: string[];\n        author: Author;\n        image: {\n          childImageSharp: {\n            fluid: FluidObject;\n          };\n        };\n      };\n    };\n  };\n  pageContext: {\n    previous: PostNode;\n    next: PostNode;\n  };\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    file(relativePath: { eq: \"default-post-image.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1800) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        author {\n          id\n          name\n          bio\n          github\n          avatar {\n            childImageSharp {\n              fluid(maxWidth: 1800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n        image {\n          childImageSharp {\n            fluid(maxWidth: 1800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst BlogPostTemplate: React.FunctionComponent<BlogPostTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const post = data.markdownRemark;\n  const { title, tags, date, author } = post.frontmatter;\n  const { previous, next } = pageContext;\n  const { image } = post.frontmatter;\n\n  return (\n    <Layout>\n      <Seo title={title} description={post.excerpt} twitter={author.twitter} />\n\n      <Hero\n        title={title}\n        fluid={\n          image ? image.childImageSharp.fluid : data.file.childImageSharp.fluid\n        }\n        height=\"50vh\"\n      />\n\n      <Container>\n        <PostMeta date={date} author={author} />\n        <PageBody body={post.html} />\n        {tags && <PostTags tags={tags} />}\n      </Container>\n\n      <PostLinks prefix=\"blog\" previous={previous} next={next} />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n"],"sourceRoot":""}