{"version":3,"sources":["webpack:///./src/templates/author.tsx","webpack:///./src/components/page-title.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","authorQuery","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","_components_card__WEBPACK_IMPORTED_MODULE_2__","_components_card_list__WEBPACK_IMPORTED_MODULE_3__","_components_container__WEBPACK_IMPORTED_MODULE_4__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_page_title__WEBPACK_IMPORTED_MODULE_6__","_components_pagination__WEBPACK_IMPORTED_MODULE_7__","_config_site__WEBPACK_IMPORTED_MODULE_8__","AuthorTemplate","_ref","data","pageContext","posts","allMarkdownRemark","edges","authorName","slug","totalPosts","currentPage","numberOfPosts","length","isFirstPage","a","site","title","property","content","url","small","map","_ref2","node","key","fields","excerpt","fluid","frontmatter","image","childImageSharp","file","publishDate","date","prefix","context","Title","styled","h1","withConfig","displayName","componentId","_ref3","theme","colors","base","_ref4","highlight","PageTitle","_ref5","children","react__WEBPACK_IMPORTED_MODULE_1__","defaultProps"],"mappings":"0FAEAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,gCAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,KAAAc,EAAAd,EAAA,KAAAe,EAAAf,EAAA,KAqDaI,EAAW,aA4GTY,UArEsD,SAAAC,GAG/D,IAFJC,EAEID,EAFJC,KACAC,EACIF,EADJE,YAEMC,EAAQF,EAAKG,kBAAkBC,MAC7BC,EAA8CJ,EAA9CI,WAAYC,EAAkCL,EAAlCK,KAAMC,EAA4BN,EAA5BM,WAAYC,EAAgBP,EAAhBO,YAChCC,EAAgBP,EAAMQ,OACtBC,EAA8B,IAAhBH,EAEpB,OACErB,EAAA,cAACO,EAAA,EAAD,KACGiB,EACCxB,EAAA,cAACE,EAAAuB,EAAD,KACEzB,EAAA,uCAAoBkB,EAApB,OAAqCQ,IAAKC,OAE1C3B,EAAA,sBACE4B,SAAS,WACTC,QAAO,YAAcX,EAAd,OAA+BQ,IAAKC,QAG7C3B,EAAA,sBAAM4B,SAAS,SAASC,QAAYH,IAAKI,IAAV,WAAwBX,EAAxB,OAGjCnB,EAAA,cAACE,EAAAuB,EAAD,KACEzB,EAAA,uCAAoBkB,EAApB,YAA0CG,EAA1C,MACEK,IAAKC,OAGP3B,EAAA,sBACE4B,SAAS,WACTC,QAAO,YAAcX,EAAd,YAAoCG,EAApC,MACLK,IAAKC,QAIT3B,EAAA,sBAAM4B,SAAS,SAASC,QAAYH,IAAKI,IAAV,WAAwBX,EAAxB,OAInCnB,EAAA,cAACM,EAAA,EAAD,KACEN,EAAA,cAACQ,EAAA,EAAD,CAAWuB,OAAO,GACfX,EADH,QACoBE,EAAgB,EAAI,IAAM,GAD9C,QAEGJ,EAFH,KAMAlB,EAAA,cAACK,EAAA,EAAD,KACGU,EAAMiB,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTlC,EAAA,cAACI,EAAA,EAAD,CACE+B,IAAKD,EAAKE,OAAOjB,KACjBA,KAAMe,EAAKE,OAAOjB,KAClBkB,QAASH,EAAKG,QACdC,MACEJ,EAAKK,YAAYC,MACbN,EAAKK,YAAYC,MAAMC,gBAAgBH,MACvCzB,EAAK6B,KAAKD,gBAAgBH,MAEhCK,YAAaT,EAAKK,YAAYK,KAC9BjB,MAAOO,EAAKK,YAAYZ,OAASO,EAAKE,OAAOjB,WAMrDnB,EAAA,cAACS,EAAA,EAAD,CAAYoC,OAAO,SAASC,QAAShC,0DCpJrCiC,SAAQC,EAAOC,GAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,eAAGJ,CAAH,0MACI,SAAApC,GAAA,OAAAA,EAAGmB,MAAqB,MAAQ,OAKnC,SAAAE,GAAA,OAAAA,EAAGF,MAAqB,gBAAkB,cASzC,SAAAsB,GAAA,OAAAA,EAAGC,MAAkBC,OAAOC,MAE1B,SAAAC,GAAA,OAAAA,EAAGH,MAAkBC,OAAOG,YAKrCC,EAAqD,SAAAC,GAAA,IACzDC,EADyDD,EACzDC,SACA9B,EAFyD6B,EAEzD7B,MAFyD,OAGrD+B,EAAA,cAACf,EAAD,CAAOhB,MAAOA,GAAQ8B,IAE5BF,EAAUI,aAAe,CACvBhC,OAAO,GAGM4B","file":"component---src-templates-author-tsx-8488852fbcb299d0fa7a.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport Card from '@components/card';\nimport CardList from '@components/card-list';\nimport Container from '@components/container';\nimport Layout from '@components/layout';\nimport PageTitle from '@components/page-title';\nimport Pagination from '@components/pagination';\nimport { site } from '@config/site';\n\ninterface PostNode {\n  node: {\n    excerpt: string;\n    frontmatter: {\n      date: string;\n      title: string;\n      image: {\n        childImageSharp: {\n          fluid: FluidObject;\n        };\n      };\n    };\n    fields: {\n      slug: string;\n    };\n  };\n}\n\ninterface AuthorTemplateProps {\n  data: {\n    file: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    totalCount: number;\n    allMarkdownRemark: {\n      edges: PostNode[];\n    };\n  };\n  pageContext: {\n    authorId: string;\n    authorName: string;\n    totalPosts: number;\n    slug: string;\n    limit?: number;\n    skip?: number;\n    numPages?: number;\n    currentPage?: number;\n  };\n}\n\nexport const authorQuery = graphql`\n  query($authorId: String, $skip: Int!, $limit: Int!) {\n    file(relativePath: { eq: \"default-post-image.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1800) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { author: { eq: $authorId } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 80)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst AuthorTemplate: React.FunctionComponent<AuthorTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const posts = data.allMarkdownRemark.edges;\n  const { authorName, slug, totalPosts, currentPage } = pageContext;\n  const numberOfPosts = posts.length;\n  const isFirstPage = currentPage === 1;\n\n  return (\n    <Layout>\n      {isFirstPage ? (\n        <Helmet>\n          <title>{`Author: \"${authorName}\" - ${site.title}`}</title>\n\n          <meta\n            property=\"og:title\"\n            content={`Author: \"${authorName}\" - ${site.title}`}\n          />\n\n          <meta property=\"og:url\" content={`${site.url}/author/${slug}/`} />\n        </Helmet>\n      ) : (\n        <Helmet>\n          <title>{`Author: \"${authorName}\" - Page ${currentPage} - ${\n            site.title\n          }`}</title>\n\n          <meta\n            property=\"og:title\"\n            content={`Author: \"${authorName}\" - Page ${currentPage} - ${\n              site.title\n            }`}\n          />\n\n          <meta property=\"og:url\" content={`${site.url}/author/${slug}/`} />\n        </Helmet>\n      )}\n\n      <Container>\n        <PageTitle small={true}>\n          {totalPosts} Post{numberOfPosts > 1 ? 's' : ''} by &ldquo;\n          {authorName}\n          &rdquo;\n        </PageTitle>\n\n        <CardList>\n          {posts.map(({ node }) => (\n            <Card\n              key={node.fields.slug}\n              slug={node.fields.slug}\n              excerpt={node.excerpt}\n              fluid={\n                node.frontmatter.image\n                  ? node.frontmatter.image.childImageSharp.fluid\n                  : data.file.childImageSharp.fluid\n              }\n              publishDate={node.frontmatter.date}\n              title={node.frontmatter.title || node.fields.slug}\n            />\n          ))}\n        </CardList>\n      </Container>\n\n      <Pagination prefix=\"author\" context={pageContext} />\n    </Layout>\n  );\n};\n\nexport default AuthorTemplate;\n","import * as React from 'react';\n\nimport styled from '@styled-components';\n\ninterface PageTitleProps {\n  small?: boolean;\n}\n\ntype TitleProps = Pick<PageTitleProps, 'small'>;\n\nconst Title = styled.h1<TitleProps>`\n  font-size: ${({ small }) => (small ? '2em' : '3em')};\n  text-transform: capitalize;\n  font-weight: 600;\n  text-align: center;\n  margin: 0 0 3rem 0;\n  margin: ${({ small }) => (small ? '1rem 0 4rem 0' : '0 0 3rem 0')};\n  line-height: 1.2;\n\n  span {\n    margin: 0 0 0 0.25em;\n  }\n\n  a {\n    transition: all 0.2s;\n    color: ${({ theme }) => theme.colors.base};\n    &:hover {\n      color: ${({ theme }) => theme.colors.highlight};\n    }\n  }\n`;\n\nconst PageTitle: React.FunctionComponent<PageTitleProps> = ({\n  children,\n  small,\n}) => <Title small={small}>{children}</Title>;\n\nPageTitle.defaultProps = {\n  small: false,\n};\n\nexport default PageTitle;\n"],"sourceRoot":""}