{"version":3,"sources":["webpack:///./src/pages/signin.tsx","webpack:///./src/components/shared/form.tsx"],"names":["Wrapper","styled","section","theme","colors","boxes","padding","smallTop","sizes","width","medium","small","Error","p","messageText","red","SignInPage","siteMetadata","useSiteMetadata","useState","setEmail","setPassword","message","setMessage","React","URL","window","location","href","searchParams","get","title","description","urlSlug","heading","style","color","htmlFor","name","type","placeholder","onChange","e","target","value","to","content","Heading","h2","FormElement","form","FormLabel","label","FormInput","input","LinkWrapper","div","ButtonWrapper","Form","children"],"mappings":"+iBAeA,IAAMA,EAAUC,IAAOC,QAAV,KACS,qBAAGC,MAAkBC,OAAOF,WAErC,qBAAGC,MAAkBE,MAAMC,QAAQJ,QAAQK,YAEvB,qBAAGJ,MAAkBK,MAAMC,MAAMC,UAIjC,qBAAGP,MAAkBK,MAAMC,MAAME,SACnD,qBAAGR,MAAkBE,MAAMC,QAAQJ,QAAQS,SAIpDC,EAAQX,IAAOY,EAAV,KACA,qBAAGV,MAAkBC,OAAOU,YAAYC,OA6DpCC,UAzDc,WAC3B,IAAMC,EAAeC,cADY,EAGPC,mBAAS,IAArBC,GAHmB,aAIDD,mBAAS,IAAxBE,GAJgB,aAKHF,mBAAS,IAAhCG,EAL0B,KAKjBC,EALiB,KAajC,OANAC,aAAgB,WACdD,EAAW,IAAIE,IAAIC,OAAOC,SAASC,MAAMC,aAAaC,IACpD,cAED,IAGD,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEC,MAAK,UACLC,YAAW,oBAAsBf,EAAac,MAAnC,WACXE,QAAQ,YAEV,gBAACjC,EAAD,KACE,gBAAC,IAAD,CAAMkC,QAAO,cAAgBjB,EAAac,OACvCT,GAAW,gBAACV,EAAD,CAAOuB,MAAO,CAAEC,MAAO,QAAUd,GAC7C,wBAAMa,MAAO,CAAEC,MAAO,SACtB,gBAAC,IAAD,CAAWC,QAAQ,SAAnB,SACA,gBAAC,IAAD,CACEC,KAAK,QACLC,KAAK,QACLC,YAAY,6BACZC,SAAU,SAACC,GAAD,OAAOtB,EAASsB,EAAEC,OAAOC,UAGrC,gBAAC,IAAD,CAAWP,QAAQ,YAAnB,oBACA,gBAAC,IAAD,CACEC,KAAK,WACLC,KAAK,WACLC,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAOrB,EAAYqB,EAAEC,OAAOC,UAGxC,gBAAC,IAAD,KACE,gBAAC,OAAD,CAAMC,GAAG,oBAAT,qBAGF,gBAAC,IAAD,KACE,gBAAC,OAAD,CAAMA,GAAG,YAAT,yBAGF,gBAAC,IAAD,KACE,gBAAC,IAAD,CAAWd,MAAM,UAAUH,KAAK,GAAGW,KAAK,QAAQO,QAAQ,kB,y9BChFpE,IAAMC,EAAU9C,IAAO+C,GAAV,KAEPC,EAAchD,IAAOiD,KAAV,KAKXC,EAAYlD,IAAOmD,MAAV,KAKTC,EAAYpD,IAAOqD,MAAV,KAYTC,EAActD,IAAOuD,IAAV,KAOXC,EAAgBxD,IAAOuD,IAAV,KAkBJE,IAVe,SAAC,GAA0B,IAAxBxB,EAAwB,EAAxBA,QAASyB,EAAe,EAAfA,SACxC,OACE,kBAACV,EAAD,KACE,kBAACF,EAAD,KAAUb,GACTyB","file":"component---src-pages-signin-tsx-baa52156ca6b9301cc15.js","sourcesContent":["import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\nimport { Layout, Seo } from '@components/shared';\nimport CtaButton from '@components/index-page/cta-button';\nimport { useSiteMetadata } from '@hooks';\nimport Form, {\n  FormLabel,\n  FormInput,\n  LinkWrapper,\n  ButtonWrapper,\n} from '@components/shared/form';\nimport { useState } from 'react';\n\nconst Wrapper = styled.section`\n  background-color: ${({ theme }) => theme.colors.section};\n\n  padding: ${({ theme }) => theme.boxes.padding.section.smallTop};\n\n  @media screen and(max-width: ${({ theme }) => theme.sizes.width.medium}) {\n    flex-direction: column;\n  }\n\n  @media screen and(max-width: ${({ theme }) => theme.sizes.width.small}) {\n    padding: ${({ theme }) => theme.boxes.padding.section.small};\n  }\n`;\n\nconst Error = styled.p`\n  color: ${({ theme }) => theme.colors.messageText.red};\n  margin-bottom: 0;\n`;\n\nconst SignInPage: React.FC = () => {\n  const siteMetadata = useSiteMetadata();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [message, setMessage] = useState('');\n\n  React.useEffect(() => {\n    setMessage(new URL(window.location.href).searchParams.get(\n      'message',\n    ) as string);\n  }, []);\n\n  return (\n    <Layout>\n      <Seo\n        title={`Sign In`}\n        description={`Sign In page for ${siteMetadata.title} website`}\n        urlSlug=\"signin/\"\n      />\n      <Wrapper>\n        <Form heading={`Sign In To ${siteMetadata.title}`}>\n          {message && <Error style={{ color: 'red' }}>{message}</Error>}\n          <span style={{ color: 'red' }} />\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"unicorn@projectunicorn.net\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <FormLabel htmlFor=\"password\">Confirm Password</FormLabel>\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Your Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <LinkWrapper>\n            <Link to=\"/forgotpassword/\">Forgot password?</Link>\n          </LinkWrapper>\n\n          <LinkWrapper>\n            <Link to=\"/signup/\">New member? Sign Up!</Link>\n          </LinkWrapper>\n\n          <ButtonWrapper>\n            <CtaButton title=\"Sign In\" href=\"\" type=\"input\" content=\"Sign In\" />\n          </ButtonWrapper>\n        </Form>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default SignInPage;\n","import React from 'react';\nimport styled from '@styled-components';\n\nconst Heading = styled.h2``;\n\nconst FormElement = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormLabel = styled.label`\n  font-weight: 800;\n  padding: 0.825em 0;\n`;\n\nconst FormInput = styled.input`\n  max-width: 400px;\n  padding: 0.425em;\n  border-radius: 0;\n  box-shadow: none;\n  border: 1px solid gray;\n\n  :focus {\n    border-color: black;\n  }\n`;\n\nconst LinkWrapper = styled.div`\n  margin: 0.625em 0.125em;\n  display: flex;\n  flex-direction: column;\n  max-width: fit-content;\n`;\n\nconst ButtonWrapper = styled.div`\n  padding: 1.825em 0.125em;\n`;\n\ninterface Props {\n  heading: string;\n}\n\nconst Form: React.FC<Props> = ({ heading, children }) => {\n  return (\n    <FormElement>\n      <Heading>{heading}</Heading>\n      {children}\n    </FormElement>\n  );\n};\n\nexport { FormLabel, FormInput, LinkWrapper, ButtonWrapper };\nexport default Form;\n"],"sourceRoot":""}