{"version":3,"sources":["webpack:///./src/templates/author.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","authorQuery","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","_components__WEBPACK_IMPORTED_MODULE_2__","_hooks__WEBPACK_IMPORTED_MODULE_3__","AuthorTemplate","_ref","data","pageContext","siteMetadata","useSiteMetadata","posts","allMarkdownRemark","edges","authorId","authorName","slug","totalPosts","currentPage","isFirstPage","a","title","property","content","url","small","map","_ref2","node","key","fields","excerpt","fluid","frontmatter","image","childImageSharp","file","publishDate","date","prefix","context"],"mappings":"0FAEAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,gCAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAuDaI,EAAW,aAkHTO,UA3EsD,SAAAC,GAG/D,IAFJC,EAEID,EAFJC,KACAC,EACIF,EADJE,YAEMC,EAAeC,cACfC,EAAQJ,EAAKK,kBAAkBC,MAC7BC,EAAwDN,EAAxDM,SAAUC,EAA8CP,EAA9CO,WAAYC,EAAkCR,EAAlCQ,KAAMC,EAA4BT,EAA5BS,WAAYC,EAAgBV,EAAhBU,YAC1CC,EAA8B,IAAhBD,EAEpB,OACEnB,EAAA,cAACI,EAAA,EAAD,KACGgB,EACCpB,EAAA,cAACE,EAAAmB,EAAD,KACErB,EAAA,uCAAoBgB,EAApB,OAAqCN,EAAaY,OAElDtB,EAAA,sBACEuB,SAAS,WACTC,QAAO,YAAcR,EAAd,OAA+BN,EAAaY,QAGrDtB,EAAA,sBACEuB,SAAS,SACTC,QAAYd,EAAae,IAAlB,gBAAqCR,EAArC,OAIXjB,EAAA,cAACE,EAAAmB,EAAD,KACErB,EAAA,uCAAoBgB,EAApB,YAA0CG,EAA1C,MACET,EAAaY,OAGftB,EAAA,sBACEuB,SAAS,WACTC,QAAO,YAAcR,EAAd,YAAoCG,EAApC,MACLT,EAAaY,QAIjBtB,EAAA,sBACEuB,SAAS,SACTC,QAAYd,EAAae,IAAlB,gBAAqCR,EAArC,OAKbjB,EAAA,cAACI,EAAA,EAAD,KACEJ,EAAA,cAACI,EAAA,EAAD,CAAWsB,OAAO,GACfR,EADH,QACoBA,EAAa,EAAI,IAAM,GAD3C,QAEGF,EAFH,KAMAhB,EAAA,cAACI,EAAA,EAAD,KACGQ,EAAMe,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACT7B,EAAA,cAACI,EAAA,EAAD,CACE0B,IAAKD,EAAKE,OAAOd,KACjBA,KAAMY,EAAKE,OAAOd,KAClBe,QAASH,EAAKG,QACdC,MACEJ,EAAKK,YAAYC,MACbN,EAAKK,YAAYC,MAAMC,gBAAgBH,MACvCzB,EAAK6B,KAAKD,gBAAgBH,MAEhCK,YAAaT,EAAKK,YAAYK,KAC9BjB,MAAOO,EAAKK,YAAYZ,OAASO,EAAKE,OAAOd,WAMrDjB,EAAA,cAACI,EAAA,EAAD,CAAYoC,OAAM,eAAiBzB,EAAY0B,QAAShC","file":"component---src-templates-author-tsx-4426340597dfc49463fd.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport {\n  Card,\n  CardList,\n  Container,\n  Layout,\n  PageTitle,\n  Pagination,\n} from '@components';\nimport { useSiteMetadata } from '@hooks';\n\ninterface PostNode {\n  node: {\n    excerpt: string;\n    frontmatter: {\n      date: string;\n      title: string;\n      image: {\n        childImageSharp: {\n          fluid: FluidObject;\n        };\n      };\n    };\n    fields: {\n      slug: string;\n    };\n  };\n}\n\ninterface AuthorTemplateProps {\n  data: {\n    file: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    totalCount: number;\n    allMarkdownRemark: {\n      edges: PostNode[];\n    };\n  };\n  pageContext: {\n    authorId: string;\n    authorName: string;\n    totalPosts: number;\n    slug: string;\n    limit?: number;\n    skip?: number;\n    numPages?: number;\n    currentPage?: number;\n  };\n}\n\nexport const authorQuery = graphql`\n  query($authorId: String, $skip: Int!, $limit: Int!) {\n    file(relativePath: { eq: \"default-post-image.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1800) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { author: { eq: $authorId } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 80)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst AuthorTemplate: React.FunctionComponent<AuthorTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const siteMetadata = useSiteMetadata();\n  const posts = data.allMarkdownRemark.edges;\n  const { authorId, authorName, slug, totalPosts, currentPage } = pageContext;\n  const isFirstPage = currentPage === 1;\n\n  return (\n    <Layout>\n      {isFirstPage ? (\n        <Helmet>\n          <title>{`Author: \"${authorName}\" - ${siteMetadata.title}`}</title>\n\n          <meta\n            property=\"og:title\"\n            content={`Author: \"${authorName}\" - ${siteMetadata.title}`}\n          />\n\n          <meta\n            property=\"og:url\"\n            content={`${siteMetadata.url}/blog/author/${slug}/`}\n          />\n        </Helmet>\n      ) : (\n        <Helmet>\n          <title>{`Author: \"${authorName}\" - Page ${currentPage} - ${\n            siteMetadata.title\n          }`}</title>\n\n          <meta\n            property=\"og:title\"\n            content={`Author: \"${authorName}\" - Page ${currentPage} - ${\n              siteMetadata.title\n            }`}\n          />\n\n          <meta\n            property=\"og:url\"\n            content={`${siteMetadata.url}/blog/author/${slug}/`}\n          />\n        </Helmet>\n      )}\n\n      <Container>\n        <PageTitle small={true}>\n          {totalPosts} Post{totalPosts > 1 ? 's' : ''} by &ldquo;\n          {authorName}\n          &rdquo;\n        </PageTitle>\n\n        <CardList>\n          {posts.map(({ node }) => (\n            <Card\n              key={node.fields.slug}\n              slug={node.fields.slug}\n              excerpt={node.excerpt}\n              fluid={\n                node.frontmatter.image\n                  ? node.frontmatter.image.childImageSharp.fluid\n                  : data.file.childImageSharp.fluid\n              }\n              publishDate={node.frontmatter.date}\n              title={node.frontmatter.title || node.fields.slug}\n            />\n          ))}\n        </CardList>\n      </Container>\n\n      <Pagination prefix={`blog/author/${authorId}`} context={pageContext} />\n    </Layout>\n  );\n};\n\nexport default AuthorTemplate;\n"],"sourceRoot":""}