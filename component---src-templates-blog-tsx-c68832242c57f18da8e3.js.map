{"version":3,"sources":["webpack:///./src/templates/blog.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","_components_blog__WEBPACK_IMPORTED_MODULE_1__","_components_shared__WEBPACK_IMPORTED_MODULE_2__","_hooks__WEBPACK_IMPORTED_MODULE_3__","BlogTemplate","_ref","data","pageContext","siteMetadata","useSiteMetadata","defaultPostImage","useDefaultPostImage","nodes","allMarkdownRemark","currentPage","isFirstPage","navLinks","content","external","href","title","urlSlug","map","_ref2","fields","excerpt","frontmatter","key","slug","fluid","image","childImageSharp","publishDate","date","prefix","context"],"mappings":"2FAEAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAqCaI,EAAS,aA+EPK,UAlDmC,SAAAC,GAA2B,IAAxBC,EAAwBD,EAAxBC,KAAMC,EAAkBF,EAAlBE,YACnDC,EAAeC,cACfC,EAAmBC,cACjBC,EAAUN,EAAKO,kBAAfD,MACAE,EAAgBP,EAAhBO,YACFC,EAA8B,IAAhBD,EAUpB,OACEd,EAAA,cAACE,EAAA,EAAD,CAAQc,SAVyB,CACjC,CACEC,QAAS,OACTC,UAAU,EACVC,KAAM,aACNC,MAAO,uBAMNL,EACCf,EAAA,cAACE,EAAA,EAAD,CAAKkB,MAAM,OAAOC,QAAQ,UAE1BrB,EAAA,cAACE,EAAA,EAAD,CACEkB,MAAK,QAAUN,EAAV,MAA2BN,EAAaY,MAC7CC,QAAQ,UAIZrB,EAAA,cAACE,EAAA,EAAD,KACEF,EAAA,cAACC,EAAA,EAAD,KACGW,EAAMU,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,OAAQC,EAAXF,EAAWE,QAASC,EAApBH,EAAoBG,YAApB,OACT1B,EAAA,cAACC,EAAA,EAAD,CACE0B,IAAKH,EAAOI,KACZA,KAAMJ,EAAOI,KACbH,QAASA,EACTI,MACEH,EAAYI,MACRJ,EAAYI,MAAMC,gBAAgBF,MAClCnB,EAAiBqB,gBAAgBF,MAEvCG,YAAaN,EAAYO,KACzBb,MAAOM,EAAYN,OAASI,EAAOI,WAM3C5B,EAAA,cAACC,EAAA,EAAD,CAAYiC,OAAO,OAAOC,QAAS5B","file":"component---src-templates-blog-tsx-c68832242c57f18da8e3.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\n\nimport { NavigationLink } from '@components/shared/navigation';\nimport { Card, CardList, Pagination } from '@components/blog';\nimport { Container, Layout, Seo } from '@components/shared';\nimport { useDefaultPostImage, useSiteMetadata } from '@hooks';\n\ninterface PostNode {\n  excerpt: string;\n  frontmatter: {\n    date: string;\n    title: string;\n    image: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n  };\n  fields: {\n    slug: string;\n  };\n}\n\ninterface BlogTemplateProps {\n  data: {\n    allMarkdownRemark: {\n      nodes: PostNode[];\n    };\n  };\n  pageContext: {\n    limit?: number;\n    skip?: number;\n    numPages?: number;\n    currentPage?: number;\n  };\n}\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      nodes {\n        excerpt(pruneLength: 80)\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          image {\n            childImageSharp {\n              fluid(maxWidth: 1800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\n/** Used by Gatsby to display the list of blog posts at the blog index page. */\nconst BlogTemplate: React.FC<BlogTemplateProps> = ({ data, pageContext }) => {\n  const siteMetadata = useSiteMetadata();\n  const defaultPostImage = useDefaultPostImage();\n  const { nodes } = data.allMarkdownRemark;\n  const { currentPage } = pageContext;\n  const isFirstPage = currentPage === 1;\n  const navLinks: NavigationLink[] = [\n    {\n      content: 'Tags',\n      external: false,\n      href: '/blog/tags',\n      title: 'List of blog tags',\n    },\n  ];\n\n  return (\n    <Layout navLinks={navLinks}>\n      {isFirstPage ? (\n        <Seo title=\"Blog\" urlSlug=\"blog/\" />\n      ) : (\n        <Seo\n          title={`Page ${currentPage} - ${siteMetadata.title}`}\n          urlSlug=\"blog/\"\n        />\n      )}\n\n      <Container>\n        <CardList>\n          {nodes.map(({ fields, excerpt, frontmatter }) => (\n            <Card\n              key={fields.slug}\n              slug={fields.slug}\n              excerpt={excerpt}\n              fluid={\n                frontmatter.image\n                  ? frontmatter.image.childImageSharp.fluid\n                  : defaultPostImage.childImageSharp.fluid\n              }\n              publishDate={frontmatter.date}\n              title={frontmatter.title || fields.slug}\n            />\n          ))}\n        </CardList>\n      </Container>\n\n      <Pagination prefix=\"blog\" context={pageContext} />\n    </Layout>\n  );\n};\n\nexport default BlogTemplate;\n"],"sourceRoot":""}