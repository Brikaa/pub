{"version":3,"sources":["webpack:///./src/templates/author.tsx","webpack:///./src/config/index.ts"],"names":["__webpack_require__","r","__webpack_exports__","d","authorQuery","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","_components__WEBPACK_IMPORTED_MODULE_2__","_config__WEBPACK_IMPORTED_MODULE_3__","AuthorTemplate","_ref","data","pageContext","posts","allMarkdownRemark","edges","authorName","slug","totalPosts","currentPage","numberOfPosts","length","isFirstPage","a","site","title","property","content","url","small","map","_ref2","node","key","fields","excerpt","fluid","frontmatter","image","childImageSharp","file","publishDate","date","prefix","context","_site__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"0FAEAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,gCAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAAAU,EAAAV,EAAA,KAuDaI,EAAW,aA4GTO,UArEsD,SAAAC,GAG/D,IAFJC,EAEID,EAFJC,KACAC,EACIF,EADJE,YAEMC,EAAQF,EAAKG,kBAAkBC,MAC7BC,EAA8CJ,EAA9CI,WAAYC,EAAkCL,EAAlCK,KAAMC,EAA4BN,EAA5BM,WAAYC,EAAgBP,EAAhBO,YAChCC,EAAgBP,EAAMQ,OACtBC,EAA8B,IAAhBH,EAEpB,OACEhB,EAAA,cAACI,EAAA,EAAD,KACGe,EACCnB,EAAA,cAACE,EAAAkB,EAAD,KACEpB,EAAA,uCAAoBa,EAApB,OAAqCQ,IAAKC,OAE1CtB,EAAA,sBACEuB,SAAS,WACTC,QAAO,YAAcX,EAAd,OAA+BQ,IAAKC,QAG7CtB,EAAA,sBAAMuB,SAAS,SAASC,QAAYH,IAAKI,IAAV,WAAwBX,EAAxB,OAGjCd,EAAA,cAACE,EAAAkB,EAAD,KACEpB,EAAA,uCAAoBa,EAApB,YAA0CG,EAA1C,MACEK,IAAKC,OAGPtB,EAAA,sBACEuB,SAAS,WACTC,QAAO,YAAcX,EAAd,YAAoCG,EAApC,MACLK,IAAKC,QAITtB,EAAA,sBAAMuB,SAAS,SAASC,QAAYH,IAAKI,IAAV,WAAwBX,EAAxB,OAInCd,EAAA,cAACI,EAAA,EAAD,KACEJ,EAAA,cAACI,EAAA,EAAD,CAAWsB,OAAO,GACfX,EADH,QACoBE,EAAgB,EAAI,IAAM,GAD9C,QAEGJ,EAFH,KAMAb,EAAA,cAACI,EAAA,EAAD,KACGM,EAAMiB,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACT7B,EAAA,cAACI,EAAA,EAAD,CACE0B,IAAKD,EAAKE,OAAOjB,KACjBA,KAAMe,EAAKE,OAAOjB,KAClBkB,QAASH,EAAKG,QACdC,MACEJ,EAAKK,YAAYC,MACbN,EAAKK,YAAYC,MAAMC,gBAAgBH,MACvCzB,EAAK6B,KAAKD,gBAAgBH,MAEhCK,YAAaT,EAAKK,YAAYK,KAC9BjB,MAAOO,EAAKK,YAAYZ,OAASO,EAAKE,OAAOjB,WAMrDd,EAAA,cAACI,EAAA,EAAD,CAAYoC,OAAO,SAASC,QAAShC,wCChK3C,IAAAiC,EAAA/C,EAAA,KAAAA,EAAAG,EAAAD,EAAA,sBAAA6C,EAAA","file":"component---src-templates-author-tsx-63e3d1040cd165a6ee26.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport {\n  Card,\n  CardList,\n  Container,\n  Layout,\n  PageTitle,\n  Pagination,\n} from '@components';\nimport { site } from '@config';\n\ninterface PostNode {\n  node: {\n    excerpt: string;\n    frontmatter: {\n      date: string;\n      title: string;\n      image: {\n        childImageSharp: {\n          fluid: FluidObject;\n        };\n      };\n    };\n    fields: {\n      slug: string;\n    };\n  };\n}\n\ninterface AuthorTemplateProps {\n  data: {\n    file: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    totalCount: number;\n    allMarkdownRemark: {\n      edges: PostNode[];\n    };\n  };\n  pageContext: {\n    authorId: string;\n    authorName: string;\n    totalPosts: number;\n    slug: string;\n    limit?: number;\n    skip?: number;\n    numPages?: number;\n    currentPage?: number;\n  };\n}\n\nexport const authorQuery = graphql`\n  query($authorId: String, $skip: Int!, $limit: Int!) {\n    file(relativePath: { eq: \"default-post-image.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1800) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { author: { eq: $authorId } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 80)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst AuthorTemplate: React.FunctionComponent<AuthorTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const posts = data.allMarkdownRemark.edges;\n  const { authorName, slug, totalPosts, currentPage } = pageContext;\n  const numberOfPosts = posts.length;\n  const isFirstPage = currentPage === 1;\n\n  return (\n    <Layout>\n      {isFirstPage ? (\n        <Helmet>\n          <title>{`Author: \"${authorName}\" - ${site.title}`}</title>\n\n          <meta\n            property=\"og:title\"\n            content={`Author: \"${authorName}\" - ${site.title}`}\n          />\n\n          <meta property=\"og:url\" content={`${site.url}/author/${slug}/`} />\n        </Helmet>\n      ) : (\n        <Helmet>\n          <title>{`Author: \"${authorName}\" - Page ${currentPage} - ${\n            site.title\n          }`}</title>\n\n          <meta\n            property=\"og:title\"\n            content={`Author: \"${authorName}\" - Page ${currentPage} - ${\n              site.title\n            }`}\n          />\n\n          <meta property=\"og:url\" content={`${site.url}/author/${slug}/`} />\n        </Helmet>\n      )}\n\n      <Container>\n        <PageTitle small={true}>\n          {totalPosts} Post{numberOfPosts > 1 ? 's' : ''} by &ldquo;\n          {authorName}\n          &rdquo;\n        </PageTitle>\n\n        <CardList>\n          {posts.map(({ node }) => (\n            <Card\n              key={node.fields.slug}\n              slug={node.fields.slug}\n              excerpt={node.excerpt}\n              fluid={\n                node.frontmatter.image\n                  ? node.frontmatter.image.childImageSharp.fluid\n                  : data.file.childImageSharp.fluid\n              }\n              publishDate={node.frontmatter.date}\n              title={node.frontmatter.title || node.fields.slug}\n            />\n          ))}\n        </CardList>\n      </Container>\n\n      <Pagination prefix=\"author\" context={pageContext} />\n    </Layout>\n  );\n};\n\nexport default AuthorTemplate;\n","export * from './site';\n"],"sourceRoot":""}