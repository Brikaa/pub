{"version":3,"sources":["webpack:///./src/styled-components.ts","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/card-list.tsx","webpack:///./src/components/card.tsx","webpack:///./src/components/container.tsx","webpack:///./src/components/footer.tsx","webpack:///./src/components/hero.tsx","webpack:///./src/styles/global-style.ts","webpack:///./src/styles/theme.ts","webpack:///./src/components/layout.tsx","webpack:///./src/components/menu.tsx","webpack:///./src/components/page-body.tsx","webpack:///./src/components/page-title.tsx","webpack:///./src/components/pagination.tsx","webpack:///./src/components/post-links.tsx","webpack:///./src/components/post-meta.tsx","webpack:///./src/components/post-tags.tsx","webpack:///./src/components/seo.tsx","webpack:///./src/components/index.ts","webpack:///./src/hooks/use-site-metadata.ts","webpack:///./src/hooks/index.ts","webpack:///./src/images/pu.svg","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/string-utils.ts","webpack:///./src/utils/typography.ts","webpack:///./src/utils/index.ts","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./static/favicon.ico"],"names":["__webpack_require__","d","__webpack_exports__","createGlobalStyle","ThemeProvider","styled","default","css","keyframes","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","a","React","createContext","PropTypes","object","string","isRequired","func","List","ul","withConfig","displayName","componentId","CardList","_ref","children","react","Post","li","theme","colors","secondary","_ref2","responsive","small","_ref3","featured","_ref4","medium","_ref5","_ref6","tertiary","_ref7","base","_ref8","_ref9","highlight","_ref10","_ref11","Title","h2","Date","p","Excerpt","Card","_ref12","slug","title","publishDate","excerpt","_ref12$featured","fluid","gatsby_browser_entry","to","gatsby_image_default","backgroundColor","card_Date","dangerouslySetInnerHTML","__html","Wrapper","section","sizes","maxWidth","Container","footer","Item","Footer","footer_Wrapper","footer_List","href","rel","target","src","puLogo","style","width","alt","BgImg","Img","height","fit","position","h1","maxWidthCentered","Hero","hero_Wrapper","hero_Title","GlobalStyle","_templateObject","large","Root","div","Content","Layout","siteMetadata","useSiteMetadata","Helmet_default","charSet","name","content","favicon","styled_components","menu","header","StyledLink","Link","Nav","nav","ListItem","activeLinkStyle","Menu","menu_Wrapper","menu_List","activeStyle","Body","PageBody","body","PageTitle","_ref5$small","page_title_Title","PreviousLink","NextLink","PageIndicator","span","Pagination","context","prefix","numPages","_context$currentPage","currentPage","isFirst","isLast","isNotPaginated","pathPrefix","prevPageLink","nextPageLink","pagination_Wrapper","Box","PostLinks","previous","next","linkPrefix","post_links_Wrapper","post_links_PreviousLink","fields","post_links_NextLink","Avatar","attrs","Bio","PostDate","date","_ref4$author","author","avatar","bio","id","post_meta_Wrapper","childImageSharp","post_meta_Body","post_meta_StyledLink","Tag","PostTags","tags","post_tags_List","map","tag","key","slugify","Seo","description","_ref$keywords","keywords","_ref$lang","lang","_ref$meta","meta","twitter","metaDescription","htmlAttributes","titleTemplate","property","concat","length","join","card_list","card","container","hero","layout","page_body","page_title","pagination","post_links","post_meta","post_tags","seo","_2003731014","data","site","use_site_metadata_useSiteMetadata","module","exports","m","require","text","toString","toLowerCase","replace","Typography","funstonTheme","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","Object","assign","json","propTypes","shape"],"mappings":"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","file":"1-c645114d318575c1b2a4.js","sourcesContent":["import * as styledComponents from 'styled-components';\nimport { ThemedStyledComponentsModule } from 'styled-components';\n\nimport { ThemeInterface } from '@styles';\n\nconst {\n  default: styled,\n  css,\n  createGlobalStyle,\n  keyframes,\n  ThemeProvider,\n} = styledComponents as ThemedStyledComponentsModule<ThemeInterface>;\n\nexport { css, createGlobalStyle, keyframes, ThemeProvider };\nexport default styled;\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from 'react';\n\nimport styled from '@styled-components';\n\nconst List = styled.ul`\n  list-style: none;\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  margin: 0 auto;\n\n  &::after {\n    content: '';\n    flex: 0 0 32%;\n  }\n`;\n\nconst CardList: React.FunctionComponent = ({ children }) => (\n  <List>{children}</List>\n);\n\nexport default CardList;\n","import { Link } from 'gatsby';\nimport Img, { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\n\ninterface PostProps {\n  featured: boolean;\n}\n\ninterface CardProps {\n  slug: string;\n  fluid: FluidObject;\n  title: string;\n  publishDate: string;\n  excerpt: string;\n  featured?: boolean;\n}\n\nconst Post = styled.li<PostProps>`\n  position: relative;\n  border: 1px solid ${({ theme }) => theme.colors.secondary};\n  border-radius: 2px;\n  width: 100%;\n  transition: background 0.2s;\n\n  @media screen and (min-width: ${({ theme }) => theme.responsive.small}) {\n    flex: ${({ featured }) => (featured ? '0 0 100%' : '0 0 49%')};\n    margin: 0 0 2vw 0;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.responsive.medium}) {\n    flex: ${({ featured }) => (featured ? '0 0 100%' : '0 0 32%')};\n  }\n\n  &:hover {\n    background: ${({ theme }) => theme.colors.tertiary};\n  }\n\n  a {\n    display: flex;\n    flex-flow: column;\n    height: 100%;\n    width: 100%;\n    color: ${({ theme }) => theme.colors.base};\n    text-decoration: none;\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.base};\n\n      h2 {\n        color: ${({ theme }) => theme.colors.highlight};\n      }\n    }\n\n    .gatsby-image-wrapper {\n      height: 0;\n      padding-bottom: 60%;\n\n      @media screen and (min-width: ${({ theme }) => theme.responsive.small}) {\n        padding-bottom: ${({ featured }) => (featured ? '40%' : '60%')};\n      }\n    }\n  }\n`;\n\nconst Title = styled.h2`\n  text-transform: capitalize;\n  margin: 1rem 1rem 0.5rem 1rem;\n`;\n\nconst Date = styled.p`\n  margin: 0 1rem 1.5rem 1rem;\n  color: darkslategray;\n`;\n\nconst Excerpt = styled.p`\n  padding: 0 1rem 1rem 1rem;\n`;\n\nconst Card: React.FunctionComponent<CardProps> = ({\n  slug,\n  title,\n  publishDate,\n  excerpt,\n  featured = false,\n  fluid,\n}) => (\n  <Post featured={featured}>\n    <Link to={`/blog/${slug}/`}>\n      <Img fluid={fluid} backgroundColor=\"#eeeeee\" />\n      <Title>{title}</Title>\n      <Date>{publishDate}</Date>\n      <Excerpt dangerouslySetInnerHTML={{ __html: excerpt }} />\n    </Link>\n  </Post>\n);\n\nexport default Card;\n","import * as React from 'react';\n\nimport styled from '@styled-components';\n\nconst Wrapper = styled.section`\n  margin: 0 auto auto;\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidth};\n  padding: 3em 1.5em 2em;\n  flex-grow: 1;\n`;\n\nconst Container: React.FunctionComponent = ({ children }) => (\n  <Wrapper>{children}</Wrapper>\n);\n\nexport default Container;\n","import * as React from 'react';\n\nimport puLogo from '@images/pu.svg';\nimport styled from '@styled-components';\n\nconst Wrapper = styled.footer`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: flex-start;\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.sizes.maxWidth};\n`;\n\nconst List = styled.ul`\n  display: flex;\n  flex-flow: row wrap;\n  justify-content: space-between;\n  align-items: center;\n  width: 100%;\n  border-top: 1px solid ${({ theme }) => theme.colors.secondary};\n  padding: 1em 0 0.5em;\n  margin: 0 1.5em;\n`;\n\nconst Item = styled.li`\n  display: inline-block;\n  padding: 0.25em 0;\n  width: 100%;\n\n  @media screen and (min-width: ${({ theme }) => theme.responsive.small}) {\n    width: auto;\n  }\n\n  a {\n    font-weight: 600;\n    transition: all 0.2s;\n    color: ${({ theme }) => theme.colors.base};\n\n    &:visited {\n      color: ${({ theme }) => theme.colors.base};\n    }\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.highlight};\n    }\n  }\n`;\n\nconst Footer: React.FunctionComponent = () => (\n  <Wrapper>\n    <List>\n      <Item>\n        <a\n          href=\"https://projectunicorn.net/\"\n          rel=\"nofollow noopener noreferrer\"\n          target=\"_blank\"\n        >\n          <img src={puLogo} style={{ width: '100px' }} alt=\"Project Unicorn\" />\n        </a>\n      </Item>\n\n      <Item>\n        <a\n          href=\"https://github.com/projectunic0rn/pub\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          pub\n        </a>{' '}\n        repo is maintained by{' '}\n        <a\n          href=\"https://github.com/rmjordas\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          @rmjordas\n        </a>\n      </Item>\n    </List>\n  </Wrapper>\n);\n\nexport default Footer;\n","import Img, { FluidObject, GatsbyImageProps } from 'gatsby-image';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\n\ninterface BgImgProps {\n  height?: string;\n  fit?: string;\n  position?: string;\n}\n\ninterface HeroProps extends Pick<BgImgProps, 'height'> {\n  fluid: FluidObject;\n  title: string;\n}\n\nconst Wrapper = styled.section`\n  position: relative;\n  min-height: 300px;\n`;\n\nconst BgImg = styled(Img)<BgImgProps & GatsbyImageProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: -1;\n  min-height: 300px;\n  height: auto;\n\n  @media (min-width: ${({ theme }) => theme.responsive.small}) {\n    height: ${({ height }) => height || 'auto'};\n  }\n\n  & > img {\n    object-fit: ${({ fit }) => fit || 'cover'} !important;\n    object-position: ${({ position }) => position || '50% 50%'} !important;\n  }\n\n  &::before {\n    content: '';\n    background: rgba(0, 0, 0, 0.25);\n    position: absolute;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    height: 100%;\n    width: 100%;\n    z-index: 1;\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 3em;\n  text-transform: capitalize;\n  font-weight: 600;\n  position: absolute;\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n  padding: 0 1rem;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  text-align: center;\n  color: white;\n`;\n\nconst Hero: React.FunctionComponent<HeroProps> = ({ height, fluid, title }) => (\n  <Wrapper>\n    <BgImg height={height} fluid={fluid} backgroundColor=\"#eeeeee\" />\n    <Title>{title}</Title>\n  </Wrapper>\n);\n\nexport default Hero;\n","import { createGlobalStyle } from '@styled-components';\n\nexport const GlobalStyle = createGlobalStyle`\n  html, body {\n    height: 100%;\n  }\n\n  footer {\n    width: 100%;\n  }\n\n  @media screen and (min-width: 35em) {\n    html {\n      margin-right: calc(-100vw + 100%);\n      overflow-x: hidden;\n    }\n  }\n\n`;\n","const colors = {\n  base: '#121212', // Off-black\n  highlight: '#5f8ddc', // Light Blue\n  secondary: '#e9e9e9', // Medium Gray\n  tertiary: '#f3f3f3', // Light Gray\n};\n\nconst responsive = {\n  large: '70em',\n  medium: '50em',\n  small: '35em',\n};\n\nconst sizes = {\n  maxWidth: '1050px',\n  maxWidthCentered: '650px',\n};\n\nexport interface ThemeInterface {\n  colors: typeof colors;\n  responsive: typeof responsive;\n  sizes: typeof sizes;\n}\n\nexport const theme: ThemeInterface = {\n  colors,\n  responsive,\n  sizes,\n};\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { Footer, Menu } from '@components';\nimport { useSiteMetadata } from '@hooks';\nimport favicon from '@static/favicon.ico';\nimport styled, { ThemeProvider } from '@styled-components';\nimport { GlobalStyle, theme } from '@styles';\n\nconst Root = styled.div`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: 1 0 auto;\n`;\n\nconst Layout: React.FunctionComponent = ({ children }) => {\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Root>\n      <Helmet>\n        <title>{siteMetadata.title}</title>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n        <link rel=\"icon\" href={favicon} />\n      </Helmet>\n\n      <ThemeProvider theme={theme}>\n        <React.Fragment>\n          <Content>\n            <Menu />\n            {children}\n          </Content>\n\n          <Footer />\n        </React.Fragment>\n      </ThemeProvider>\n\n      <GlobalStyle />\n    </Root>\n  );\n};\n\nexport default Layout;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport puLogo from '@images/pu.svg';\nimport styled from '@styled-components';\n\nconst Wrapper = styled.header`\n  background: white;\n  width: 100%;\n  padding: 1em 0;\n`;\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.highlight};\n  transition: all 0.2s;\n  height: 100%;\n  display: flex;\n  align-items: center;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.highlight};\n  }\n`;\n\nconst Nav = styled.nav`\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidth};\n  margin: 0 auto;\n  padding: 0 1.5em;\n`;\n\nconst List = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  margin: 0;\n  align-items: center;\n`;\n\nconst ListItem = styled.li`\n  display: inline-block;\n  margin: 0 0 0 1em;\n\n  &:first-child {\n    position: relative;\n    margin: 0;\n    flex-basis: 100%;\n  }\n`;\n\nconst activeLinkStyle = {};\n\nconst Menu: React.FunctionComponent = () => (\n  <Wrapper>\n    <Nav>\n      <List>\n        <ListItem>\n          <StyledLink to=\"/\" activeStyle={activeLinkStyle}>\n            <img\n              src={puLogo}\n              style={{ width: '100px' }}\n              alt=\"Project Unicorn\"\n            />\n          </StyledLink>\n        </ListItem>\n\n        <ListItem>\n          <StyledLink to=\"/blog/tags/\" activeStyle={activeLinkStyle}>\n            Tags\n          </StyledLink>\n        </ListItem>\n      </List>\n    </Nav>\n  </Wrapper>\n);\n\nexport default Menu;\n","import * as React from 'react';\n\nimport styled from '@styled-components';\n\ninterface PageBodyProps {\n  body: string;\n}\n\nconst Body = styled.div`\n  margin: 0 auto;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n\n  h1,\n  h2,\n  h3 {\n    text-transform: capitalize;\n  }\n\n  a {\n    transition: 0.2s;\n    color: ${({ theme }) => theme.colors.base};\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.highlight};\n    }\n  }\n\n  pre {\n    margin: 0 0 1.5em 0;\n    border-radius: 2px;\n\n    span {\n      background: inherit !important;\n    }\n  }\n`;\n\nconst PageBody: React.FunctionComponent<PageBodyProps> = ({ body }) => (\n  <Body dangerouslySetInnerHTML={{ __html: body }} />\n);\n\nexport default PageBody;\n","import * as React from 'react';\n\nimport styled from '@styled-components';\n\ninterface PageTitleProps {\n  small?: boolean;\n}\n\ntype TitleProps = Pick<PageTitleProps, 'small'>;\n\nconst Title = styled.h1<TitleProps>`\n  font-size: ${({ small }) => (small ? '2em' : '3em')};\n  text-transform: capitalize;\n  font-weight: 600;\n  text-align: center;\n  margin: 0 0 3rem 0;\n  margin: ${({ small }) => (small ? '1rem 0 4rem 0' : '0 0 3rem 0')};\n  line-height: 1.2;\n\n  span {\n    margin: 0 0 0 0.25em;\n  }\n\n  a {\n    transition: all 0.2s;\n    color: ${({ theme }) => theme.colors.base};\n\n    &:hover {\n      color: ${({ theme }) => theme.colors.highlight};\n    }\n  }\n`;\n\nconst PageTitle: React.FunctionComponent<PageTitleProps> = ({\n  children,\n  small = false,\n}) => <Title small={small}>{children}</Title>;\n\nexport default PageTitle;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\n\ninterface PaginationProps {\n  context: {\n    tag?: string;\n    slug?: string;\n    limit?: number;\n    skip?: number;\n    numPages?: number;\n    currentPage?: number;\n  };\n  prefix?: string;\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n  margin: -2em auto 0;\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidth};\n  padding: 0 1.5em 2em;\n\n  a {\n    background: transparent;\n    color: ${({ theme }) => theme.colors.base};\n    padding: 1em 0.8em;\n    border-color: ${({ theme }) => theme.colors.highlight};\n    border-radius: 2px;\n    text-decoration: none;\n    transition: 0.2s;\n\n    &:hover {\n      background: ${({ theme }) => theme.colors.highlight};\n      color: white;\n    }\n  }\n`;\n\nconst PreviousLink = styled(Link)`\n  margin-right: auto;\n  order: 1;\n`;\n\nconst NextLink = styled(Link)`\n  margin-left: auto;\n  order: 3;\n`;\n\nconst PageIndicator = styled.span`\n  color: darkslategray;\n  position: absolute;\n  left: 0;\n  right: 0;\n  width: 100%;\n  text-align: center;\n  padding: 1em 1.5em;\n  z-index: -1;\n  opacity: 0.7;\n`;\n\nconst Pagination: React.FunctionComponent<PaginationProps> = ({\n  context,\n  prefix,\n}) => {\n  const { numPages, currentPage = 1 } = context;\n  const isFirst = currentPage === 1;\n  const isLast = currentPage === numPages;\n  const isNotPaginated = isFirst && isLast;\n\n  const prevPageNum = currentPage - 1 === 1 ? `` : currentPage - 1;\n  const nextPageNum = currentPage + 1;\n\n  const pathPrefix = prefix ? `/${prefix}/` : '/';\n  const prevPageLink = isFirst ? null : `${pathPrefix}${prevPageNum}/`;\n  const nextPageLink = isLast ? null : `${pathPrefix}${nextPageNum}/`;\n\n  return (\n    <Wrapper>\n      {!isFirst && prevPageLink && (\n        <PreviousLink to={prevPageLink}>&#8592; Prev Page</PreviousLink>\n      )}\n\n      {!isNotPaginated && (\n        <PageIndicator>\n          {currentPage}/{numPages}\n        </PageIndicator>\n      )}\n\n      {!isLast && nextPageLink && (\n        <NextLink to={nextPageLink}>Next Page &#8594;</NextLink>\n      )}\n    </Wrapper>\n  );\n};\n\nexport default Pagination;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\n\ninterface PostNode {\n  fields: { slug: string };\n}\n\ninterface PostLinksProps {\n  prefix: string;\n  previous: PostNode;\n  next: PostNode;\n}\n\nconst Wrapper = styled.div`\n  margin: -2em 0 0 0;\n  padding: 0 1.5em 2em;\n`;\n\nconst Box = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin: 0 auto;\n  width: 100%;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n\n  a {\n    background: transparent;\n    color: ${({ theme }) => theme.colors.base};\n    padding: 1em;\n    border-radius: 2px;\n    text-decoration: none;\n    transition: 0.2s;\n\n    &:hover {\n      background: ${({ theme }) => theme.colors.highlight};\n      color: white;\n    }\n  }\n`;\n\nconst PreviousLink = styled(Link)`\n  margin-right: auto;\n  order: 1;\n`;\n\nconst NextLink = styled(Link)`\n  margin-left: auto;\n  order: 2;\n`;\n\nconst PostLinks: React.FunctionComponent<PostLinksProps> = ({\n  prefix,\n  previous,\n  next,\n}) => {\n  const linkPrefix = prefix ? `${prefix}/` : '';\n\n  return (\n    <Wrapper>\n      <Box>\n        {previous && (\n          <PreviousLink to={`/${linkPrefix}${previous.fields.slug}/`}>\n            &#8592; Prev Post\n          </PreviousLink>\n        )}\n\n        {next && (\n          <NextLink to={`/${linkPrefix}${next.fields.slug}/`}>\n            Next Post &#8594;\n          </NextLink>\n        )}\n      </Box>\n    </Wrapper>\n  );\n};\n\nexport default PostLinks;\n","import Img, { GatsbyImageProps } from 'gatsby-image';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\nimport { Author } from '@templates/post';\nimport { Link } from 'gatsby';\n\ninterface AvatarProps {\n  small?: boolean;\n}\n\ninterface PostMetaProps {\n  date: string;\n  author: Author;\n}\n\nconst Wrapper = styled.div`\n  margin: 0 auto 2em;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Avatar = styled(Img).attrs({ small: false })<\n  AvatarProps & GatsbyImageProps\n>`\n  min-height: 4em;\n  max-height: 4em;\n  min-width: 4em;\n  max-width: 4em;\n  border-radius: 50%;\n  margin-right: 1em;\n`;\n\nconst Body = styled.div`\n  flex: 1;\n  color: darkslategrey;\n`;\n\nconst StyledLink = styled(Link)`\n  font-weight: 600;\n  font-size: 1.2em;\n  margin: 0;\n  color: ${({ theme }) => theme.colors.base};\n  text-decoration: none;\n  display: inline-block;\n  transition: 0.2s;\n\n  &:hover {\n    color: ${({ theme }) => theme.colors.highlight};\n  }\n`;\n\nconst Bio = styled.p`\n  margin: 0;\n`;\n\nconst PostDate: React.FunctionComponent<PostMetaProps> = ({\n  date,\n  author: { avatar, bio, id, name },\n}) => (\n  <Wrapper>\n    {avatar && <Avatar fluid={avatar.childImageSharp.fluid} />}\n\n    <Body>\n      <StyledLink to={`/blog/author/${id}`}>{name} </StyledLink>\n      <Bio>{bio}</Bio>\n      Published on {date}\n    </Body>\n  </Wrapper>\n);\n\nexport default PostDate;\n","import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\nimport { slugify } from '@utils';\n\ninterface PostTagsProps {\n  tags: string[];\n}\n\nconst List = styled.ul`\n  width: 100%;\n  margin: 0 auto 1em auto;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n`;\n\nconst Tag = styled.li`\n  display: inline-block;\n  margin: 0 0.25em 0.25em 0;\n\n  a {\n    float: left;\n    font-size: 0.8em;\n    transition: 0.2s;\n    background: ${({ theme }) => theme.colors.tertiary};\n    padding: 0.5em;\n    border-radius: 2px;\n    text-transform: capitalize;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.base};\n    border: 1px solid ${({ theme }) => theme.colors.secondary};\n\n    &:hover {\n      background: ${({ theme }) => theme.colors.secondary};\n      color: ${({ theme }) => theme.colors.base};\n    }\n  }\n`;\n\nconst PostTags: React.FunctionComponent<PostTagsProps> = ({ tags }) => (\n  <List>\n    {tags.map((tag) => (\n      <Tag key={tag}>\n        <Link to={`/blog/tag/${slugify(tag)}/`}>{tag}</Link>\n      </Tag>\n    ))}\n  </List>\n);\n\nexport default PostTags;\n","import * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport { useSiteMetadata } from '@hooks';\n\ninterface Meta {\n  content: string;\n  name: string;\n}\n\ninterface SeoProps {\n  title: string;\n  description?: string;\n  keywords?: string[];\n  lang?: string;\n  meta?: Meta[];\n  twitter?: string;\n}\n\nconst Seo: React.FunctionComponent<SeoProps> = ({\n  title,\n  description,\n  keywords = [],\n  lang = 'en',\n  meta = [],\n  twitter,\n}) => {\n  const siteMetadata = useSiteMetadata();\n  const metaDescription = description || siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{ lang }}\n      title={title}\n      titleTemplate={`%s - ${siteMetadata.title}`}\n      meta={[\n        {\n          content: metaDescription,\n          name: 'description',\n        },\n        {\n          content: title,\n          property: 'og:title',\n        },\n        {\n          content: metaDescription,\n          property: 'og:description',\n        },\n        {\n          content: 'website',\n          property: 'og:type',\n        },\n        {\n          content: 'summary',\n          name: 'twitter:card',\n        },\n        {\n          content: twitter || siteMetadata.twitter,\n          name: 'twitter:creator',\n        },\n        {\n          content: title,\n          name: 'twitter:title',\n        },\n        {\n          content: metaDescription,\n          name: 'twitter:description',\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                content: keywords.join(', '),\n                name: 'keywords',\n              }\n            : [],\n        )\n        .concat(meta)}\n    />\n  );\n};\n\nexport default Seo;\n","export { default as CardList } from './card-list';\nexport { default as Card } from './card';\nexport { default as Container } from './container';\nexport { default as Footer } from './footer';\nexport { default as Hero } from './hero';\nexport { default as PlaceholderImage } from './placeholder-image';\nexport { default as Layout } from './layout';\nexport { default as Menu } from './menu';\nexport { default as PageBody } from './page-body';\nexport { default as PageTitle } from './page-title';\nexport { default as Pagination } from './pagination';\nexport { default as PostLinks } from './post-links';\nexport { default as PostMeta } from './post-meta';\nexport { default as PostTags } from './post-tags';\nexport { default as Seo } from './seo';\n","import { graphql, useStaticQuery } from 'gatsby';\n\nexport interface SiteMetadata {\n  title: string;\n  description: string;\n  url: string;\n  twitter: string;\n}\n\ninterface Data {\n  site: {\n    siteMetadata: SiteMetadata;\n  };\n}\n\nconst siteMetadataQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n        description\n        url\n        twitter\n      }\n    }\n  }\n`;\n\n/** Custom hook that returns the site metadata. */\nexport const useSiteMetadata = () => {\n  const { site }: Data = useStaticQuery(siteMetadataQuery);\n\n  return site.siteMetadata;\n};\n","export * from './use-site-metadata';\n","module.exports = __webpack_public_path__ + \"static/pu-2223980feeb82acbd75b6488fa21df43.svg\";","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","interface TruncateOptions {\n  /**\n   * Text to display at the end of the truncated string. Its length is included\n   * in the total length of the returned string. Default is `...`.\n   */\n  ellipsis?: string;\n  /** Total length of the returned string. Default is `25`. */\n  maxLength?: number;\n}\n\n/** Cuts of a string to a specific length. */\nexport function truncate(\n  /** String to truncate. */\n  text: string,\n  /** Truncate options. */\n  { ellipsis = '...', maxLength = 25 }: TruncateOptions = {\n    ellipsis: '...',\n    maxLength: 25,\n  },\n) {\n  if (text.length > maxLength && text.length > ellipsis.length) {\n    return `${text\n      .substr(0, maxLength - ellipsis.length)\n      .trimRight()}${ellipsis}`;\n  }\n\n  return text;\n}\n\n/** Creates a URL-friendly version of a string. */\nexport function slugify(/** String to slugify. */ text: string) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-') // Replace spaces with -\n    .replace(/[^\\w-]+/g, '') // Remove all non-word chars\n    .replace(/--+/g, '-') // Replace multiple - with single -\n    .replace(/^-+/, '') // Trim - from start of text\n    .replace(/-+$/, ''); // Trim - from end of text\n}\n","import Typography from 'typography';\nimport funstonTheme from 'typography-theme-funston';\n\nconst typography = new Typography(funstonTheme);\n\nexport default typography;\n","export * from './string-utils';\nexport { default as typography } from './typography';\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/favicon-38146cfa7f94149cfeed1ec0420c44fa.ico\";"],"sourceRoot":""}