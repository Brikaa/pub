{"version":3,"sources":["webpack:///./src/pages/signup.tsx","webpack:///./src/components/index-page/cta-button.tsx","webpack:///./node_modules/gatsby-plugin-google-analytics/index.js","webpack:///./src/components/shared/form.tsx"],"names":["Wrapper","styled","section","withConfig","displayName","componentId","_ref","theme","colors","_ref2","boxes","padding","smallTop","_ref3","sizes","width","medium","_ref4","small","_ref5","SignUpPage","siteMetadata","useSiteMetadata","_useState","useState","setEmail","_useState2","setUsername","_useState3","setPassword1","_useState4","setPassword2","react__WEBPACK_IMPORTED_MODULE_2__","_components_shared__WEBPACK_IMPORTED_MODULE_4__","title","description","urlSlug","_components_shared_form__WEBPACK_IMPORTED_MODULE_7__","heading","htmlFor","name","type","placeholder","onChange","e","target","value","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","_components_index_page_cta_button__WEBPACK_IMPORTED_MODULE_5__","href","content","onClick","preventDefault","Button","OutboundLink","variant","css","baseinvert","highlight","highlightDark","CtaButton","children","_ref5$content","_ref5$variant","_ref5$target","anchorProps","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3__","Object","assign","social","slackInvite","rel","_interopRequireDefault","__webpack_require__","exports","__esModule","_extends2","_react","_propTypes","props","default","createElement","redirect","button","altKey","ctrlKey","metaKey","shiftKey","defaultPrevented","toLowerCase","window","ga","eventCategory","eventAction","eventLabel","transport","hitCallback","document","location","propTypes","string","func","d","__webpack_exports__","FormLabel","FormInput","LinkWrapper","ButtonWrapper","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styled_components__WEBPACK_IMPORTED_MODULE_1__","Heading","h2","FormElement","form","label","input","div","Form","a"],"mappings":"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","file":"component---src-pages-signup-tsx-b7f77664c86321f908a0.js","sourcesContent":["import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\nimport { Layout, Seo } from '@components/shared';\nimport CtaButton from '@components/index-page/cta-button';\nimport { useSiteMetadata } from '@hooks';\nimport Form, {\n  FormLabel,\n  FormInput,\n  LinkWrapper,\n  ButtonWrapper,\n} from '@components/shared/form';\nimport { useState } from 'react';\n\nconst Wrapper = styled.section`\n  background-color: ${({ theme }) => theme.colors.section};\n\n  padding: ${({ theme }) => theme.boxes.padding.section.smallTop};\n\n  @media screen and(max-width: ${({ theme }) => theme.sizes.width.medium}) {\n    flex-direction: column;\n  }\n\n  @media screen and(max-width: ${({ theme }) => theme.sizes.width.small}) {\n    padding: ${({ theme }) => theme.boxes.padding.section.small};\n  }\n`;\n\nconst SignUpPage: React.FC = () => {\n  const siteMetadata = useSiteMetadata();\n\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password1, setPassword1] = useState('');\n  const [password2, setPassword2] = useState('');\n\n  return (\n    <Layout>\n      <Seo\n        title={`Sign Up`}\n        description={`Sign Up page for ${siteMetadata.title} website`}\n        urlSlug=\"signup/\"\n      />\n      <Wrapper>\n        <Form heading={`Sign Up To Join ${siteMetadata.title}`}>\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"unicorn@projectunicorn.net\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <FormLabel htmlFor=\"username\">Username</FormLabel>\n          <FormInput\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"unicorn21\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n\n          <FormLabel htmlFor=\"password\">Password</FormLabel>\n          <FormInput\n            name=\"password1\"\n            type=\"password\"\n            placeholder=\"Your Password\"\n            onChange={(e) => setPassword1(e.target.value)}\n          />\n\n          <FormLabel htmlFor=\"password\">Confirm Password</FormLabel>\n          <FormInput\n            name=\"password2\"\n            type=\"password\"\n            placeholder=\"Confirm Your Password\"\n            onChange={(e) => setPassword2(e.target.value)}\n          />\n\n          <LinkWrapper>\n            <Link to=\"/signin\">Sign In</Link>\n          </LinkWrapper>\n\n          <ButtonWrapper>\n            <CtaButton\n              title=\"Sign Up\"\n              href=\"\"\n              type=\"input\"\n              content=\"Sign Up\"\n              onClick={(e) => e.preventDefault()}\n            />\n          </ButtonWrapper>\n        </Form>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default SignUpPage;\n","import * as React from 'react';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics';\n\nimport { useSiteMetadata } from '@hooks';\nimport styled, { css } from '@styled-components';\n\ntype CtaButtonVariant = 'default' | 'secondary';\n\ninterface OwnProps {\n  /** The text to display inside the button. */\n  content?: string;\n  /** Determines the style of the button. */\n  variant?: CtaButtonVariant;\n}\n\ntype CtaButtonProps = OwnProps & React.AnchorHTMLAttributes<HTMLAnchorElement>;\n\ninterface ButtonProps {\n  variant: CtaButtonVariant;\n}\n\nconst Button = styled(OutboundLink)<ButtonProps>`\n  border-radius: 0.3125em;\n  font-weight: 800;\n  padding: 0.9375em 2.8125em;\n  transition: 0.15s;\n\n  ${({ variant, theme }) => {\n    switch (variant) {\n      case 'secondary':\n        return css`\n          background: transparent;\n          border: 0.1875rem solid ${theme.colors.baseinvert};\n        `;\n      case 'default':\n      default:\n        return css`\n          background: ${theme.colors.highlight};\n          border: 0.0625rem solid ${theme.colors.highlight};\n        `;\n    }\n  }};\n\n  @media screen and (max-width: ${({ theme }) => theme.sizes.width.small}) {\n    display: block;\n    margin: 0 auto;\n    width: 90%;\n  }\n\n  @media (hover: hover) {\n    &:hover {\n      background: ${({ theme }) => theme.colors.highlightDark};\n      border-color: transparent;\n    }\n  }\n\n  && {\n    color: ${({ theme }) => theme.colors.baseinvert};\n  }\n`;\n\nconst CtaButton: React.FC<CtaButtonProps> = ({\n  children,\n  content = 'Join Slack',\n  variant = 'default',\n  target = '_blank',\n  ...anchorProps\n}) => {\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Button\n      href={`${siteMetadata.social.slackInvite}`}\n      title={`${siteMetadata.title} Slack invite link`}\n      variant={variant}\n      target={target}\n      rel=\"noopener\"\n      {...anchorProps}\n    >\n      {children || content}\n    </Button>\n  );\n};\n\nexport default CtaButton;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.OutboundLink = OutboundLink;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction OutboundLink(props) {\n  return _react.default.createElement(\"a\", (0, _extends2.default)({}, props, {\n    onClick: function onClick(e) {\n      if (typeof props.onClick === \"function\") {\n        props.onClick(e);\n      }\n\n      var redirect = true;\n\n      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey || e.defaultPrevented) {\n        redirect = false;\n      }\n\n      if (props.target && props.target.toLowerCase() !== \"_self\") {\n        redirect = false;\n      }\n\n      if (window.ga) {\n        window.ga(\"send\", \"event\", {\n          eventCategory: \"Outbound Link\",\n          eventAction: \"click\",\n          eventLabel: props.href,\n          transport: redirect ? \"beacon\" : \"\",\n          hitCallback: function hitCallback() {\n            if (redirect) {\n              document.location = props.href;\n            }\n          }\n        });\n      } else {\n        if (redirect) {\n          document.location = props.href;\n        }\n      }\n\n      return false;\n    }\n  }));\n}\n\nOutboundLink.propTypes = {\n  href: _propTypes.default.string,\n  target: _propTypes.default.string,\n  onClick: _propTypes.default.func\n};","import React from 'react';\nimport styled from '@styled-components';\n\nconst Heading = styled.h2``;\n\nconst FormElement = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormLabel = styled.label`\n  font-weight: 800;\n  padding: 0.825em 0;\n`;\n\nconst FormInput = styled.input`\n  max-width: 400px;\n  padding: 0.425em;\n  border-radius: 0;\n  box-shadow: none;\n  border: 1px solid gray;\n\n  :focus {\n    border-color: black;\n  }\n`;\n\nconst LinkWrapper = styled.div`\n  margin: 0.625em 0.125em;\n  display: flex;\n  flex-direction: column;\n  max-width: fit-content;\n`;\n\nconst ButtonWrapper = styled.div`\n  padding: 1.825em 0.125em;\n`;\n\ninterface Props {\n  heading: string;\n}\n\nconst Form: React.FC<Props> = ({ heading, children }) => {\n  return (\n    <FormElement>\n      <Heading>{heading}</Heading>\n      {children}\n    </FormElement>\n  );\n};\n\nexport { FormLabel, FormInput, LinkWrapper, ButtonWrapper };\nexport default Form;\n"],"sourceRoot":""}