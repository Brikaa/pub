{"version":3,"sources":["webpack:///./src/pages/signin.tsx","webpack:///./src/components/index-page/cta-button.tsx","webpack:///./node_modules/gatsby-plugin-google-analytics/index.js","webpack:///./src/components/shared/form.tsx"],"names":["Wrapper","styled","section","withConfig","displayName","componentId","_ref","theme","colors","_ref2","boxes","padding","smallTop","_ref3","sizes","width","medium","_ref4","small","_ref5","SignInPage","siteMetadata","useSiteMetadata","_useState","useState","setEmail","_useState2","setPassword","react__WEBPACK_IMPORTED_MODULE_2__","_components_shared__WEBPACK_IMPORTED_MODULE_4__","title","description","urlSlug","_components_shared_form__WEBPACK_IMPORTED_MODULE_7__","heading","htmlFor","name","type","placeholder","onChange","e","target","value","gatsby__WEBPACK_IMPORTED_MODULE_1__","to","_components_index_page_cta_button__WEBPACK_IMPORTED_MODULE_5__","href","content","Button","OutboundLink","variant","css","baseinvert","highlight","highlightDark","CtaButton","children","_ref5$content","_ref5$variant","_ref5$target","anchorProps","_babel_runtime_helpers_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1___default","react__WEBPACK_IMPORTED_MODULE_3__","Object","assign","social","slackInvite","rel","_interopRequireDefault","__webpack_require__","exports","__esModule","_extends2","_react","_propTypes","props","default","createElement","onClick","redirect","button","altKey","ctrlKey","metaKey","shiftKey","defaultPrevented","toLowerCase","window","ga","eventCategory","eventAction","eventLabel","transport","hitCallback","document","location","propTypes","string","func","d","__webpack_exports__","FormLabel","FormInput","LinkWrapper","ButtonWrapper","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_styled_components__WEBPACK_IMPORTED_MODULE_1__","Heading","h2","FormElement","form","label","input","div","Form","a"],"mappings":"0KAeMA,EAAUC,IAAOC,QAAVC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,4IACS,SAAAK,GAAA,OAAAA,EAAGC,MAAkBC,OAAON,SAErC,SAAAO,GAAA,OAAAA,EAAGF,MAAkBG,MAAMC,QAAQT,QAAQU,UAEvB,SAAAC,GAAA,OAAAA,EAAGN,MAAkBO,MAAMC,MAAMC,QAIjC,SAAAC,GAAA,OAAAA,EAAGV,MAAkBO,MAAMC,MAAMG,OACnD,SAAAC,GAAA,OAAAA,EAAGZ,MAAkBG,MAAMC,QAAQT,QAAQgB,QAoD3CE,UAhDc,WAC3B,IAAMC,EAAeC,cADYC,EAGPC,mBAAS,IAArBC,GAHmBF,EAAA,GAAAA,EAAA,IAAAG,EAIDF,mBAAS,IAAxBG,GAJgBD,EAAA,GAAAA,EAAA,IAMjC,OACEE,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CACEC,MAAK,UACLC,YAAW,oBAAsBV,EAAaS,MAAnC,WACXE,QAAQ,YAEVJ,EAAA,cAAC5B,EAAD,KACE4B,EAAA,cAACK,EAAA,EAAD,CAAMC,QAAO,cAAgBb,EAAaS,OACxCF,EAAA,cAACK,EAAA,EAAD,CAAWE,QAAQ,SAAnB,SACAP,EAAA,cAACK,EAAA,EAAD,CACEG,KAAK,QACLC,KAAK,QACLC,YAAY,6BACZC,SAAU,SAACC,GAAD,OAAOf,EAASe,EAAEC,OAAOC,UAGrCd,EAAA,cAACK,EAAA,EAAD,CAAWE,QAAQ,YAAnB,oBACAP,EAAA,cAACK,EAAA,EAAD,CACEG,KAAK,WACLC,KAAK,WACLC,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAOb,EAAYa,EAAEC,OAAOC,UAGxCd,EAAA,cAACK,EAAA,EAAD,KACEL,EAAA,cAACe,EAAA,EAAD,CAAMC,GAAG,oBAAT,qBAGFhB,EAAA,cAACK,EAAA,EAAD,KACEL,EAAA,cAACe,EAAA,EAAD,CAAMC,GAAG,YAAT,yBAGFhB,EAAA,cAACK,EAAA,EAAD,KACEL,EAAA,cAACiB,EAAA,EAAD,CAAWf,MAAM,UAAUgB,KAAK,GAAGT,KAAK,QAAQU,QAAQ,yHChD9DC,EAAS/C,YAAOgD,gBAAV9C,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,yPAMR,SAAAK,GAAwB,IAArB4C,EAAqB5C,EAArB4C,QAAS3C,EAAYD,EAAZC,MACZ,OAAQ2C,GACN,IAAK,YACH,OAAOC,YAAP,uDAE4B5C,EAAMC,OAAO4C,YAE3C,IAAK,UACL,QACE,OAAOD,YAAP,+CACgB5C,EAAMC,OAAO6C,UACD9C,EAAMC,OAAO6C,aAKf,SAAA5C,GAAA,OAAAA,EAAGF,MAAkBO,MAAMC,MAAMG,OAQ/C,SAAAL,GAAA,OAAAA,EAAGN,MAAkBC,OAAO8C,eAMnC,SAAArC,GAAA,OAAAA,EAAGV,MAAkBC,OAAO4C,aA2B1BG,IAvB6B,SAAApC,GAMtC,IALJqC,EAKIrC,EALJqC,SAKIC,EAAAtC,EAJJ4B,eAII,IAAAU,EAJM,aAINA,EAAAC,EAAAvC,EAHJ+B,eAGI,IAAAQ,EAHM,UAGNA,EAAAC,EAAAxC,EAFJsB,cAEI,IAAAkB,EAFK,SAELA,EADDC,EACCC,IAAA1C,EAAA,2CACEE,EAAeC,cAErB,OACEwC,EAAA,cAACd,EAADe,OAAAC,OAAA,CACElB,KAAI,GAAKzB,EAAa4C,OAAOC,YAC7BpC,MAAUT,EAAaS,MAAlB,qBACLoB,QAASA,EACTT,OAAQA,EACR0B,IAAI,YACAP,GAEHJ,GAAYT,sCC7EnB,IAAAqB,EAA6BC,EAAQ,IAErCC,EAAAC,YAAA,EACAD,EAAArB,eAEA,IAAAuB,EAAAJ,EAAuCC,EAAQ,KAE/CI,EAAAL,EAAoCC,EAAQ,IAE5CK,EAAAN,EAAwCC,EAAQ,IAEhD,SAAApB,EAAA0B,GACA,OAAAF,EAAAG,QAAAC,cAAA,OAAAL,EAAAI,SAAA,GAAoED,EAAA,CACpEG,QAAA,SAAAtC,GACA,mBAAAmC,EAAAG,SACAH,EAAAG,QAAAtC,GAGA,IAAAuC,GAAA,EA4BA,OA1BA,IAAAvC,EAAAwC,QAAAxC,EAAAyC,QAAAzC,EAAA0C,SAAA1C,EAAA2C,SAAA3C,EAAA4C,UAAA5C,EAAA6C,oBACAN,GAAA,GAGAJ,EAAAlC,QAAA,UAAAkC,EAAAlC,OAAA6C,gBACAP,GAAA,GAGAQ,OAAAC,GACAD,OAAAC,GAAA,gBACAC,cAAA,gBACAC,YAAA,QACAC,WAAAhB,EAAA7B,KACA8C,UAAAb,EAAA,YACAc,YAAA,WACAd,IACAe,SAAAC,SAAApB,EAAA7B,SAKAiC,IACAe,SAAAC,SAAApB,EAAA7B,OAIA,MAKAG,EAAA+C,UAAA,CACAlD,KAAA4B,EAAAE,QAAAqB,OACAxD,OAAAiC,EAAAE,QAAAqB,OACAnB,QAAAJ,EAAAE,QAAAsB,wCCxDA7B,EAAA8B,EAAAC,EAAA,sBAAAC,IAAAhC,EAAA8B,EAAAC,EAAA,sBAAAE,IAAAjC,EAAA8B,EAAAC,EAAA,sBAAAG,IAAAlC,EAAA8B,EAAAC,EAAA,sBAAAI,IAAA,IAAAC,EAAApC,EAAA,GAAAqC,EAAArC,EAAAsC,EAAAF,GAAAG,EAAAvC,EAAA,KAGMwC,EAAU5G,IAAO6G,GAAV3G,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGJ,CAAH,MAEP8G,EAAc9G,IAAO+G,KAAV7G,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,yCAKXoG,EAAYpG,IAAOgH,MAAV9G,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,wCAKTqG,EAAYrG,IAAOiH,MAAV/G,WAAA,CAAAC,YAAA,kBAAAC,YAAA,YAAGJ,CAAH,uHAYTsG,EAActG,IAAOkH,IAAVhH,WAAA,CAAAC,YAAA,oBAAAC,YAAA,YAAGJ,CAAH,sFAOXuG,EAAgBvG,IAAOkH,IAAVhH,WAAA,CAAAC,YAAA,sBAAAC,YAAA,YAAGJ,CAAH,8BAkBJmH,IAVe,SAAA9G,GAA2B,IAAxB4B,EAAwB5B,EAAxB4B,QAASsB,EAAelD,EAAfkD,SACxC,OACEkD,EAAAW,EAAAxC,cAACkC,EAAD,KACEL,EAAAW,EAAAxC,cAACgC,EAAD,KAAU3E,GACTsB","file":"component---src-pages-signin-tsx-5cf44f2cba2db7eefc27.js","sourcesContent":["import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\nimport { Layout, Seo } from '@components/shared';\nimport CtaButton from '@components/index-page/cta-button';\nimport { useSiteMetadata } from '@hooks';\nimport Form, {\n  FormLabel,\n  FormInput,\n  LinkWrapper,\n  ButtonWrapper,\n} from '@components/shared/form';\nimport { useState } from 'react';\n\nconst Wrapper = styled.section`\n  background-color: ${({ theme }) => theme.colors.section};\n\n  padding: ${({ theme }) => theme.boxes.padding.section.smallTop};\n\n  @media screen and(max-width: ${({ theme }) => theme.sizes.width.medium}) {\n    flex-direction: column;\n  }\n\n  @media screen and(max-width: ${({ theme }) => theme.sizes.width.small}) {\n    padding: ${({ theme }) => theme.boxes.padding.section.small};\n  }\n`;\n\nconst SignInPage: React.FC = () => {\n  const siteMetadata = useSiteMetadata();\n\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  return (\n    <Layout>\n      <Seo\n        title={`Sign In`}\n        description={`Sign In page for ${siteMetadata.title} website`}\n        urlSlug=\"signin/\"\n      />\n      <Wrapper>\n        <Form heading={`Sign In To ${siteMetadata.title}`}>\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"unicorn@projectunicorn.net\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <FormLabel htmlFor=\"password\">Confirm Password</FormLabel>\n          <FormInput\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"Your Password\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n\n          <LinkWrapper>\n            <Link to=\"/forgotpassword/\">Forgot password?</Link>\n          </LinkWrapper>\n\n          <LinkWrapper>\n            <Link to=\"/signup/\">New member? Sign Up!</Link>\n          </LinkWrapper>\n\n          <ButtonWrapper>\n            <CtaButton title=\"Sign In\" href=\"\" type=\"input\" content=\"Sign In\" />\n          </ButtonWrapper>\n        </Form>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default SignInPage;\n","import * as React from 'react';\nimport { OutboundLink } from 'gatsby-plugin-google-analytics';\n\nimport { useSiteMetadata } from '@hooks';\nimport styled, { css } from '@styled-components';\n\ntype CtaButtonVariant = 'default' | 'secondary';\n\ninterface OwnProps {\n  /** The text to display inside the button. */\n  content?: string;\n  /** Determines the style of the button. */\n  variant?: CtaButtonVariant;\n}\n\ntype CtaButtonProps = OwnProps & React.AnchorHTMLAttributes<HTMLAnchorElement>;\n\ninterface ButtonProps {\n  variant: CtaButtonVariant;\n}\n\nconst Button = styled(OutboundLink)<ButtonProps>`\n  border-radius: 0.3125em;\n  font-weight: 800;\n  padding: 0.9375em 2.8125em;\n  transition: 0.15s;\n\n  ${({ variant, theme }) => {\n    switch (variant) {\n      case 'secondary':\n        return css`\n          background: transparent;\n          border: 0.1875rem solid ${theme.colors.baseinvert};\n        `;\n      case 'default':\n      default:\n        return css`\n          background: ${theme.colors.highlight};\n          border: 0.0625rem solid ${theme.colors.highlight};\n        `;\n    }\n  }};\n\n  @media screen and (max-width: ${({ theme }) => theme.sizes.width.small}) {\n    display: block;\n    margin: 0 auto;\n    width: 90%;\n  }\n\n  @media (hover: hover) {\n    &:hover {\n      background: ${({ theme }) => theme.colors.highlightDark};\n      border-color: transparent;\n    }\n  }\n\n  && {\n    color: ${({ theme }) => theme.colors.baseinvert};\n  }\n`;\n\nconst CtaButton: React.FC<CtaButtonProps> = ({\n  children,\n  content = 'Join Slack',\n  variant = 'default',\n  target = '_blank',\n  ...anchorProps\n}) => {\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Button\n      href={`${siteMetadata.social.slackInvite}`}\n      title={`${siteMetadata.title} Slack invite link`}\n      variant={variant}\n      target={target}\n      rel=\"noopener\"\n      {...anchorProps}\n    >\n      {children || content}\n    </Button>\n  );\n};\n\nexport default CtaButton;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.OutboundLink = OutboundLink;\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction OutboundLink(props) {\n  return _react.default.createElement(\"a\", (0, _extends2.default)({}, props, {\n    onClick: function onClick(e) {\n      if (typeof props.onClick === \"function\") {\n        props.onClick(e);\n      }\n\n      var redirect = true;\n\n      if (e.button !== 0 || e.altKey || e.ctrlKey || e.metaKey || e.shiftKey || e.defaultPrevented) {\n        redirect = false;\n      }\n\n      if (props.target && props.target.toLowerCase() !== \"_self\") {\n        redirect = false;\n      }\n\n      if (window.ga) {\n        window.ga(\"send\", \"event\", {\n          eventCategory: \"Outbound Link\",\n          eventAction: \"click\",\n          eventLabel: props.href,\n          transport: redirect ? \"beacon\" : \"\",\n          hitCallback: function hitCallback() {\n            if (redirect) {\n              document.location = props.href;\n            }\n          }\n        });\n      } else {\n        if (redirect) {\n          document.location = props.href;\n        }\n      }\n\n      return false;\n    }\n  }));\n}\n\nOutboundLink.propTypes = {\n  href: _propTypes.default.string,\n  target: _propTypes.default.string,\n  onClick: _propTypes.default.func\n};","import React from 'react';\nimport styled from '@styled-components';\n\nconst Heading = styled.h2``;\n\nconst FormElement = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormLabel = styled.label`\n  font-weight: 800;\n  padding: 0.825em 0;\n`;\n\nconst FormInput = styled.input`\n  max-width: 400px;\n  padding: 0.425em;\n  border-radius: 0;\n  box-shadow: none;\n  border: 1px solid gray;\n\n  :focus {\n    border-color: black;\n  }\n`;\n\nconst LinkWrapper = styled.div`\n  margin: 0.625em 0.125em;\n  display: flex;\n  flex-direction: column;\n  max-width: fit-content;\n`;\n\nconst ButtonWrapper = styled.div`\n  padding: 1.825em 0.125em;\n`;\n\ninterface Props {\n  heading: string;\n}\n\nconst Form: React.FC<Props> = ({ heading, children }) => {\n  return (\n    <FormElement>\n      <Heading>{heading}</Heading>\n      {children}\n    </FormElement>\n  );\n};\n\nexport { FormLabel, FormInput, LinkWrapper, ButtonWrapper };\nexport default Form;\n"],"sourceRoot":""}