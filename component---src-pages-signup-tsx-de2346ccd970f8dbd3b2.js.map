{"version":3,"sources":["webpack:///./src/pages/signup.tsx","webpack:///./src/components/shared/form.tsx"],"names":["Wrapper","styled","section","theme","colors","boxes","padding","smallTop","sizes","width","medium","small","SignUpPage","siteMetadata","useSiteMetadata","useState","setEmail","setUsername","setPassword1","setPassword2","title","description","urlSlug","heading","htmlFor","name","type","placeholder","onChange","e","target","value","to","href","content","onClick","preventDefault","Heading","h2","FormElement","form","FormLabel","label","FormInput","input","LinkWrapper","div","ButtonWrapper","Form","children"],"mappings":"2cAeA,IAAMA,EAAUC,IAAOC,QAAV,KACS,qBAAGC,MAAkBC,OAAOF,WAErC,qBAAGC,MAAkBE,MAAMC,QAAQJ,QAAQK,YAEvB,qBAAGJ,MAAkBK,MAAMC,MAAMC,UAIjC,qBAAGP,MAAkBK,MAAMC,MAAME,SACnD,qBAAGR,MAAkBE,MAAMC,QAAQJ,QAAQS,SAwE3CC,UApEc,WAC3B,IAAMC,EAAeC,cADY,EAGPC,mBAAS,IAArBC,GAHmB,aAIDD,mBAAS,IAAxBE,GAJgB,aAKCF,mBAAS,IAAzBG,GALe,aAMCH,mBAAS,IAAzBI,GANe,WAQjC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEC,MAAK,UACLC,YAAW,oBAAsBR,EAAaO,MAAnC,WACXE,QAAQ,YAEV,gBAACtB,EAAD,KACE,gBAAC,IAAD,CAAMuB,QAAO,mBAAqBV,EAAaO,OAC7C,gBAAC,IAAD,CAAWI,QAAQ,SAAnB,SACA,gBAAC,IAAD,CACEC,KAAK,QACLC,KAAK,QACLC,YAAY,6BACZC,SAAU,SAACC,GAAD,OAAOb,EAASa,EAAEC,OAAOC,UAGrC,gBAAC,IAAD,CAAWP,QAAQ,YAAnB,YACA,gBAAC,IAAD,CACEC,KAAK,WACLC,KAAK,OACLC,YAAY,YACZC,SAAU,SAACC,GAAD,OAAOZ,EAAYY,EAAEC,OAAOC,UAGxC,gBAAC,IAAD,CAAWP,QAAQ,YAAnB,YACA,gBAAC,IAAD,CACEC,KAAK,YACLC,KAAK,WACLC,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAOX,EAAaW,EAAEC,OAAOC,UAGzC,gBAAC,IAAD,CAAWP,QAAQ,YAAnB,oBACA,gBAAC,IAAD,CACEC,KAAK,YACLC,KAAK,WACLC,YAAY,wBACZC,SAAU,SAACC,GAAD,OAAOV,EAAaU,EAAEC,OAAOC,UAGzC,gBAAC,IAAD,KACE,gBAAC,OAAD,CAAMC,GAAG,WAAT,YAGF,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEZ,MAAM,UACNa,KAAK,GACLP,KAAK,QACLQ,QAAQ,UACRC,QAAS,SAACN,GAAD,OAAOA,EAAEO,0B,y9BCrFhC,IAAMC,EAAUpC,IAAOqC,GAAV,KAEPC,EAActC,IAAOuC,KAAV,KAKXC,EAAYxC,IAAOyC,MAAV,KAKTC,EAAY1C,IAAO2C,MAAV,KAYTC,EAAc5C,IAAO6C,IAAV,KAOXC,EAAgB9C,IAAO6C,IAAV,KAkBJE,IAVe,SAAC,GAA0B,IAAxBzB,EAAwB,EAAxBA,QAAS0B,EAAe,EAAfA,SACxC,OACE,kBAACV,EAAD,KACE,kBAACF,EAAD,KAAUd,GACT0B","file":"component---src-pages-signup-tsx-de2346ccd970f8dbd3b2.js","sourcesContent":["import { Link } from 'gatsby';\nimport * as React from 'react';\n\nimport styled from '@styled-components';\nimport { Layout, Seo } from '@components/shared';\nimport CtaButton from '@components/index-page/cta-button';\nimport { useSiteMetadata } from '@hooks';\nimport Form, {\n  FormLabel,\n  FormInput,\n  LinkWrapper,\n  ButtonWrapper,\n} from '@components/shared/form';\nimport { useState } from 'react';\n\nconst Wrapper = styled.section`\n  background-color: ${({ theme }) => theme.colors.section};\n\n  padding: ${({ theme }) => theme.boxes.padding.section.smallTop};\n\n  @media screen and(max-width: ${({ theme }) => theme.sizes.width.medium}) {\n    flex-direction: column;\n  }\n\n  @media screen and(max-width: ${({ theme }) => theme.sizes.width.small}) {\n    padding: ${({ theme }) => theme.boxes.padding.section.small};\n  }\n`;\n\nconst SignUpPage: React.FC = () => {\n  const siteMetadata = useSiteMetadata();\n\n  const [email, setEmail] = useState('');\n  const [username, setUsername] = useState('');\n  const [password1, setPassword1] = useState('');\n  const [password2, setPassword2] = useState('');\n\n  return (\n    <Layout>\n      <Seo\n        title={`Sign Up`}\n        description={`Sign Up page for ${siteMetadata.title} website`}\n        urlSlug=\"signup/\"\n      />\n      <Wrapper>\n        <Form heading={`Sign Up To Join ${siteMetadata.title}`}>\n          <FormLabel htmlFor=\"email\">Email</FormLabel>\n          <FormInput\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"unicorn@projectunicorn.net\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n\n          <FormLabel htmlFor=\"username\">Username</FormLabel>\n          <FormInput\n            name=\"username\"\n            type=\"text\"\n            placeholder=\"unicorn21\"\n            onChange={(e) => setUsername(e.target.value)}\n          />\n\n          <FormLabel htmlFor=\"password\">Password</FormLabel>\n          <FormInput\n            name=\"password1\"\n            type=\"password\"\n            placeholder=\"Your Password\"\n            onChange={(e) => setPassword1(e.target.value)}\n          />\n\n          <FormLabel htmlFor=\"password\">Confirm Password</FormLabel>\n          <FormInput\n            name=\"password2\"\n            type=\"password\"\n            placeholder=\"Confirm Your Password\"\n            onChange={(e) => setPassword2(e.target.value)}\n          />\n\n          <LinkWrapper>\n            <Link to=\"/signin\">Sign In</Link>\n          </LinkWrapper>\n\n          <ButtonWrapper>\n            <CtaButton\n              title=\"Sign Up\"\n              href=\"\"\n              type=\"input\"\n              content=\"Sign Up\"\n              onClick={(e) => e.preventDefault()}\n            />\n          </ButtonWrapper>\n        </Form>\n      </Wrapper>\n    </Layout>\n  );\n};\n\nexport default SignUpPage;\n","import React from 'react';\nimport styled from '@styled-components';\n\nconst Heading = styled.h2``;\n\nconst FormElement = styled.form`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormLabel = styled.label`\n  font-weight: 800;\n  padding: 0.825em 0;\n`;\n\nconst FormInput = styled.input`\n  max-width: 400px;\n  padding: 0.425em;\n  border-radius: 0;\n  box-shadow: none;\n  border: 1px solid gray;\n\n  :focus {\n    border-color: black;\n  }\n`;\n\nconst LinkWrapper = styled.div`\n  margin: 0.625em 0.125em;\n  display: flex;\n  flex-direction: column;\n  max-width: fit-content;\n`;\n\nconst ButtonWrapper = styled.div`\n  padding: 1.825em 0.125em;\n`;\n\ninterface Props {\n  heading: string;\n}\n\nconst Form: React.FC<Props> = ({ heading, children }) => {\n  return (\n    <FormElement>\n      <Heading>{heading}</Heading>\n      {children}\n    </FormElement>\n  );\n};\n\nexport { FormLabel, FormInput, LinkWrapper, ButtonWrapper };\nexport default Form;\n"],"sourceRoot":""}