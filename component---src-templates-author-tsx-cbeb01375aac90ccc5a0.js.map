{"version":3,"sources":["webpack:///./src/templates/author.tsx"],"names":["authorQuery","AuthorTemplate","_ref","data","pageContext","siteMetadata","useSiteMetadata","author","authorYaml","posts","allMarkdownRemark","edges","slug","currentPage","isFirstPage","authorName","name","react__WEBPACK_IMPORTED_MODULE_1__","_components__WEBPACK_IMPORTED_MODULE_3__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","a","title","property","content","data-react-helmet","url","map","_ref2","node","key","fields","excerpt","fluid","frontmatter","image","childImageSharp","file","publishDate","date","prefix","id","context"],"mappings":"iMAqEaA,EAAW,aAmITC,UA/EuC,SAAAC,GAGhD,IAFJC,EAEID,EAFJC,KACAC,EACIF,EADJE,YAEMC,EAAeC,cACfC,EAASJ,EAAKK,WACdC,EAAQN,EAAKO,kBAAkBC,MAC7BC,EAAsBR,EAAtBQ,KAAMC,EAAgBT,EAAhBS,YACRC,EAA8B,IAAhBD,EACdE,EAAaR,EAAOS,KAE1B,OACEC,EAAA,cAACC,EAAA,EAAD,KACGJ,EACCG,EAAA,cAACE,EAAAC,EAAD,KACEH,EAAA,uCAAoBF,EAApB,OAAqCV,EAAagB,OAElDJ,EAAA,sBACEK,SAAS,WACTC,QAAO,YAAcR,EAAd,OAA+BV,EAAagB,MACnDL,KAAK,QACLQ,oBAAkB,SAGpBP,EAAA,sBACEK,SAAS,SACTC,QAAYlB,EAAaoB,IAAlB,gBAAqCb,EAArC,IACPY,oBAAkB,UAItBP,EAAA,cAACE,EAAAC,EAAD,KACEH,EAAA,uCAAoBF,EAApB,YAA0CF,EAA1C,MACER,EAAagB,OAGfJ,EAAA,sBACEK,SAAS,WACTC,QAAO,YAAcR,EAAd,YAAoCF,EAApC,MACLR,EAAagB,MAEfL,KAAK,QACLQ,oBAAkB,SAGpBP,EAAA,sBACEK,SAAS,SACTC,QAAYlB,EAAaoB,IAAlB,gBAAqCb,EAArC,IACPY,oBAAkB,UAKxBP,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAYX,OAAQA,IAEpBU,EAAA,cAACC,EAAA,EAAD,KACGT,EAAMiB,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACTX,EAAA,cAACC,EAAA,EAAD,CACEW,IAAKD,EAAKE,OAAOlB,KACjBA,KAAMgB,EAAKE,OAAOlB,KAClBmB,QAASH,EAAKG,QACdC,MACEJ,EAAKK,YAAYC,MACbN,EAAKK,YAAYC,MAAMC,gBAAgBH,MACvC7B,EAAKiC,KAAKD,gBAAgBH,MAEhCK,YAAaT,EAAKK,YAAYK,KAC9BjB,MAAOO,EAAKK,YAAYZ,OAASO,EAAKE,OAAOlB,WAMrDK,EAAA,cAACC,EAAA,EAAD,CAAYqB,OAAM,eAAiBhC,EAAOiC,GAAMC,QAASrC","file":"component---src-templates-author-tsx-cbeb01375aac90ccc5a0.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport {\n  AuthorMeta,\n  Card,\n  CardList,\n  Container,\n  Layout,\n  Pagination,\n} from '@components';\nimport { useSiteMetadata } from '@hooks';\n\nexport interface Author {\n  id: string;\n  name: string;\n  github: string;\n  twitter?: string;\n  bio?: string;\n  avatar?: {\n    childImageSharp: {\n      fluid: FluidObject;\n    };\n  };\n}\n\ninterface PostNode {\n  node: {\n    excerpt: string;\n    frontmatter: {\n      date: string;\n      title: string;\n      image: {\n        childImageSharp: {\n          fluid: FluidObject;\n        };\n      };\n    };\n    fields: {\n      slug: string;\n    };\n  };\n}\n\ninterface AuthorTemplateProps {\n  data: {\n    file: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    totalCount: number;\n    allMarkdownRemark: {\n      edges: PostNode[];\n    };\n    authorYaml: Author;\n  };\n  pageContext: {\n    totalPosts: number;\n    slug: string;\n    limit?: number;\n    skip?: number;\n    numPages?: number;\n    currentPage?: number;\n  };\n}\n\nexport const authorQuery = graphql`\n  query($authorId: String, $skip: Int!, $limit: Int!) {\n    file(relativePath: { eq: \"default-post-image.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1800) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    authorYaml(id: { eq: $authorId }) {\n      id\n      name\n      bio\n      github\n      avatar {\n        childImageSharp {\n          fluid(maxWidth: 68) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { fields: { author: { eq: $authorId } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 80)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst AuthorTemplate: React.FC<AuthorTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const siteMetadata = useSiteMetadata();\n  const author = data.authorYaml;\n  const posts = data.allMarkdownRemark.edges;\n  const { slug, currentPage } = pageContext;\n  const isFirstPage = currentPage === 1;\n  const authorName = author.name;\n\n  return (\n    <Layout>\n      {isFirstPage ? (\n        <Helmet>\n          <title>{`Author: \"${authorName}\" - ${siteMetadata.title}`}</title>\n\n          <meta\n            property=\"og:title\"\n            content={`Author: \"${authorName}\" - ${siteMetadata.title}`}\n            name=\"title\"\n            data-react-helmet=\"true\"\n          />\n\n          <meta\n            property=\"og:url\"\n            content={`${siteMetadata.url}/blog/author/${slug}/`}\n            data-react-helmet=\"true\"\n          />\n        </Helmet>\n      ) : (\n        <Helmet>\n          <title>{`Author: \"${authorName}\" - Page ${currentPage} - ${\n            siteMetadata.title\n          }`}</title>\n\n          <meta\n            property=\"og:title\"\n            content={`Author: \"${authorName}\" - Page ${currentPage} - ${\n              siteMetadata.title\n            }`}\n            name=\"title\"\n            data-react-helmet=\"true\"\n          />\n\n          <meta\n            property=\"og:url\"\n            content={`${siteMetadata.url}/blog/author/${slug}/`}\n            data-react-helmet=\"true\"\n          />\n        </Helmet>\n      )}\n\n      <Container>\n        <AuthorMeta author={author} />\n\n        <CardList>\n          {posts.map(({ node }) => (\n            <Card\n              key={node.fields.slug}\n              slug={node.fields.slug}\n              excerpt={node.excerpt}\n              fluid={\n                node.frontmatter.image\n                  ? node.frontmatter.image.childImageSharp.fluid\n                  : data.file.childImageSharp.fluid\n              }\n              publishDate={node.frontmatter.date}\n              title={node.frontmatter.title || node.fields.slug}\n            />\n          ))}\n        </CardList>\n      </Container>\n\n      <Pagination prefix={`blog/author/${author.id}`} context={pageContext} />\n    </Layout>\n  );\n};\n\nexport default AuthorTemplate;\n"],"sourceRoot":""}