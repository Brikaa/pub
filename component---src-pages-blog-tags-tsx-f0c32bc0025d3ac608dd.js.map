{"version":3,"sources":["webpack:///./src/pages/blog/tags.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","gatsby__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1__","_components_shared__WEBPACK_IMPORTED_MODULE_2__","_styled_components__WEBPACK_IMPORTED_MODULE_3__","_utils__WEBPACK_IMPORTED_MODULE_4__","List","styled","ul","withConfig","displayName","componentId","_ref","theme","sizes","maxWidthCentered","Tag","li","_ref2","colors","tertiary","_ref3","secondary","_ref4","base","_ref5","_ref6","_ref7","TagsPage","_ref8","group","data","allMarkdownRemark","title","map","_ref9","fieldValue","totalCount","key","to","slugify"],"mappings":"0FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,KAAAQ,EAAAR,EAAA,KAAAS,EAAAT,EAAA,KAoBaI,EAAS,aAWhBM,EAAOC,IAAOC,GAAVC,WAAA,CAAAC,YAAA,aAAAC,YAAA,gBAAGJ,CAAH,qDAGK,SAAAK,GAAA,OAAAA,EAAGC,MAAkBC,MAAMC,mBAGpCC,EAAMT,IAAOU,GAAVR,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAGJ,CAAH,uSAQS,SAAAW,GAAA,OAAAA,EAAGL,MAAkBM,OAAOC,UAE1B,SAAAC,GAAA,OAAAA,EAAGR,MAAkBM,OAAOG,WAInC,SAAAC,GAAA,OAAAA,EAAGV,MAAkBM,OAAOK,MACjB,SAAAC,GAAA,OAAAA,EAAGZ,MAAkBM,OAAOG,WAI9B,SAAAI,GAAA,OAAAA,EAAGb,MAAkBM,OAAOG,WACjC,SAAAK,GAAA,OAAAA,EAAGd,MAAkBM,OAAOK,OAkC9BI,UA3B2B,SAAAC,GAAA,IAEjBC,EAFiBD,EACxCE,KACEC,kBAAqBF,MAFiB,OAKxC5B,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAK8B,MAAM,SAEX/B,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,aAEAD,EAAA,cAACI,EAAD,KACGwB,EAAMI,IAAI,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,WAAYC,EAAfF,EAAeE,WAAf,OACTnC,EAAA,cAACc,EAAD,CAAKsB,IAAKF,GACRlC,EAAA,cAACD,EAAA,EAAD,CACEsC,GAAE,aAAeC,YAAQJ,GAAvB,IACFH,MAAK,qBAAuBG,GAE3BA,EAJH,KAIiBC,EAJjB","file":"component---src-pages-blog-tags-tsx-f0c32bc0025d3ac608dd.js","sourcesContent":["import { graphql, Link } from 'gatsby';\nimport * as React from 'react';\n\nimport { Container, Layout, PageTitle, Seo } from '@components/shared';\nimport styled from '@styled-components';\nimport { slugify } from '@utils';\n\ninterface Group {\n  fieldValue: string;\n  totalCount: number;\n}\n\ninterface TagsPageProps {\n  data: {\n    allMarkdownRemark: {\n      group: Group[];\n    };\n  };\n}\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(limit: 2000) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n\nconst List = styled.ul`\n  width: 100%;\n  margin: 0 auto 1em auto;\n  max-width: ${({ theme }) => theme.sizes.maxWidthCentered};\n`;\n\nconst Tag = styled.li`\n  display: inline-block;\n  margin: 0 0.25em 0.25em 0;\n\n  a {\n    float: left;\n    font-size: 0.8em;\n    transition: 0.2s;\n    background: ${({ theme }) => theme.colors.tertiary};\n    padding: 0.5em;\n    border-color: ${({ theme }) => theme.colors.secondary};\n    border-radius: 2px;\n    text-transform: capitalize;\n    text-decoration: none;\n    color: ${({ theme }) => theme.colors.base};\n    border: 1px solid ${({ theme }) => theme.colors.secondary};\n\n    @media (hover: hover) {\n      &:hover {\n        background: ${({ theme }) => theme.colors.secondary};\n        color: ${({ theme }) => theme.colors.base};\n      }\n    }\n  }\n`;\n\n/** Displays the tags used by blog posts. */\nconst TagsPage: React.FC<TagsPageProps> = ({\n  data: {\n    allMarkdownRemark: { group },\n  },\n}) => (\n  <Layout>\n    <Seo title=\"Tags\" />\n\n    <Container>\n      <PageTitle>Tags</PageTitle>\n\n      <List>\n        {group.map(({ fieldValue, totalCount }) => (\n          <Tag key={fieldValue}>\n            <Link\n              to={`/blog/tag/${slugify(fieldValue)}/`}\n              title={`Posts tagged with ${fieldValue}`}\n            >\n              {fieldValue} ({totalCount})\n            </Link>\n          </Tag>\n        ))}\n      </List>\n    </Container>\n  </Layout>\n);\n\nexport default TagsPage;\n"],"sourceRoot":""}