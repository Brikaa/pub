{"version":3,"sources":["webpack:///./src/templates/post.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","_components__WEBPACK_IMPORTED_MODULE_1__","BlogPostTemplate","_ref","data","pageContext","post","markdownRemark","excerpt","frontmatter","fields","title","tags","date","author","image","previous","next","slug","description","twitter","fluid","childImageSharp","file","height","body","html","prefix"],"mappings":"0FAEAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KA8DaI,EAAS,aA+EPG,UAlC2C,SAAAC,GAGpD,IAFJC,EAEID,EAFJC,KACAC,EACIF,EADJE,YAEMC,EAAOF,EAAKG,eACVC,EAAiCF,EAAjCE,QAASC,EAAwBH,EAAxBG,YAAaC,EAAWJ,EAAXI,OACtBC,EAAqCF,EAArCE,MAAOC,EAA8BH,EAA9BG,KAAMC,EAAwBJ,EAAxBI,KAAMC,EAAkBL,EAAlBK,OAAQC,EAAUN,EAAVM,MAC3BC,EAAmBX,EAAnBW,SAAUC,EAASZ,EAATY,KACVC,EAASR,EAATQ,KAER,OACElB,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAKU,MAAOA,EAAOQ,YAAab,EAAKE,QAASY,QAASN,EAAOM,UAE9DpB,EAAA,cAACC,EAAA,EAAD,CACEU,MAAOA,EACPU,MACEN,EAAQA,EAAMO,gBAAgBD,MAAQjB,EAAKmB,KAAKD,gBAAgBD,MAElEG,OAAO,SAGTxB,EAAA,cAACC,EAAA,EAAD,KACED,EAAA,cAACC,EAAA,EAAD,CAAUY,KAAMA,EAAMC,OAAQA,IAC9Bd,EAAA,cAACC,EAAA,EAAD,CAAUwB,KAAMnB,EAAKoB,OACpBd,GAAQZ,EAAA,cAACC,EAAA,EAAD,CAAUW,KAAMA,IACzBZ,EAAA,cAACC,EAAA,EAAD,CAAOK,KAAM,CAAEK,QAAOO,OAAMV,cAG9BR,EAAA,cAACC,EAAA,EAAD,CAAW0B,OAAO,OAAOX,SAAUA,EAAUC,KAAMA","file":"component---src-templates-post-tsx-2e43ab2b6edbc65e4dc0.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\n\nimport {\n  Container,\n  Hero,\n  Layout,\n  PageBody,\n  PostLinks,\n  PostMeta,\n  PostTags,\n  Seo,\n  Share,\n} from '@components';\n\ninterface PostNode {\n  fields: { slug: string };\n}\n\nexport interface Author {\n  id: string;\n  name: string;\n  github: string;\n  twitter?: string;\n  bio?: string;\n  avatar?: {\n    childImageSharp: {\n      fluid: FluidObject;\n    };\n  };\n}\n\ninterface BlogPostTemplateProps {\n  data: {\n    file: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    markdownRemark: {\n      id: string;\n      excerpt: string;\n      fields: { slug: string };\n      html: string;\n      frontmatter: {\n        title: string;\n        date: string;\n        tags?: string[];\n        author: Author;\n        image: {\n          childImageSharp: {\n            fluid: FluidObject;\n          };\n        };\n      };\n    };\n  };\n  pageContext: {\n    previous: PostNode;\n    next: PostNode;\n  };\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    file(relativePath: { eq: \"default-post-image.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1800) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      fields {\n        slug\n      }\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n        author {\n          id\n          name\n          bio\n          github\n          avatar {\n            childImageSharp {\n              fluid(maxWidth: 1800) {\n                ...GatsbyImageSharpFluid\n              }\n            }\n          }\n        }\n        image {\n          childImageSharp {\n            fluid(maxWidth: 1800) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst BlogPostTemplate: React.FC<BlogPostTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const post = data.markdownRemark;\n  const { excerpt, frontmatter, fields } = post;\n  const { title, tags, date, author, image } = frontmatter;\n  const { previous, next } = pageContext;\n  const { slug } = fields;\n\n  return (\n    <Layout>\n      <Seo title={title} description={post.excerpt} twitter={author.twitter} />\n\n      <Hero\n        title={title}\n        fluid={\n          image ? image.childImageSharp.fluid : data.file.childImageSharp.fluid\n        }\n        height=\"50vh\"\n      />\n\n      <Container>\n        <PostMeta date={date} author={author} />\n        <PageBody body={post.html} />\n        {tags && <PostTags tags={tags} />}\n        <Share post={{ title, slug, excerpt }} />\n      </Container>\n\n      <PostLinks prefix=\"blog\" previous={previous} next={next} />\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n"],"sourceRoot":""}