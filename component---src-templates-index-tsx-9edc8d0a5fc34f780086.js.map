{"version":3,"sources":["webpack:///./src/templates/index.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react_helmet__WEBPACK_IMPORTED_MODULE_1__","react_helmet__WEBPACK_IMPORTED_MODULE_1___default","n","_components__WEBPACK_IMPORTED_MODULE_2__","IndexTemplate","_ref","data","pageContext","posts","allMarkdownRemark","edges","currentPage","isFirstPage","title","keywords","a","map","_ref2","i","node","featured","key","fields","slug","excerpt","fluid","frontmatter","image","childImageSharp","file","publishDate","date","context"],"mappings":"0FAEAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,8BAAAE,IAAA,IAAAC,EAAAL,EAAA,GAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAAQ,EAAAF,GAAAG,EAAAT,EAAA,KAsDaI,EAAS,aAqFPM,UA3CoD,SAAAC,GAG7D,IAFJC,EAEID,EAFJC,KACAC,EACIF,EADJE,YAEMC,EAAQF,EAAKG,kBAAkBC,MAC7BC,EAAgBJ,EAAhBI,YACFC,EAA8B,IAAhBD,EAEpB,OACEZ,EAAA,cAACI,EAAA,EAAD,KACEJ,EAAA,cAACI,EAAA,EAAD,CAAKU,MAAM,OAAOC,SAAU,CAAC,OAAQ,SAAU,aAAc,YAE3DF,GACAb,EAAA,cAACE,EAAAc,EAAD,KACEhB,EAAA,mCAAgBY,IAIpBZ,EAAA,cAACI,EAAA,EAAD,KACEJ,EAAA,cAACI,EAAA,EAAD,KACGK,EAAMQ,IAAI,SAAAC,EAAWC,GAAX,IAAGC,EAAHF,EAAGE,KAAH,OACTpB,EAAA,cAACI,EAAA,EAAD,CACEiB,SAAUR,GAAqB,IAANM,EACzBG,IAAKF,EAAKG,OAAOC,KACjBA,KAAMJ,EAAKG,OAAOC,KAClBC,QAASL,EAAKK,QACdC,MACEN,EAAKO,YAAYC,MACbR,EAAKO,YAAYC,MAAMC,gBAAgBH,MACvCnB,EAAKuB,KAAKD,gBAAgBH,MAEhCK,YAAaX,EAAKO,YAAYK,KAC9BlB,MAAOM,EAAKO,YAAYb,OAASM,EAAKG,OAAOC,WAMrDxB,EAAA,cAACI,EAAA,EAAD,CAAY6B,QAASzB","file":"component---src-templates-index-tsx-9edc8d0a5fc34f780086.js","sourcesContent":["import { graphql } from 'gatsby';\nimport { FluidObject } from 'gatsby-image';\nimport * as React from 'react';\nimport Helmet from 'react-helmet';\n\nimport {\n  Card,\n  CardList,\n  Container,\n  Layout,\n  Pagination,\n  Seo,\n} from '@components';\n\ninterface PostNode {\n  node: {\n    excerpt: string;\n    frontmatter: {\n      date: string;\n      title: string;\n      image: {\n        childImageSharp: {\n          fluid: FluidObject;\n        };\n      };\n    };\n    fields: {\n      slug: string;\n    };\n  };\n}\n\ninterface IndexTemplateProps {\n  data: {\n    site: {\n      siteMetadata: {\n        siteName: string;\n      };\n    };\n    file: {\n      childImageSharp: {\n        fluid: FluidObject;\n      };\n    };\n    allMarkdownRemark: {\n      edges: PostNode[];\n    };\n  };\n  pageContext: {\n    limit?: number;\n    skip?: number;\n    numPages?: number;\n    currentPage?: number;\n  };\n}\n\nexport const pageQuery = graphql`\n  query($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    file(relativePath: { eq: \"default-post-image.jpg\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1800) {\n          ...GatsbyImageSharpFluid\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 80)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1800) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst IndexTemplate: React.FunctionComponent<IndexTemplateProps> = ({\n  data,\n  pageContext,\n}) => {\n  const posts = data.allMarkdownRemark.edges;\n  const { currentPage } = pageContext;\n  const isFirstPage = currentPage === 1;\n\n  return (\n    <Layout>\n      <Seo title=\"Home\" keywords={['blog', 'gatsby', 'typescript', 'react']} />\n\n      {!isFirstPage && (\n        <Helmet>\n          <title>{`Page ${currentPage}`}</title>\n        </Helmet>\n      )}\n\n      <Container>\n        <CardList>\n          {posts.map(({ node }, i) => (\n            <Card\n              featured={isFirstPage && i === 0}\n              key={node.fields.slug}\n              slug={node.fields.slug}\n              excerpt={node.excerpt}\n              fluid={\n                node.frontmatter.image\n                  ? node.frontmatter.image.childImageSharp.fluid\n                  : data.file.childImageSharp.fluid\n              }\n              publishDate={node.frontmatter.date}\n              title={node.frontmatter.title || node.fields.slug}\n            />\n          ))}\n        </CardList>\n      </Container>\n\n      <Pagination context={pageContext} />\n    </Layout>\n  );\n};\n\nexport default IndexTemplate;\n"],"sourceRoot":""}