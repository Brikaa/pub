{"version":3,"sources":["webpack:///./src/components/shared/containers/main-content.tsx","webpack:///./src/pages/profile.tsx","webpack:///./src/components/shared/side-panels/container-side-panel.tsx","webpack:///./src/components/shared/containers/base-container.tsx","webpack:///./src/components/shared/containers/profile-container.tsx","webpack:///./src/components/shared/containers/settings-container.tsx","webpack:///./src/components/shared/side-panels/index.ts"],"names":["MainContent","styled","div","ProfilePage","siteMetadata","useSiteMetadata","title","description","urlSlug","path","ContainerSidePanel","theme","sizes","width","small","Summary","Image","img","MenuItem","b","props","active","colors","shadow","BaseContainer","hasBorder","Wrapper","boxes","padding","section","smallTop","ProfileContainer","id","useState","user","setUser","error","setError","isLoading","setIsLoading","displayContact","setDisplayContact","contact","setContact","selfProfile","setSelfProfile","useEffect","api","ServiceResolver","apiResolver","undefined","fetchContent","a","getUser","response","data","message","fetchContactInfo","getUserContact","userContact","email","UserAuthHelper","isUserAuthenticated","getUserId","page","type","onClick","src","profilePictureUrl","defaultProfileImage","alt","username","to","bio","style","marginTop","marginBottom","technologies","map","t","data-testid","key","name","href","SettingsContainer","children","success","setSuccess"],"mappings":"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","file":"component---src-pages-profile-tsx-462ed7bbec7750471eaf.js","sourcesContent":["import styled from 'styled-components';\n\nexport const MainContent = styled.div`\n  margin: 1.25em;\n  flex: 0.7;\n  font-size: 1em;\n`;\n","import { Router } from '@reach/router';\nimport React, { FC } from 'react';\n\nimport { Layout, Seo } from '@components/shared';\nimport { ProfileContainer } from '@components/shared/containers';\nimport { useSiteMetadata } from '@hooks';\n\nconst ProfilePage: FC = () => {\n  const siteMetadata = useSiteMetadata();\n\n  return (\n    <Layout>\n      <Seo\n        title={`Profile`}\n        description={`Profile Page For ${siteMetadata.title}`}\n        urlSlug=\"profile/\"\n      />\n      <Router>\n        <ProfileContainer path=\"profile/:id\" />\n      </Router>\n    </Layout>\n  );\n};\n\nexport default ProfilePage;\n","import styled from 'styled-components';\n\ninterface MenuItemProp {\n  readonly active?: boolean;\n}\nexport const ContainerSidePanel = styled.div`\n  flex: 0.3;\n  border: none;\n  padding-top: 2em;\n\n  @media screen and (min-width: ${({ theme }) => theme.sizes.width.small}) {\n    border-right: 1px solid lightgray;\n  }\n`;\n\nexport const Summary = styled.div`\n  color: black;\n  text-align: center;\n  width: 100%;\n  margin: 0 auto 1em;\n`;\n\nexport const Image = styled.img`\n  height: auto;\n  border-radius: 100px;\n  margin-bottom: 0;\n`;\n\nexport const Title = styled.b`\n  font-size: 16px;\n  margin-top: -10px;\n`;\n\nexport const ButtonContainer = styled.div`\n  text-align: center;\n  margin-top: 20px;\n`;\n\nexport const MenuItemContainer = styled.div`\n  margin-top: 20px;\n`;\n\nexport const MenuItem = styled.div<MenuItemProp>`\n  color: #000000;\n  font-weight: ${(props) => (props.active ? 'bold' : '400')};\n  border-left: ${(props) => (props.active ? 'black solid 2px' : '')};\n  padding: 5px 15px;\n  :hover {\n    background: ${({ theme }) => theme.colors.shadow};\n    cursor: pointer;\n  }\n`;\n","import styled from 'styled-components';\n\ntype BaseContainerProps = {\n  hasBorder?: boolean;\n};\n\nexport const BaseContainer = styled.div<BaseContainerProps>`\n  display: flex;\n  flex-direction: column;\n  margin: 0 auto;\n\n  @media screen and (min-width: ${({ theme }) => theme.sizes.width.small}) {\n    border: ${({ hasBorder }) => (hasBorder ? '1px solid lightgray' : 'none')};\n    flex-direction: row;\n  }\n`;\n","import { Link } from 'gatsby';\nimport React, { FC, Fragment, useEffect, useState } from 'react';\nimport styled from 'styled-components';\n\nimport { BaseContainer } from './base-container';\nimport { MainContent } from './main-content';\nimport { FormLabel, FeedbackForm } from '../form';\nimport { ProfileTechPill } from '../pills';\nimport { Ribbon, CloseButton } from '../ribbons';\nimport { ContainerSidePanel, Summary } from '../side-panels';\nimport {\n  ApiResponse,\n  ErrorResponse,\n  ServiceResolver,\n  User,\n  UserContact,\n} from '@api';\nimport { Loader } from '@components/shared';\nimport { UserAuthHelper } from '@helpers';\nimport { defaultProfileImage } from '@images';\nimport { Button } from '../buttons';\n\ntype ProfileContainerProps = {\n  id?: string;\n  path: string;\n};\n\nconst Image = styled.img`\n  border-radius: 50%;\n  max-width: 40%;\n  margin-bottom: 0;\n`;\n\nconst Wrapper = styled.div`\n  margin: 0 auto;\n  padding: 0;\n  min-height: 50vh;\n\n  @media screen and (min-width: ${({ theme }) => theme.sizes.width.small}) {\n    padding: ${({ theme }) => theme.boxes.padding.section.smallTop};\n  }\n`;\n\nexport const ProfileContainer: FC<ProfileContainerProps> = ({ id }) => {\n  const [user, setUser] = useState<User>();\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [displayContact, setDisplayContact] = useState(false);\n  const [contact, setContact] = useState('');\n  // indicate if profile belongs to viewing user\n  const [selfProfile, setSelfProfile] = useState(false);\n\n  useEffect(() => {\n    const api = ServiceResolver.apiResolver();\n    if (id === undefined) {\n      return;\n    }\n    const fetchContent = async () => {\n      try {\n        const response = (await api.getUser(id)) as ApiResponse<\n          User | ErrorResponse\n        >;\n\n        const user = response.data as User;\n        setUser(user);\n      } catch (err) {\n        setError(err.message);\n      }\n\n      setIsLoading(false);\n    };\n\n    const fetchContactInfo = async () => {\n      try {\n        const response = (await api.getUserContact(id)) as ApiResponse<\n          UserContact | ErrorResponse\n        >;\n\n        const userContact = response.data as UserContact;\n        setContact(userContact.email);\n        setDisplayContact(true);\n      } catch (err) {\n        setError(err.message);\n      }\n    };\n\n    fetchContent();\n    if (!UserAuthHelper.isUserAuthenticated()) {\n      return;\n    }\n\n    fetchContactInfo();\n    const authedUserId = UserAuthHelper.getUserId();\n\n    if (authedUserId === id) {\n      setSelfProfile(true);\n    }\n  }, [id]);\n\n  return (\n    <Fragment>\n      <FeedbackForm page={`/profile/${user?.id}`} />\n      <Wrapper>\n        {isLoading && <Loader />}\n        {error && (\n          <Ribbon type=\"danger\">\n            {error}{' '}\n            <CloseButton onClick={() => setError(null)}>&#10006;</CloseButton>\n          </Ribbon>\n        )}\n        {!isLoading && user && (\n          <BaseContainer>\n            <ContainerSidePanel>\n              <Summary>\n                <Image\n                  src={user.profilePictureUrl || defaultProfileImage}\n                  alt=\"Profile Picture\"\n                />\n                <Summary>{user.username}</Summary>\n                {selfProfile && (\n                  <Link to=\"/settings\">\n                    <Button>Edit Profile</Button>\n                  </Link>\n                )}\n              </Summary>\n            </ContainerSidePanel>\n            <MainContent>\n              <Fragment>\n                <FormLabel>About</FormLabel>\n                <p>{user.bio}</p>\n              </Fragment>\n\n              <Fragment>\n                <FormLabel>Technologies</FormLabel>\n                <div style={{ marginTop: '0.4em', marginBottom: '1.5em' }}>\n                  {user.technologies.map((t) => (\n                    <ProfileTechPill data-testid=\"technology\" key={t.name}>\n                      {t.name}\n                    </ProfileTechPill>\n                  ))}\n                </div>\n              </Fragment>\n\n              <FormLabel>Contact</FormLabel>\n              <p data-testid={'contact-info'}>\n                {displayContact ? (\n                  <a href={`mailto:${contact}`}>{contact}</a>\n                ) : (\n                  <Link to=\"/signin/\">Sign in to view email.</Link>\n                )}{' '}\n              </p>\n            </MainContent>\n          </BaseContainer>\n        )}\n      </Wrapper>\n    </Fragment>\n  );\n};\n","import React, { FC } from 'react';\nimport styled from 'styled-components';\n\nimport { BaseContainer } from './base-container';\nimport { Ribbon, CloseButton } from '../ribbons';\nimport { Loader } from '@components/shared';\n\ntype SettingsContainerProps = {\n  error: string | null | undefined;\n  isLoading: boolean;\n  setError: Function;\n  success: string | null | undefined;\n  setSuccess: Function;\n};\n\nconst Wrapper = styled.div`\n  padding: ${({ theme }) => theme.boxes.padding.section.smallTop};\n  width: 100%;\n  min-height: 50vh;\n\n  @media screen and (max-width: ${({ theme }) => theme.sizes.width.small}) {\n    padding: 0;\n  }\n`;\n\nexport const SettingsContainer: FC<SettingsContainerProps> = ({\n  children,\n  error,\n  setError,\n  isLoading,\n  success,\n  setSuccess,\n}) => {\n  return (\n    <Wrapper>\n      {isLoading && <Loader />}\n\n      {error && (\n        <Ribbon type=\"danger\">\n          {error}{' '}\n          <CloseButton onClick={() => setError(null)}>&#10006;</CloseButton>\n        </Ribbon>\n      )}\n\n      {success && (\n        <Ribbon type=\"success\">\n          {success}{' '}\n          <CloseButton onClick={() => setSuccess(null)}>&#10006;</CloseButton>\n        </Ribbon>\n      )}\n\n      {!isLoading && <BaseContainer hasBorder>{children}</BaseContainer>}\n    </Wrapper>\n  );\n};\n","export {\n  ContainerSidePanel,\n  Summary,\n  Image,\n  Title,\n  ButtonContainer,\n} from './container-side-panel';\n"],"sourceRoot":""}